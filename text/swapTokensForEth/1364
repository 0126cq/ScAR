"function _transfer(address from, address to, uint256 amount) internal returns (bool) {        require(from != address(0), \"ERC20: transfer from the zero address\");        require(to != address(0), \"ERC20: transfer to the zero address\");        require(amount > 0, \"Transfer amount must be greater than zero\");        if(_hasLimits(from, to)) {            if(!tradingEnabled) {                revert(\"Trading not yet enabled!\");            }            if (sameBlockActive) {                if (lpPairs[from]){                    require(lastTrade[to] != block.number);                    lastTrade[to] = block.number;                } else {                    require(lastTrade[from] != block.number);                    lastTrade[from] = block.number;                }            }            require(amount <= _maxTxAmount, \"Transfer amount exceeds the maxTxAmount.\");            if(to != _routerAddress && !lpPairs[to]) {                require(balanceOf(to) + amount <= _maxWalletSize, \"Transfer amount exceeds the maxWalletSize.\");            }        }        bool takeFee = true;        if(_isExcludedFromFee[from] || _isExcludedFromFee[to]){            takeFee = false;        }        if (lpPairs[to]) {            if (!inSwapAndLiquify                && swapAndLiquifyEnabled            ) {                uint256 contractTokenBalance = balanceOf(address(this));                if (contractTokenBalance >= swapThreshold) {                    if(contractTokenBalance >= swapAmount) { contractTokenBalance = swapAmount; }                    <mask0>;                }            }              }         return _finalizeTransfer(from, to, amount, takeFee);    }"