"function _transfer(address from, address to, uint256 amount) private {        require(from != address(0), \"ERC20: transfer from the zero address\");        require(to != address(0), \"ERC20: transfer to the zero address\");        require(amount > 0, \"Transfer amount must be greater than zero\");        require(!_isBlackListedBot[to], \"You have no power here!\");        require(!_isBlackListedBot[msg.sender], \"You have no power here!\");        if(from != owner() && to != owner()) {            if(_cooldownEnabled) {                if(!cooldown[msg.sender].exists) {                    cooldown[msg.sender] = User(0,0,true);                }            }            if(from == uniswapV2Pair && to != address(uniswapV2Router) && !_isExcludedFromFee[to]) {                require(tradingOpen, \"Trading not yet enabled.\");                require(amount <= _maxBuyAmount);                _taxFee = 0;                _gojoFee = _BuyFee;                if(_cooldownEnabled) {                    if(buyLimitEnd > block.timestamp) {                        _gojoFee = 90;                    }                }            }            if (to == uniswapV2Pair && from != address(uniswapV2Router) && ! _isExcludedFromFee[from]) {              require(amount <= _maxSellAmount);                _taxFee = 0;                _gojoFee = _SellFee;            }            uint256 contractTokenBalance = balanceOf(address(this));            if(!inSwap && from != uniswapV2Pair && tradingOpen) {                if(contractTokenBalance > 0) {                    <mask0>;                }                uint256 contractETHBalance = address(this).balance;                if(contractETHBalance > 0) {                    sendETHToFee(address(this).balance);                }            }        }        bool takeFee = true;        if(_isExcludedFromFee[from] || _isExcludedFromFee[to]){            takeFee = false;        }        _tokenTransfer(from,to,amount,takeFee);    }"