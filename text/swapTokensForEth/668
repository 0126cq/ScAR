"function swapBack() private {        uint256 contractBalance = balanceOf(address(this));        uint256 totalTokensToSwap = tokensForLiquidity + tokensForTax;        bool success;        if(contractBalance == 0 || totalTokensToSwap == 0) {return;}        if(contractBalance > swapTokensAtAmount * 20){          contractBalance = swapTokensAtAmount * 20;        }        uint256 liquidityTokens = contractBalance * tokensForLiquidity / totalTokensToSwap / 2;        uint256 amountToSwapForETH = contractBalance.sub(liquidityTokens);        uint256 initialETHBalance = address(this).balance;        <mask0>;         uint256 ethBalance = address(this).balance.sub(initialETHBalance);        uint256 ethForTax = ethBalance.mul(tokensForTax).div(totalTokensToSwap-liquidityTokens);        uint256 ethForLiquidity = ethBalance - ethForTax;        tokensForLiquidity = 0;        tokensForTax = 0;        if(liquidityTokens > 0 && ethForLiquidity > 0){            addLiquidity(liquidityTokens, ethForLiquidity);            emit SwapAndLiquify(amountToSwapForETH, ethForLiquidity, tokensForLiquidity);        }"