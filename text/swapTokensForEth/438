"function swapBack() private {        uint256 contractBalance = balanceOf(address(this));        uint256 totalTokensToSwap = tokensForLiquidity + tokensForReward + tokensForFour;        bool success;        if(contractBalance == 0 || totalTokensToSwap == 0) {return;}        if(contractBalance > swapTokensAtAmount * 10) {            contractBalance = swapTokensAtAmount * 10;        }        uint256 liquidityTokens = contractBalance * tokensForLiquidity / totalTokensToSwap / 2;        uint256 amountToSwapForETH = contractBalance.sub(liquidityTokens);        uint256 initialETHBalance = address(this).balance;        <mask0>;         uint256 ethBalance = address(this).balance.sub(initialETHBalance);        uint256 ethForReward = ethBalance.mul(tokensForReward).div(totalTokensToSwap);        uint256 ethForFour = ethBalance.mul(tokensForFour).div(totalTokensToSwap);        uint256 ethForLiquidity = ethBalance - ethForReward - ethForFour;        tokensForLiquidity = 0;        tokensForReward = 0;        tokensForFour = 0;        (success,) = address(_rewardWallet).call{value: ethForReward}(\"\");        if(liquidityTokens > 0 && ethForLiquidity > 0){            addLiquidity(liquidityTokens, ethForLiquidity);            emit SwapAndLiquify(amountToSwapForETH, ethForLiquidity, tokensForLiquidity);        }        (success,) = address(_FourWallet).call{value: address(this).balance}(\"\");    }"