"function _burn(uint256 tokenId, bool approvalCheck) internal virtual {        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);        address from = prevOwnership.addr;        if (approvalCheck) {            bool isApprovedOrOwner = (<mask0> == from ||                isApprovedForAll(from, _msgSenderERC721A()) ||                getApproved(tokenId) == _msgSenderERC721A());            if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();        }        _beforeTokenTransfers(from, address(0), tokenId, 1);        delete _tokenApprovals[tokenId];        unchecked {            AddressData storage addressData = _addressData[from];            addressData.balance -= 1;            addressData.numberBurned += 1;            TokenOwnership storage currSlot = _ownerships[tokenId];            currSlot.addr = from;            currSlot.startTimestamp = uint64(block.timestamp);            currSlot.burned = true;            uint256 nextTokenId = tokenId + 1;            TokenOwnership storage nextSlot = _ownerships[nextTokenId];            if (nextSlot.addr == address(0)) {                if (nextTokenId != _currentIndex) {                    nextSlot.addr = from;                    nextSlot.startTimestamp = prevOwnership.startTimestamp;                }            }        }        emit Transfer(from, address(0), tokenId);        _afterTokenTransfers(from, address(0), tokenId, 1);        unchecked {            _burnCounter++;        }    }"