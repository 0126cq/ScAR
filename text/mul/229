"function getStrikePrice(uint256 expiryTimestamp, bool isPut)        external        view        returns (uint256, uint256)    {        require(            expiryTimestamp > block.timestamp,            \"Expiry must be in the future!\"        );        uint256 assetPrice = optionsPremiumPricer.getUnderlyingPrice();        uint256 annualizedVol =            volatilityOracle.annualizedVol(optionsPremiumPricer.pool()).mul(                10**10            );        uint256 strike =            isPut                ? assetPrice.sub(assetPrice % step).sub(step)                : assetPrice.add(step - (assetPrice % step)).add(step);        uint256 targetDelta = isPut ? uint256(10000).sub(delta) : delta;        uint256 prevDelta = 10000;        while (true) {            uint256 currDelta =                optionsPremiumPricer.getOptionDelta(                    assetPrice.<mask0>.div(assetOracleMultiplier),                    strike,                    annualizedVol,                    expiryTimestamp                );            bool foundTargetStrikePrice =                isPut                    ? targetDelta >= prevDelta && targetDelta <= currDelta                    : targetDelta <= prevDelta && targetDelta >= currDelta;            if (foundTargetStrikePrice) {                uint256 finalDelta =                    _getBestDelta(prevDelta, currDelta, targetDelta, isPut);                uint256 finalStrike =                    _getBestStrike(finalDelta, prevDelta, strike, isPut);                require(                    isPut                        ? finalStrike <= assetPrice                        : finalStrike >= assetPrice                );                return (                    finalStrike.mul(10**8).div(assetOracleMultiplier),                    finalDelta                );            }            strike = isPut ? strike.sub(step) : strike.add(step);            prevDelta = currDelta;        }    }"