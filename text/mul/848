"function conductSushiSwap(        address sellToken,        address buyToken,        address[] memory path,        uint256 amount,        uint256 userSlippageTolerance,        uint256 deadline    )        internal        returns (uint256 amounts1)    {        if (sellToken == address(0x0) && buyToken == WETH_TOKEN_ADDRESS) {            IWETH(buyToken).deposit{value: msg.value}();            return amount;        }        if (sellToken == address(0x0)) {            uint256 amountOutMin = getAmountOutMin(path, amount, userSlippageTolerance);            sushiExchange.swapExactETHForTokens{value: msg.value}(                amountOutMin,                path,                address(this),                deadline            );        } else {            IERC20 sToken = IERC20(sellToken);            if (sToken.allowance(address(this), sushiAddress) < amount.<mask0>) {                sToken.safeIncreaseAllowance(sushiAddress, amount.mul(3));            }            uint256[] memory amounts = conductSushiSwapT4T(                path,                amount,                userSlippageTolerance,                deadline            );            uint256 resultingTokens = amounts[amounts.length - 1];            return resultingTokens;        }    }"