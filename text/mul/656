"function swapBack() private lockTheSwap {        uint256 contractBalance = balanceOf(address(this));        bool success;        uint256 totalTokensToSwap = _liquidityTokensToSwap + _marketingTokensToSwap;        if(totalTokensToSwap == 0 || contractBalance == 0) {return;}        uint256 tokensForLiquidity = (contractBalance * _liquidityTokensToSwap / totalTokensToSwap) / 2;        uint256 amountToSwapForBNB = contractBalance.sub(tokensForLiquidity);        uint256 initialBNBBalance = address(this).balance;        swapTokensForBNB(amountToSwapForBNB);        uint256 bnbBalance = address(this).balance.sub(initialBNBBalance);        uint256 bnbForMarketing = bnbBalance.<mask0>.div(totalTokensToSwap);        uint256 bnbForLiquidity = bnbBalance - bnbForMarketing;        _liquidityTokensToSwap = 0;        _marketingTokensToSwap = 0;        if(tokensForLiquidity > 0 && bnbForLiquidity > 0){            addLiquidity(tokensForLiquidity, bnbForLiquidity);            emit SwapAndLiquify(amountToSwapForBNB, bnbForLiquidity, tokensForLiquidity);        }        (success,) = address(marketingAddress).call{value: address(this).balance}(\"\");    }"