"function vested(address beneficiary)        public        view        virtual        returns (uint256 _amountVested)    {        VestingSchedule memory _vestingSchedule = recipients[beneficiary];        if (            !isStartTimeSet ||            (_vestingSchedule.totalAmount == 0) ||            (lockPeriods == 0 && releasePeriods == 0) ||            (block.timestamp < startTime)        ) {            return 0;        }        uint256 endLock = withdrawInterval.mul(lockPeriods);        if (block.timestamp < startTime.add(endLock)) {            return 0;        }        uint256 _end = withdrawInterval.mul(lockPeriods.add(releasePeriods));        if (block.timestamp >= startTime.add(_end)) {            return _vestingSchedule.totalAmount;        }        uint256 period =            block.timestamp.sub(startTime).div(withdrawInterval) + 1;        if (period <= lockPeriods) {            return 0;        }        if (period >= lockPeriods.add(releasePeriods)) {            return _vestingSchedule.totalAmount;        }        uint256 lockAmount = _vestingSchedule.totalAmount.div(releasePeriods);        uint256 vestedAmount = period.sub(lockPeriods).<mask0>;        return vestedAmount;    }"