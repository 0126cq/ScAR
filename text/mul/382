"function _accept(uint delegationId) private {        _checkIfDelegationIsAllowed(delegations[delegationId].holder, delegations[delegationId].validatorId);        State currentState = getState(delegationId);        if (currentState != State.PROPOSED) {            if (currentState == State.ACCEPTED ||                currentState == State.DELEGATED ||                currentState == State.UNDELEGATION_REQUESTED ||                currentState == State.COMPLETED)            {                revert(\"The delegation has been already accepted\");            } else if (currentState == State.CANCELED) {                revert(\"The delegation has been cancelled by token holder\");            } else if (currentState == State.REJECTED) {                revert(\"The delegation request is outdated\");            }        }        require(currentState == State.PROPOSED, \"Cannot set delegation state to accepted\");        SlashingSignal[] memory slashingSignals = _processAllSlashesWithoutSignals(delegations[delegationId].holder);        _addToAllStatistics(delegationId);        uint amount = delegations[delegationId].amount;        uint effectiveAmount = amount.<mask0>;        _getBounty().handleDelegationAdd(            effectiveAmount,            delegations[delegationId].started        );        _sendSlashingSignals(slashingSignals);        emit DelegationAccepted(delegationId);    }"