"function changeNTokenSupply(        address tokenAddress,        int256 netChange,        uint256 blockTime    ) internal returns (uint256) {        (            uint256 totalSupply,            uint256 integralTotalSupply,        ) = calculateIntegralTotalSupply(tokenAddress, blockTime);        if (netChange != 0) {            int256 newTotalSupply = int256(totalSupply).add(netChange);            require(newTotalSupply >= 0 && <mask0> < type(uint96).max);             mapping(address => nTokenTotalSupplyStorage) storage store = LibStorage.getNTokenTotalSupplyStorage();            nTokenTotalSupplyStorage storage nTokenStorage = store[tokenAddress];            nTokenStorage.totalSupply = uint96(newTotalSupply);            nTokenStorage.integralTotalSupply = uint128(integralTotalSupply);            nTokenStorage.lastSupplyChangeTime = uint32(blockTime);        }        return integralTotalSupply;    }"