"function getHistoricalFeeds(uint256[] memory feedIDs, uint256[] memory timestamps) external view returns (uint256[] memory) {        uint256 feedLen = feedIDs.length;        uint256[] memory returnPrices = new <mask0>;        require(feedIDs.length == timestamps.length, \"Feeds and Timestamps must match\");        for (uint i = 0; i < feedIDs.length; i++) {            if (subscriptionPassPrice > 0) {                if (hasPass[msg.sender] <= block.timestamp) {                    if (feedList[feedIDs[i]].revenueMode == 1 && subscribedTo[msg.sender][feedIDs[i]] < block.timestamp) {                        revert(\"No subscription to feed\");                    }                }            } else {                if (feedList[feedIDs[i]].revenueMode == 1 && subscribedTo[msg.sender][feedIDs[i]] < block.timestamp) {                    revert(\"No subscription to feed\");                }            }            uint256 roundNumber = timestamps[i] / feedList[feedIDs[i]].feedTimeslot;            returnPrices[i] =  historicalFeeds[feedIDs[i]][roundNumber];        }        return (returnPrices);    }"