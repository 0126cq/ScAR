"function mintMultiERC20Capsule(        address _capsule,        address[] calldata _tokens,        uint256[] calldata _amounts,        string calldata _uri,        address _receiver    ) external payable nonReentrant onlyCollectionMinter(_capsule) checkStatus {        uint256 tokensLength = _tokens.length;        require(tokensLength > 0 && tokensLength <= TOKEN_TYPE_LIMIT, Errors.INVALID_TOKEN_ARRAY_LENGTH);        require(_amounts.length > 0 && _amounts.length <= TOKEN_TYPE_LIMIT, Errors.INVALID_AMOUNT_ARRAY_LENGTH);        require(tokensLength == _amounts.length, Errors.LENGTH_MISMATCH);        uint256 _id = ICapsule(_capsule).counter();        uint256[] memory _actualAmounts = new <mask0>;        for (uint256 i; i < tokensLength; i++) {            address _token = _tokens[i];            uint256 _amount = _amounts[i];            require(_amount > 0, Errors.INVALID_TOKEN_AMOUNT);            require(_token != address(0), Errors.INVALID_TOKEN_ADDRESS);            _actualAmounts[i] = _depositToken(IERC20(_token), _msgSender(), _amount);        }        _multiERC20Capsule[_capsule][_id].tokenAddresses = _tokens;        _multiERC20Capsule[_capsule][_id].tokenAmounts = _actualAmounts;        ICapsule(_capsule).mint(_receiver, _uri);        emit MultiERC20CapsuleMinted(_receiver, _capsule, _tokens, _amounts, _uri);    }"