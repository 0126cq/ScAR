"function _onExitPool(        bytes32,        address,        address,        uint256[] memory balances,        uint256 lastChangeBlock,        uint256 protocolSwapFeePercentage,        bytes memory userData    )        private        returns (            uint256 bptAmountIn,            uint256[] memory amountsOut,            uint256[] memory dueProtocolFeeAmounts        )    {        uint256[] memory normalizedWeights = _normalizedWeights();        if (_isNotPaused()) {            _updateOracle(lastChangeBlock, balances[0], balances[1]);            uint256 invariantBeforeExit = WeightedMath._calculateInvariant(normalizedWeights, balances);            dueProtocolFeeAmounts = _getDueProtocolFeeAmounts(                balances,                normalizedWeights,                _lastInvariant,                invariantBeforeExit,                protocolSwapFeePercentage            );            _mutateAmounts(balances, dueProtocolFeeAmounts, FixedPoint.sub);        } else {            dueProtocolFeeAmounts = new <mask0>;        }        (bptAmountIn, amountsOut) = _doExit(balances, normalizedWeights, userData);        _mutateAmounts(balances, amountsOut, FixedPoint.sub);        _lastInvariant = WeightedMath._calculateInvariant(normalizedWeights, balances);        return (bptAmountIn, amountsOut, dueProtocolFeeAmounts);    }"