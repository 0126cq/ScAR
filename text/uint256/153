"function calcSortedContracts() public view returns (InterestInfo[] memory) {\t\taddress[] memory addresses = new address[](activeContracts.length);\t\tuint256[] memory balances = new <mask0>;\t\tInterestInfo[] memory interestInfos = new InterestInfo[](\t\t\tactiveContracts.length\t\t);\t\tuint256 tempInterest;\t\tint256 i;\t\tfor (i = 0; i < int256(activeContracts.length); i++) {\t\t\t(, , , , tempInterest) = IGoodStaking(activeContracts[uint256(i)])\t\t\t\t.currentGains(false, true);\t\t\tif (tempInterest != 0) {\t\t\t\taddresses[uint256(i)] = activeContracts[uint256(i)];\t\t\t\tbalances[uint256(i)] = tempInterest;\t\t\t}\t\t}\t\tuint256 usedGasAmount = gasCostExceptInterestCollect;\t\tquick(balances, addresses); \t\tuint256 gasCost;\t\tuint256 possibleCollected;\t\tuint256 maxGasAmount;\t\tfor (i = int256(activeContracts.length) - 1; i >= 0; i--) {\t\t\tif (addresses[uint256(i)] != address(0x0)) {\t\t\t\tgasCost = IGoodStaking(addresses[uint256(i)])\t\t\t\t\t.getGasCostForInterestTransfer();\t\t\t\tpossibleCollected += balances[uint256(i)];\t\t\t\tusedGasAmount += gasCost;\t\t\t\tmaxGasAmount = block.timestamp >=\t\t\t\t\tlastCollectedInterest + collectInterestTimeThreshold\t\t\t\t\t? (possibleCollected * 1e10) / getGasPriceIncDAIorDAI(1, true)\t\t\t\t\t: (possibleCollected * 1e10) /\t\t\t\t\t\t(interestMultiplier * getGasPriceIncDAIorDAI(1, true));\t\t\t\tinterestInfos[uint256(i)] = InterestInfo({\t\t\t\t\tcontractAddress: addresses[uint256(i)],\t\t\t\t\tinterestBalance: balances[uint256(i)],\t\t\t\t\tcollectedInterestSoFar: possibleCollected,\t\t\t\t\tgasCostSoFar: usedGasAmount,\t\t\t\t\tmaxGasAmountSoFar: maxGasAmount,\t\t\t\t\tmaxGasLargerOrEqualRequired: maxGasAmount >= usedGasAmount\t\t\t\t});\t\t\t} else {\t\t\t\tbreak; \t\t\t}\t\t}\t\treturn interestInfos;\t}"