"function getWrappedTokens(IERC20 token) external view returns (IERC20[] memory wrappedTokens, uint256[] memory rates) {        IERC20[] memory memWrappedTokens = new IERC20[](20);        uint256[] memory memRates = new uint256[](20);        uint256 len = 0;        for (uint256 i = 0; i < _wrappers._inner._values.length; i++) {            try IWrapper(uint256(_wrappers._inner._values[i])).wrap(token) returns (IERC20 wrappedToken, uint256 rate) {                memWrappedTokens[len] = wrappedToken;                memRates[len] = rate;                len += 1;                for (uint256 j = 0; j < _wrappers._inner._values.length; j++) {                    if (i != j) {                        try IWrapper(uint256(_wrappers._inner._values[j])).wrap(wrappedToken) returns (IERC20 wrappedToken2, uint256 rate2) {                            bool used = false;                            for (uint256 k = 0; k < len; k++) {                                if (wrappedToken2 == memWrappedTokens[k]) {                                    used = true;                                    break;                                }                            }                            if (!used) {                                memWrappedTokens[len] = wrappedToken2;                                memRates[len] = rate.mul(rate2).div(1e18);                                len += 1;                            }                        } catch { continue; }                    }                }            } catch { continue; }        }        wrappedTokens = new IERC20[](len + 1);        rates = new <mask0>;        for (uint256 i = 0; i < len; i++) {            wrappedTokens[i] = memWrappedTokens[i];            rates[i] = memRates[i];        }        wrappedTokens[len] = token;        rates[len] = 1e18;    }"