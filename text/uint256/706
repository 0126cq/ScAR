"function mint(uint256 amount, uint256 _maxMint, bool _hasPass, bytes calldata _signature)    external payable callerIsUser contractIsNotFrozen {        require(!_mintPause, \"Mint has not started or is paused right now\");        uint256 nextToken = tokenData.nextToken;        require(tokenData.totalTokens - nextToken >= amount, \"No tokens left to be minted\");        require(mintedTokensPerWallet[msg.sender] + amount <= _maxMint, \"Caller cannot mint more tokens\");        uint256 totalMintPrice = mintPrice * amount;        require(msg.value >= totalMintPrice, \"Not enough Ether to mint the token\");        bytes32 messageHash = generateMessageHash(msg.sender, _maxMint, _hasPass);        address recoveredWallet = ECDSA.recover(messageHash, _signature);        require(recoveredWallet == signerAddress, \"Invalid signature for the caller\");        uint256[] memory tokenIds = new <mask0>;        for (uint256 i; i < amount; i++) {            tokenIds[i] = nextToken;            nextToken++;        }        _batchMint(msg.sender, tokenIds);        mintedTokensPerWallet[msg.sender] += amount;        tokenData.nextToken += amount;    }"