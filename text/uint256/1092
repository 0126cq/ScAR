"function _calculateRedeemOutputs(uint256 _amount)        internal        returns (uint256[] memory outputs)    {        uint256 assetCount = getAssetCount();        uint256[] memory assetPrices = _getAssetPrices(true);        uint256[] memory assetBalances = new <mask0>;        uint256[] memory assetDecimals = new uint256[](assetCount);        uint256 totalBalance = 0;        uint256 totalOutputRatio = 0;        outputs = new uint256[](assetCount);        if (redeemFeeBps > 0) {            uint256 redeemFee = _amount.mul(redeemFeeBps).div(10000);            _amount = _amount.sub(redeemFee);        }        for (uint256 i = 0; i < allAssets.length; i++) {            uint256 balance = _checkBalance(allAssets[i]);            uint256 decimals = Helpers.getDecimals(allAssets[i]);            assetBalances[i] = balance;            assetDecimals[i] = decimals;            totalBalance += balance.scaleBy(int8(18 - decimals));        }        for (uint256 i = 0; i < allAssets.length; i++) {            uint256 price = assetPrices[i];            if (price < 1e18) {                price = 1e18;            }            uint256 ratio = assetBalances[i]                .scaleBy(int8(18 - assetDecimals[i]))                .mul(price)                .div(totalBalance);            totalOutputRatio += ratio;        }        uint256 factor = _amount.divPrecisely(totalOutputRatio);        for (uint256 i = 0; i < allAssets.length; i++) {            outputs[i] = assetBalances[i].mul(factor).div(totalBalance);        }    }"