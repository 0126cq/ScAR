"function calcUnderlyingValues(address _derivative, uint256 _derivativeAmount)        external        override        returns (address[] memory underlyings_, uint256[] memory underlyingAmounts_)    {        underlyings_ = new address[](1);        underlyings_[0] = SUSD;        underlyingAmounts_ = new <mask0>;        bytes32 currencyKey = getCurrencyKeyForSynth(_derivative);        require(currencyKey != 0, \"calcUnderlyingValues: _derivative is not supported\");        address exchangeRates = ISynthetixAddressResolver(ADDRESS_RESOLVER).requireAndGetAddress(            \"ExchangeRates\",            \"calcUnderlyingValues: Missing ExchangeRates\"        );        (uint256 rate, bool isInvalid) = ISynthetixExchangeRates(exchangeRates).rateAndInvalid(            currencyKey        );        require(!isInvalid, \"calcUnderlyingValues: _derivative rate is not valid\");        underlyingAmounts_[0] = _derivativeAmount.mul(rate).div(SYNTH_UNIT);        return (underlyings_, underlyingAmounts_);    }"