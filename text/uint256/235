"function changeNTokenSupply(        address tokenAddress,        int256 netChange,        uint256 blockTime    ) internal returns (uint256) {        (            uint256 totalSupply,            uint256 accumulatedNOTEPerNToken,        ) = getUpdatedAccumulatedNOTEPerNToken(tokenAddress, blockTime);        mapping(address => nTokenTotalSupplyStorage) storage store = LibStorage.getNTokenTotalSupplyStorage();        nTokenTotalSupplyStorage storage nTokenStorage = store[tokenAddress];        int256 newTotalSupply = int256(totalSupply).add(netChange);        require(0 <= newTotalSupply && <mask0> < type(uint96).max);         nTokenStorage.totalSupply = uint96(newTotalSupply);        nTokenStorage.accumulatedNOTEPerNToken = uint128(accumulatedNOTEPerNToken);        require(blockTime < type(uint32).max);         nTokenStorage.lastAccumulatedTime = uint32(blockTime);        return accumulatedNOTEPerNToken;    }"