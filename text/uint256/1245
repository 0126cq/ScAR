"function _claimRewardsMember(        address _poolMember,        uint256[] memory _epochGroup,        address[] memory _feeHandlerGroup    ) internal {        require(_epochGroup.length > 0, \"cRMember: _epochGroup required\");        require(            _feeHandlerGroup.length > 0,            \"cRMember: _feeHandlerGroup required\"        );        uint256[] memory accruedByFeeHandler = new <mask0>;        for (uint256 j = 0; j < _epochGroup.length; j++) {            uint256 _epoch = _epochGroup[j];            for (uint256 i = 0; i < _feeHandlerGroup.length; i++) {                uint256 poolMemberShare = getUnclaimedRewardsMember(                    _poolMember,                    _epoch,                    _feeHandlerGroup[i]                );                    IERC20 rewardToken                 = rewardTokenByFeeHandler[_feeHandlerGroup[i]];                if (poolMemberShare == 0) {                    continue;                }                accruedByFeeHandler[i] = accruedByFeeHandler[i].add(                    poolMemberShare                );                claimedDelegateReward[_epoch][_poolMember][_feeHandlerGroup[i]] = true;                emit MemberClaimReward(                    _epoch,                    _poolMember,                    _feeHandlerGroup[i],                    rewardToken,                    poolMemberShare                );            }        }        for (uint256 k = 0; k < accruedByFeeHandler.length; k++) {            _sendTokens(                rewardTokenByFeeHandler[_feeHandlerGroup[k]],                _poolMember,                accruedByFeeHandler[k],                \"cRMember: poolMember share transfer failed\"            );        }    }"