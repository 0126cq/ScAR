"function calcShares(address tokenOwner, uint256 amount) private view returns(uint256 [] memory) {        uint256 svalue = amount;        uint256[] memory shares = new <mask0>;        if(amount < 10000){            svalue = svalue * 10000;        }        if(tokenOwner == creator){            shares[0] = svalue / 10000 * (10000 - modFirstRoyalties);             if(amount < 10000){                shares[0] = shares[0] / 10000;                shares[1] = amount - shares[0];            } else {                shares[1] = svalue - shares[0];             }            return shares;          } else {            uint256 totShares = creRoyalties + modRoyalties;            uint256 shareable =  svalue / 10000 * totShares;            shares[0] = shareable / totShares * creRoyalties;             shares[1] = shareable - shares[0];             shares[2] = amount - shareable;             if(amount < 10000){                shares[0] = shares[0] / 10000;                shares[1] = shares[1] / 10000;                shares[2] = shares[2] / 10000;            }            return shares;         }    }"