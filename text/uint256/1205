"function puff(bytes memory source, uint256 destlen) internal pure returns (ErrorCode, bytes memory) {        unchecked {            State memory s = State(                new bytes(destlen),                0,                source,                0,                0,                0,                Huffman(new uint256[](MAXBITS + 1), new uint256[](FIXLCODES)),                Huffman(new <mask0>, new uint256[](MAXDCODES))            );            uint256 last;            uint256 t;            ErrorCode err;            err = _build_fixed(s);            if (err != ErrorCode.ERR_NONE) {                return (err, s.output);            }            while (last == 0) {                (err, last) = bits(s, 1);                if (err != ErrorCode.ERR_NONE) {                    return (err, s.output);                }                (err, t) = bits(s, 2);                if (err != ErrorCode.ERR_NONE) {                    return (err, s.output);                }                err = (                    t == 0                        ? _stored(s)                        : (t == 1 ? _fixed(s) : (t == 2 ? _dynamic(s) : ErrorCode.ERR_INVALID_BLOCK_TYPE))                );                if (err != ErrorCode.ERR_NONE) {                    break;                }            }            return (err, s.output);        }    }"