"function _getReward(address rewardee, address destination_address, bool do_extra_logic) internal updateRewardAndBalance(rewardee, true) returns (uint256[] memory rewards_before) {        lastRewardClaimTime[rewardee] = block.timestamp;        require(rewardsCollectionPaused == false, \"Rewards collection paused\");        rewards_before = new <mask0>;        for (uint256 i = 0; i < rewardTokens.length; i++){             rewards_before[i] = rewards[rewardee][i];            rewards[rewardee][i] = 0;            if (rewards_before[i] > 0) {                TransferHelper.safeTransfer(rewardTokens[i], destination_address, rewards_before[i]);                emit RewardPaid(rewardee, rewards_before[i], rewardTokens[i], destination_address);            }        }        if (do_extra_logic) {            _getRewardExtraLogic(rewardee, destination_address);        }    }"