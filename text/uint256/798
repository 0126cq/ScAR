"function adoptAlpaca(uint256 _count)        public        payable        whenInProgress        nonReentrant    {        require(_count > 0, \"AlpacaPresale: must adopt at least one alpaca\");        address account = msg.sender;        uint256 credit = canAdoptCount(account);        require(            _count <= credit,            \"AlpacaPresale: adoption count larger than maximum adoption limit\"        );        require(            msg.value >= getAdoptionPrice(_count),            \"AlpacaPresale: insufficient funds\"        );        uint256[] memory ids = new <mask0>;        uint256[] memory counts = new uint256[](_count);        for (uint256 i = 0; i < _count; i++) {            ids[i] = _randRemoveAlpaca();            counts[i] = 1;        }        accountAddoptionCount[account] += _count;        cryptoAlpaca.safeBatchTransferFrom(            address(this),            account,            ids,            counts,            \"\"        );    }"