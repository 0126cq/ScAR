"function _calculateSwap(        IERC20Upgradeable fromToken,        IERC20Upgradeable destToken,        uint256[] memory amounts,        IUniswapV2Factory exchangeInstance    ) internal view returns (uint256[] memory rets, uint256 gas) {        rets = new <mask0>;        IERC20Upgradeable fromTokenReal = fromToken.isETH() ? wnative : fromToken;        IERC20Upgradeable destTokenReal = destToken.isETH() ? wnative : destToken;        IUniswapV2Exchange exchange = exchangeInstance.getPair(fromTokenReal, destTokenReal);        if (exchange != IUniswapV2Exchange(address(0))) {            uint256 fromTokenBalance = fromTokenReal.universalBalanceOf(address(exchange));            uint256 destTokenBalance = destTokenReal.universalBalanceOf(address(exchange));            for (uint256 i = 0; i < amounts.length; i++) {                rets[i] = _calculateUniswapFormula(fromTokenBalance, destTokenBalance, amounts[i]);            }            return (rets, 50_000);        }    }"