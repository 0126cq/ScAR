"function withdraw(uint256 _pid, uint256 _amount) public {        PoolInfo storage pool = poolInfo[_pid];        UserInfo storage user = userInfo[_pid][msg.sender];        require(user.amount >= _amount, \"withdraw: not good\");        updatePool(_pid);        uint256 pending = user.amount.mul(pool.accGyudonPerShare).div(1e12).sub(user.rewardDebt);        safeGyudonTransfer(msg.sender, pending);        user.amount = user.amount.sub(_amount);        user.rewardDebt = user.amount.mul(pool.accGyudonPerShare).div(1e12);        if (pool.taxable) {            pool.lpToken.safeTransfer(address(devaddr), _amount.mul(15).div(10000));            pool.lpToken.<mask0>;            emit Withdraw(devaddr, _pid,  _amount.mul(25).div(10000));               emit Withdraw(msg.sender, _pid, _amount.sub(_amount.mul(25).div(10000)));        } else {            pool.lpToken.safeTransfer(address(msg.sender), _amount);            emit Withdraw(msg.sender, _pid, _amount);        }    }"