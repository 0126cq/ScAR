"function triggerDefault() external {        _whenProtocolNotPaused();        _isValidState(State.Active);        require(LoanLib.canTriggerDefault(nextPaymentDue, defaultGracePeriod, superFactory, balanceOf(msg.sender), totalSupply()), \"L:FAILED_TO_LIQ\");        (amountLiquidated, amountRecovered) = LoanLib.liquidateCollateral(collateralAsset, address(liquidityAsset), superFactory, collateralLocker);        _emitBalanceUpdateEventForCollateralLocker();        if (amountRecovered <= principalOwed) {            principalOwed   = principalOwed.sub(amountRecovered);            defaultSuffered = principalOwed;        }        else {            liquidationExcess = amountRecovered.sub(principalOwed);            principalOwed = 0;            liquidityAsset.<mask0>;          }        updateFundsReceived();        loanState = State.Liquidated;        emit Liquidation(            amountLiquidated,              amountRecovered,               liquidationExcess,             defaultSuffered            );        emit LoanStateChanged(State.Liquidated);    }"