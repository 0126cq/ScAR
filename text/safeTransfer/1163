"function muxRebalanceCallback(        address token0,        address token1,        uint256 rawAmount0,        uint256 minRawAmount1,        bytes32 data    ) external override onlyLiquidityPool {        (Method method, uint64 orderId, ) = _parseUserData(data);        bytes storage context = orderContext[orderId];        if (method == Method.Simple) {        } else if (method == Method.OneInch) {            address oneInch = _getOneInchContract();            IERC20Upgradeable(token0).approve(oneInch, rawAmount0);            uint256 rawAmount1Old = IERC20Upgradeable(token1).balanceOf(address(this));            AddressUpgradeable.functionCall(oneInch, context, \"1inch failed\");            uint256 rawAmount1New = IERC20Upgradeable(token1).balanceOf(address(this));            require(rawAmount1New >= rawAmount1Old && rawAmount1New - rawAmount1Old >= minRawAmount1, \"1inch slippage\");        }        IERC20Upgradeable(token1).<mask0>;        _orderIds.remove(orderId);        delete (orderContext[orderId]);    }"