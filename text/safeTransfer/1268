"function settleExpired()        external        onlyPostExpiration()        fees()        nonReentrant()        returns (FixedPoint.Unsigned memory amountWithdrawn)    {        require(contractState != ContractState.Open, \"Unexpired position\");        if (contractState != ContractState.ExpiredPriceReceived) {            expiryPrice = _getOraclePriceExpiration(expirationTimestamp);            contractState = ContractState.ExpiredPriceReceived;        }        FixedPoint.Unsigned memory tokensToRedeem = FixedPoint.Unsigned(tokenCurrency.balanceOf(msg.sender));        FixedPoint.Unsigned memory totalRedeemableCollateral = tokensToRedeem.mul(expiryPrice);        PositionData storage positionData = positions[msg.sender];        if (_getFeeAdjustedCollateral(positionData.rawCollateral).isGreaterThan(0)) {            FixedPoint.Unsigned memory tokenDebtValueInCollateral = positionData.tokensOutstanding.mul(expiryPrice);            FixedPoint.Unsigned memory positionCollateral = _getFeeAdjustedCollateral(positionData.rawCollateral);            FixedPoint.Unsigned memory positionRedeemableCollateral =                tokenDebtValueInCollateral.isLessThan(positionCollateral)                    ? positionCollateral.sub(tokenDebtValueInCollateral)                    : FixedPoint.Unsigned(0);            totalRedeemableCollateral = totalRedeemableCollateral.add(positionRedeemableCollateral);            delete positions[msg.sender];            emit EndedSponsorPosition(msg.sender);        }        FixedPoint.Unsigned memory payout =            FixedPoint.min(_getFeeAdjustedCollateral(rawTotalPositionCollateral), totalRedeemableCollateral);        amountWithdrawn = _removeCollateral(rawTotalPositionCollateral, payout);        totalTokensOutstanding = totalTokensOutstanding.sub(tokensToRedeem);        emit SettleExpiredPosition(msg.sender, amountWithdrawn.rawValue, tokensToRedeem.rawValue);        collateralCurrency.<mask0>;        tokenCurrency.safeTransferFrom(msg.sender, address(this), tokensToRedeem.rawValue);        tokenCurrency.burn(tokensToRedeem.rawValue);    }"