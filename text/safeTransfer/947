"function claimRewardToken(uint256 _pid) public {        PoolInfo storage pool = poolInfo[_pid];        if (pool.shutdown) return;        bool remarkTag = false;        uint256 extraRewardsLength = IConvexRewardPool(pool.rewardCrvPool).extraRewardsLength();        uint256 originExtraRewardsLength = IOriginConvexRewardPool(pool.originCrvRewards).extraRewardsLength();        if (extraRewardsLength == originExtraRewardsLength) {            IOriginConvexRewardPool(pool.originCrvRewards).getReward(address(this), true);            for (uint256 i = 0; i < extraRewardsLength; i++) {                address currentExtraReward = IConvexRewardPool(pool.rewardCrvPool).extraRewards(i);                address originExtraReward = IOriginConvexRewardPool(pool.originCrvRewards).extraRewards(i);                address originExtraRewardToken = IOriginConvexVirtualBalanceRewardPool(originExtraReward).rewardToken();                IOriginConvexVirtualBalanceRewardPool(originExtraReward).getReward(address(this));                uint256 extraBalance = IERC20(originExtraRewardToken).balanceOf(address(this));                if (extraBalance > 0) {                    IERC20(originExtraRewardToken).safeTransfer(currentExtraReward, extraBalance);                    IConvexRewardPool(currentExtraReward).notifyRewardAmount(extraBalance);                }            }        } else {            remarkTag = true;            IOriginConvexRewardPool(pool.originCrvRewards).getReward(address(this), false);        }        uint256 crvBalance = IERC20(rewardCrvToken).balanceOf(address(this));        if (crvBalance > 0) {            IERC20(rewardCrvToken).<mask0>;            IConvexRewardPool(pool.rewardCrvPool).notifyRewardAmount(crvBalance);        }        uint256 cvxBal = IERC20(rewardCvxToken).balanceOf(address(this));        if (cvxBal > 0) {            IERC20(rewardCvxToken).safeTransfer(pool.rewardCvxPool, cvxBal);            IConvexRewardPool(pool.rewardCvxPool).notifyRewardAmount(cvxBal);        }        emit ClaimRewardToken(_pid, remarkTag);    }"