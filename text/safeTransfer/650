"function ZapIn(        address _toWhomToIssue,        address _FromTokenContractAddress,        address _ToUnipoolToken0,        address _ToUnipoolToken1,        uint256 _amount,        uint256 _minPoolTokens    ) public payable nonReentrant stopInEmergency returns (uint256) {        uint256 toInvest;        if (_FromTokenContractAddress == address(0)) {            require(msg.value > 0, \"Error: ETH not sent\");            toInvest = msg.value;        } else {            require(msg.value == 0, \"Error: ETH sent\");            require(_amount > 0, \"Error: Invalid ERC amount\");            IERC20(_FromTokenContractAddress).safeTransferFrom(                msg.sender,                address(this),                _amount            );            toInvest = _amount;        }        uint256 LPBought = _performZapIn(            _toWhomToIssue,            _FromTokenContractAddress,            _ToUnipoolToken0,            _ToUnipoolToken1,            toInvest        );        require(LPBought >= _minPoolTokens, \"ERR: High Slippage\");        address _ToUniPoolAddress = UniSwapV2FactoryAddress.getPair(            _ToUnipoolToken0,            _ToUnipoolToken1        );        uint256 goodwillPortion = _transferGoodwill(            _ToUniPoolAddress,            LPBought        );        IERC20(_ToUniPoolAddress).<mask0>;        return SafeMath.sub(LPBought, goodwillPortion);    }"