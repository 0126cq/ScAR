"function ZapOut(        address _ToTokenContractAddress,        address _FromUniPoolAddress,        uint256 _IncomingLP,        uint256 _minTokensRec,        address[] memory _swapTarget,        bytes memory swap1Data,        bytes memory swap2Data,        address affiliate    ) public nonReentrant stopInEmergency returns (uint256 tokenBought) {        (uint256 amountA, uint256 amountB) = _removeLiquidity(            _FromUniPoolAddress,            _IncomingLP        );        tokenBought = _swapTokens(            _FromUniPoolAddress,            amountA,            amountB,            _ToTokenContractAddress,            _swapTarget,            swap1Data,            swap2Data        );        require(tokenBought >= _minTokensRec, \"High slippage\");        emit zapOut(            msg.sender,            _FromUniPoolAddress,            _ToTokenContractAddress,            tokenBought        );        uint256 totalGoodwillPortion;        if (_ToTokenContractAddress == address(0)) {            totalGoodwillPortion = _subtractGoodwill(                ETHAddress,                tokenBought,                affiliate            );            msg.sender.transfer(tokenBought.sub(totalGoodwillPortion));        } else {            totalGoodwillPortion = _subtractGoodwill(                _ToTokenContractAddress,                tokenBought,                affiliate            );            IERC20(_ToTokenContractAddress).<mask0>;        }        return tokenBought.sub(totalGoodwillPortion);    }"