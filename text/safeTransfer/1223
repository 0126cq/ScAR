"function safeTransferWithFee(        address payable from,        address payable to,        address token,        uint256 amount,        uint256 platformFeeBps,        address payable platformWallet    ) internal returns (uint256 amountTransferred) {        uint256 fee = amount.mul(platformFeeBps).div(BPS);        uint256 amountAfterFee = amount.sub(fee);        IERC20Ext tokenErc = IERC20Ext(token);        if (tokenErc == ETH_TOKEN_ADDRESS) {            (bool success, ) = to.call{value: amountAfterFee}(\"\");            require(success, \"transfer failed\");            amountTransferred = amountAfterFee;        } else {            uint256 balanceBefore = tokenErc.balanceOf(to);            if (from != address(this)) {                tokenErc.safeTransferFrom(from, to, amountAfterFee);                tokenErc.safeTransferFrom(from, address(this), fee);            } else {                tokenErc.<mask0>;            }            amountTransferred = tokenErc.balanceOf(to).sub(balanceBefore);        }        addFeeToPlatform(platformWallet, tokenErc, fee);    }"