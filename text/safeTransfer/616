"function executeWithdrawal()        external        isInitialized()        fees()        nonReentrant()        returns (FixedPoint.Unsigned memory amountWithdrawn)    {        DepositBoxData storage depositBoxData = depositBoxes[msg.sender];        require(            depositBoxData.requestPassTimestamp != 0 && depositBoxData.requestPassTimestamp <= getCurrentTime(),            \"Invalid withdraw request\"        );        FixedPoint.Unsigned memory exchangeRate = _getOraclePrice(depositBoxData.requestPassTimestamp);        FixedPoint.Unsigned memory denominatedAmountToWithdraw =            depositBoxData.withdrawalRequestAmount.div(exchangeRate);        if (denominatedAmountToWithdraw.isGreaterThan(_getFeeAdjustedCollateral(depositBoxData.rawCollateral))) {            denominatedAmountToWithdraw = _getFeeAdjustedCollateral(depositBoxData.rawCollateral);            emit EndedDepositBox(msg.sender);        }        amountWithdrawn = _decrementCollateralBalances(depositBoxData, denominatedAmountToWithdraw);        emit RequestWithdrawalExecuted(            msg.sender,            amountWithdrawn.rawValue,            exchangeRate.rawValue,            depositBoxData.requestPassTimestamp        );        _resetWithdrawalRequest(depositBoxData);        collateralCurrency.<mask0>;    }"