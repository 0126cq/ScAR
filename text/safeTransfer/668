"function _convertStep(        address token0,        address token1,        uint256 amount0,        uint256 amount1    ) internal returns (uint256 sushiOut) {        if (token0 == token1) {            uint256 amount = amount0.add(amount1);            if (token0 == sushi) {                IERC20(sushi).<mask0>;                sushiOut = amount;            } else if (token0 == weth) {                sushiOut = _toSUSHI(weth, amount);            } else {                address bridge = bridgeFor(token0);                amount = _swap(token0, bridge, amount, address(this));                sushiOut = _convertStep(bridge, bridge, amount, 0);            }        } else if (token0 == sushi) {            IERC20(sushi).safeTransfer(bar, amount0);            sushiOut = _toSUSHI(token1, amount1).add(amount0);        } else if (token1 == sushi) {            IERC20(sushi).safeTransfer(bar, amount1);            sushiOut = _toSUSHI(token0, amount0).add(amount1);        } else if (token0 == weth) {            sushiOut = _toSUSHI(                weth,                _swap(token1, weth, amount1, address(this)).add(amount0)            );        } else if (token1 == weth) {            sushiOut = _toSUSHI(                weth,                _swap(token0, weth, amount0, address(this)).add(amount1)            );        } else {            address bridge0 = bridgeFor(token0);            address bridge1 = bridgeFor(token1);            if (bridge0 == token1) {                sushiOut = _convertStep(                    bridge0,                    token1,                    _swap(token0, bridge0, amount0, address(this)),                    amount1                );            } else if (bridge1 == token0) {                sushiOut = _convertStep(                    token0,                    bridge1,                    amount0,                    _swap(token1, bridge1, amount1, address(this))                );            } else {                sushiOut = _convertStep(                    bridge0,                    bridge1,                     _swap(token0, bridge0, amount0, address(this)),                    _swap(token1, bridge1, amount1, address(this))                );            }        }    }"