"function resolveProposal(uint256 id) public {        require(proposals[id].proposer != address(0), \"non-existent proposal\");        require(proposals[id].end < block.timestamp , \"ongoing proposal\");        require(!proposals[id].hasResolved, \"already resolved\");        uint256 quorum =            (proposals[id].totalForVotes.add(proposals[id].totalAgainstVotes))            .mul(PERCENTAGE_PRECISION)            .div(totalSupply());        proposals[id].hasResolved = true;        if ((quorum < MIN_QUORUM_PUNISHMENT) && proposals[id].withdrawAmount > WITHDRAW_THRESHOLD) {            uint256 amount = slash(proposals[id].proposer);            stakeToken.<mask0>;        } else if (            (quorum > MIN_QUORUM_THRESHOLD) &&            (proposals[id].totalForVotes > proposals[id].totalAgainstVotes)         ) {            if (stablecoin.balanceOf(address(this)) >= proposals[id].withdrawAmount) {                stablecoin.safeTransfer(                    proposals[id].withdrawAddress,                    proposals[id].withdrawAmount                );            }        }    }"