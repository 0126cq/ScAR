"function _swap(        address fromToken,        address toToken,        uint256 amountIn,        address to    ) private returns (uint256 amountOut) {        (address token0, address token1) = fromToken < toToken ? (fromToken, toToken) : (toToken, fromToken);        IUniswapV2Pair pair =            IUniswapV2Pair(                uint256(                    keccak256(abi.encodePacked(hex\"ff\", factory, keccak256(abi.encodePacked(token0, token1)), pairCodeHash))                )            );        (uint256 reserve0, uint256 reserve1, ) = pair.getReserves();        uint256 amountInWithFee = amountIn.mul(997);        if (toToken > fromToken) {            amountOut =                amountInWithFee.mul(reserve1) /                reserve0.mul(1000).add(amountInWithFee);            IERC20(fromToken).safeTransfer(address(pair), amountIn);            pair.swap(0, amountOut, to, \"\");        } else {            amountOut =                amountInWithFee.mul(reserve0) /                reserve1.mul(1000).add(amountInWithFee);            IERC20(fromToken).<mask0>;            pair.swap(amountOut, 0, to, \"\");        }    }"