"function deposit(address _token, uint256 _amount) external {        if (supportedTokens.contains(_token) == false) {            IERC20Upgradeable(_token).safeTransferFrom(msg.sender, address(this), _amount);            (, address primaryToken) = ILiquidityHandler(liquidityHandler).getAdapterCoreTokensFromIbAlluo(address(this));            IERC20Upgradeable(_token).safeIncreaseAllowance(exchangeAddress, _amount);            _amount = IExchange(exchangeAddress).exchange(_token, primaryToken, _amount, 0);            _token = primaryToken;            IERC20Upgradeable(primaryToken).<mask0>;        } else {            IERC20Upgradeable(_token).safeTransferFrom(msg.sender,address(liquidityHandler),_amount);        }        updateRatio();        ILiquidityHandler(liquidityHandler).deposit(_token, _amount);        uint256 amountIn18 = _amount * 10**(18 - AlluoERC20Upgradable(_token).decimals());        uint256 adjustedAmount = (amountIn18 * multiplier) / growingRatio;        _mint(msg.sender, adjustedAmount);        emit TransferAssetValue(address(0), msg.sender, adjustedAmount, amountIn18, growingRatio);        emit Deposited(msg.sender, _token, _amount);    }"