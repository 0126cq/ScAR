"function _allocate() internal {        uint256 vaultValue = _totalValueInVault();        if (vaultValue == 0) return;        uint256 strategiesValue = _totalValueInStrategies();        uint256 calculatedTotalValue = vaultValue.add(strategiesValue);        uint256 vaultBufferModifier;        if (strategiesValue == 0) {            vaultBufferModifier = uint256(1e18).sub(vaultBuffer);        } else {            vaultBufferModifier = vaultBuffer.mul(calculatedTotalValue).div(                vaultValue            );            if (1e18 > vaultBufferModifier) {                vaultBufferModifier = uint256(1e18).sub(vaultBufferModifier);            } else {                return;            }        }        if (vaultBufferModifier == 0) return;        for (uint256 i = 0; i < allAssets.length; i++) {            IERC20 asset = IERC20(allAssets[i]);            uint256 assetBalance = asset.balanceOf(address(this));            if (assetBalance == 0) continue;            uint256 allocateAmount = assetBalance.mulTruncate(                vaultBufferModifier            );            address depositStrategyAddr = assetDefaultStrategies[                address(asset)            ];            if (depositStrategyAddr != address(0) && allocateAmount > 0) {                IStrategy strategy = IStrategy(depositStrategyAddr);                asset.<mask0>;                strategy.deposit(address(asset), allocateAmount);                emit AssetAllocated(                    address(asset),                    depositStrategyAddr,                    allocateAmount                );            }        }        address _trusteeAddress = trusteeAddress;         if (_trusteeAddress != address(0)) {            IBuyback(trusteeAddress).swap();        }    }"