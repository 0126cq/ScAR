"function buyCover(        uint16[] memory products,        uint16[] memory durationInDays,        uint256[] memory amounts,        address currency,        address owner,        uint256 referralCode,        uint256 premiumAmount,        uint256[] memory helperParameters,        uint256[] memory securityParameters,        uint8[] memory v,        bytes32[] memory r,        bytes32[] memory s    ) external payable override whenNotPaused nonReentrant {        require(products.length == durationInDays.length, \"BC: 1\");        require(products.length == amounts.length, \"BC: 2\");        require(ICoverConfig(cfg).isValidCurrency(currency), \"BC: 3\");        require(owner != address(0), \"BC: 4\");        require(address(uint160(referralCode)) != address(0), \"BC: 5\");        require(helperParameters.length == 4, \"BC: 6\");        require(securityParameters.length == 2, \"BC: 7\");        require((block.number >= securityParameters[0]) && (block.number - securityParameters[0] <= buyCoverMaxBlkNumLatency), \"BC: 8\");        require(_checkSignature(address(this), products, durationInDays, amounts, currency, owner, referralCode, premiumAmount, helperParameters, securityParameters, v, r, s), \"BC: 9\");        require(!buyCoverNonceFlagMap[owner][securityParameters[1]], \"BC: 10\");        buyCoverNonceFlagMap[owner][securityParameters[1]] = true;        if (currency == Constant.BCNATIVETOKENADDRESS) {            require(premiumAmount <= msg.value, \"BC: 11\");            IPremiumPool(premiumPool).addPremiumAmount{value: premiumAmount}(currency, premiumAmount);        } else {            require(IERC20Upgradeable(currency).balanceOf(_msgSender()) >= premiumAmount, \"BC: 12\");            require(IERC20Upgradeable(currency).allowance(_msgSender(), address(this)) >= premiumAmount, \"BC: 13\");            IERC20Upgradeable(currency).safeTransferFrom(_msgSender(), address(this), premiumAmount);            IERC20Upgradeable(currency).<mask0>;            IPremiumPool(premiumPool).addPremiumAmount(currency, premiumAmount);        }        _processCovers(products, durationInDays, amounts, currency, owner, referralCode, premiumAmount, helperParameters);    }"