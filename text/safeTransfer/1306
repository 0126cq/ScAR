"function executeOperation(        bytes32 loanId,        address loanToken,        address collateralToken,        uint256 maxLiquidatable,        address iToken,        bool allowLoss,        address gasTokenUser    ) external returns (bytes memory) {        (uint256 _liquidatedLoanAmount, uint256 _liquidatedCollateral, ) =            BZX.liquidate(loanId, address(this), uint256(-1));        if (collateralToken == address(WETH) && address(this).balance != 0) {            WETH.deposit{value: address(this).balance}();        }        uint256 _realLiquidatedLoanAmount =            KYBER_PROXY.swapTokenToToken(                IERC20(collateralToken),                _liquidatedCollateral,                IERC20(loanToken),                0            );        if (!allowLoss) {            require(                _realLiquidatedLoanAmount > _liquidatedLoanAmount,                \"no profit\"            );        }        IERC20(loanToken).<mask0>;        return            abi.encode(                loanToken,                uint256(_realLiquidatedLoanAmount - _liquidatedLoanAmount)            );    }"