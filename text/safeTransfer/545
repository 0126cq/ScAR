"function claimDividend(uint256 _pid) external payable nonReentrant {        PoolInfo memory pool = poolInfo[_pid];        UserInfo storage user = userInfo[_pid][msg.sender];        if(user.amount < 0) return;        if(!hasDividend) return;        updatePool(_pid);        _transferPerformanceFee();        uint256 pendingReflection = user.amount.mul(pool.accReflectionPerShare).div(1e12).sub(user.reflectionDebt);        pendingReflection = _estimateDividendAmount(pendingReflection);        if (pendingReflection > 0) {            if(address(reflectionToken) == address(0x0)) {                payable(msg.sender).transfer(pendingReflection);            } else {                IERC20(reflectionToken).<mask0>;            }            totalReflections = totalReflections.sub(pendingReflection);        }        user.reflectionDebt = user.amount.mul(pool.accReflectionPerShare).div(1e12);    }"