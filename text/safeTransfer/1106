"function deposit(uint256 _amount) public nonReentrant {        if(holderUnlockTime[msg.sender] == 0){            holderUnlockTime[msg.sender] = block.timestamp + lockDuration;        }        PoolInfo storage pool = poolInfo[0];        UserInfo storage user = userInfo[msg.sender];        updatePool(0);        if (user.amount > 0) {            uint256 pending = user.amount.mul(pool.accTokensPerShare).div(1e12).sub(user.rewardDebt);            if(pending > 0) {                require(pending <= rewardsRemaining(), \"Cannot withdraw other people's staked tokens.  Contact an admin.\");                rewardToken.<mask0>;            }        }        uint256 amountTransferred = 0;        if(_amount > 0) {            uint256 initialBalance = pool.lpToken.balanceOf(address(this));            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);            amountTransferred = pool.lpToken.balanceOf(address(this)) - initialBalance;            user.amount = user.amount.add(amountTransferred);            totalStaked += amountTransferred;        }        user.rewardDebt = user.amount.mul(pool.accTokensPerShare).div(1e12);        emit Deposit(msg.sender, _amount);    }"