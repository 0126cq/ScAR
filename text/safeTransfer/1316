"function deposit(        address fromToken,        uint256 amountIn,        address poolToken,        uint256 minPoolTokens,        address txTarget,        bytes calldata txData,        uint256 bpsFee,        bytes calldata signature    ) external payable stopInEmergency {        {            bytes32 messageHash = keccak256(                abi.encodePacked(txTarget, txData, bpsFee)            );            require(_verify(messageHash, signature), \"invalid signature\");        }        uint256 ethToSend = _pullTokens(            fromToken,            amountIn,            poolToken,            txTarget,            bpsFee        );        uint256 initialBalance = _getBalance(poolToken);        (bool success, ) = txTarget.call{ value: ethToSend }(txData);        require(success, \"Error depositing\");        uint256 poolTokensRec = _getBalance(poolToken) - initialBalance;        require(poolTokensRec >= minPoolTokens, \"High Slippage\");        IERC20(poolToken).<mask0>;    }"