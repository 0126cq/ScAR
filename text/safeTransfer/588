"function harvest() external whenNotPaused returns (HarvestData memory) {        _onlyAuthorizedActors();        HarvestData memory harvestData;        uint256 _beforexSushi = IERC20Upgradeable(xsushi).balanceOf(address(this));        uint256 _beforeLp = IERC20Upgradeable(want).balanceOf(address(this));        ISushiChef(chef).deposit(pid, _beforeLp);        uint256 _sushi = IERC20Upgradeable(sushi).balanceOf(address(this));        if (_sushi > 0) {            IxSushi(xsushi).enter(_sushi);        }        uint256 _xsushi = IERC20Upgradeable(xsushi).balanceOf(address(this));        harvestData.totalxSushi = _xsushi;        harvestData.xSushiHarvested = _xsushi.sub(_beforexSushi);        harvestData.toStrategist = _processFee(xsushi, harvestData.totalxSushi, performanceFeeStrategist, strategist);        harvestData.toGovernance = _processFee(xsushi, harvestData.totalxSushi, performanceFeeGovernance, IController(controller).rewards());        harvestData.toBadgerTree = IERC20Upgradeable(xsushi).balanceOf(address(this));        IERC20Upgradeable(xsushi).<mask0>;        emit HarvestState(            harvestData.xSushiHarvested,            harvestData.totalxSushi,            harvestData.toStrategist,            harvestData.toGovernance,            harvestData.toBadgerTree,            block.timestamp,            block.number        );        emit Harvest(0, block.number);        return harvestData;    }"