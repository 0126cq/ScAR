"function withdraw(address token, uint256 amount) external {        Types.BankState memory cachedBankState = state;        totalDeposits[token] -= amount;        if (token == TOKEN_ETH) {            require(userEthBalances[msg.sender] >= amount);            userEthBalances[msg.sender] -= amount;            TransferHelper.safeTransferETH(                msg.sender,                amount            );        } else {            if (token == TOKEN_WETH) {                require(amount % TOKEN_WETH_MULTIPLIER == 0, \"Incorrect withdraw amount\");                uint256 amountDelta = amount / TOKEN_WETH_MULTIPLIER;                require(uint256(userTokenBalances[msg.sender].wethBalance) >= amountDelta);                userTokenBalances[msg.sender].wethBalance -= uint32(amountDelta);                cachedBankState.wethBalance -= uint32(amountDelta);            } else if (token == TOKEN_WBTC) {                require(amount % TOKEN_WBTC_MULTIPLIER == 0, \"Incorrect withdraw amount\");                uint256 amountDelta = amount / TOKEN_WBTC_MULTIPLIER;                require(uint256(userTokenBalances[msg.sender].wbtcBalance) >= amountDelta);                userTokenBalances[msg.sender].wbtcBalance -= uint32(amountDelta);                cachedBankState.wbtcBalance -= uint32(amountDelta);            } else if (token == TOKEN_DAI) {                require(amount % TOKEN_DAI_MULTIPLIER == 0, \"Incorrect withdraw amount\");                uint256 amountDelta = amount / TOKEN_DAI_MULTIPLIER;                require(uint256(userTokenBalances[msg.sender].daiBalance) >= amountDelta);                userTokenBalances[msg.sender].daiBalance -= uint32(amountDelta);                cachedBankState.daiBalance -= uint32(amountDelta);            } else if (token == TOKEN_USDC) {                require(amount % TOKEN_USDC_MULTIPLIER == 0, \"Incorrect withdraw amount\");                uint256 amountDelta = amount / TOKEN_USDC_MULTIPLIER;                require(uint256(userTokenBalances[msg.sender].usdcBalance) >= amountDelta);                userTokenBalances[msg.sender].usdcBalance -= uint32(amountDelta);                cachedBankState.usdcBalance -= uint32(amountDelta);            } else {                require(token == TOKEN_USDT, \"Token not supported\");                require(amount % TOKEN_USDT_MULTIPLIER == 0, \"Incorrect withdraw amount\");                uint256 amountDelta = amount / TOKEN_USDT_MULTIPLIER;                require(uint256(userTokenBalances[msg.sender].usdtBalance) >= amountDelta);                userTokenBalances[msg.sender].usdtBalance -= uint32(amountDelta);                cachedBankState.usdtBalance -= uint32(amountDelta);            }            TransferHelper.<mask0>;                }        require(cachedBankState.numCalls == state.numCalls);        cachedBankState.numCalls += 1;        state = cachedBankState;        emit Withdrawal(msg.sender, token, amount);    }"