"function withdrawReward(address user) public onlyVault {    uint256 _pending = IERC20(vault()).balanceOf(user)    .mul(accRewardPerShare)    .div(1e36)    .sub(userRewardDebt[user]);    uint256 _balance = IERC20(stakedOnx).balanceOf(address(this));    if (_balance < _pending) {      _pending = _balance;    }    uint256 _fee = _pending.mul(keepFee).div(keepFeeMax);    IERC20(stakedOnx).safeTransfer(treasury, _fee);    lastPendingReward = curPendingReward.sub(_fee);    _pending = _pending.sub(_fee);    IERC20(stakedOnx).safeTransfer(user, _pending);    lastPendingReward = lastPendingReward.sub(_pending);    uint256 _pendingXSushi = IERC20(vault()).balanceOf(user)    .mul(accXSushiPerShare)    .div(1e36)    .sub(userXSushiDebt[user]);    uint256 _xSushiBalance = IERC20(xSushi).balanceOf(address(this));    if (_xSushiBalance < _pendingXSushi) {      _pendingXSushi = _xSushiBalance;    }    uint256 _feeXSushi = _pendingXSushi.mul(keepFee).div(keepFeeMax);    IERC20(xSushi).safeTransfer(treasury, _feeXSushi);    lastPendingXSushi = curPendingXSushi.sub(_feeXSushi);    _pendingXSushi = _pendingXSushi.sub(_feeXSushi);    IERC20(xSushi).<mask0>;    lastPendingXSushi = lastPendingXSushi.sub(_pendingXSushi);  }"