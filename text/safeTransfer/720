"function finish(\t\tstring memory _githubRepository,\t\tuint256 _status,\t\tstring memory _errorMessage\t) external {\t\trequire(msg.sender == getCallbackKickerAddress(), \"illegal access.\");\t\taddress property = getPropertyAddress(_githubRepository);\t\taddress account = getAccountAddress(property);\t\tuint256 reword = getReword(_githubRepository);\t\trequire(reword != 0, \"reword is 0.\");\t\tuint256 staking = getStaking(_githubRepository);\t\tif (_status != 0) {\t\t\temit Finish(\t\t\t\tproperty,\t\t\t\t_status,\t\t\t\t_githubRepository,\t\t\t\treword,\t\t\t\taccount,\t\t\t\tstaking,\t\t\t\t_errorMessage\t\t\t);\t\t\treturn;\t\t}\t\taddress devToken = IAddressConfig(getAddressConfigAddress()).token();\t\tIERC20 dev = IERC20(devToken);\t\tdev.safeTransfer(account, reword);\t\tIProperty(property).changeAuthor(account);\t\tIERC20 propertyInstance = IERC20(property);\t\tuint256 balance = propertyInstance.balanceOf(address(this));\t\tpropertyInstance.<mask0>;\t\temit Finish(\t\t\tproperty,\t\t\t_status,\t\t\t_githubRepository,\t\t\treword,\t\t\taccount,\t\t\tstaking,\t\t\t_errorMessage\t\t);\t}"