"function _withdraw(uint256 amount) internal returns (uint256) {        uint256 balanceUnderlying = cToken.balanceOfUnderlying(address(this));        uint256 looseBalance = want.balanceOf(address(this));        uint256 total = balanceUnderlying.add(looseBalance);        if (amount > total) {            amount = total;        }        if (looseBalance >= amount) {            want.<mask0>;            return amount;        }        uint256 liquidity = want.balanceOf(address(cToken));        if (liquidity > 1) {            uint256 toWithdraw = amount.sub(looseBalance);            if (toWithdraw <= liquidity) {                require(cToken.redeemUnderlying(toWithdraw) == 0, \"ctoken: redeemUnderlying fail\");            } else {                require(cToken.redeemUnderlying(liquidity) == 0, \"ctoken: redeemUnderlying fail\");            }        }        looseBalance = want.balanceOf(address(this));        want.safeTransfer(address(strategy), looseBalance);        return looseBalance;    }"