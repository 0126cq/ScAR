"function withdraw(        address poolToken,        uint256 amountIn,        address toToken,        uint256 minToTokens,        address txTarget,        bytes calldata txData,        uint256 bpsFee,        bytes calldata signature    ) external payable stopInEmergency {        bytes32 messageHash = keccak256(            abi.encodePacked(txTarget, txData, bpsFee)        );        require(_verify(messageHash, signature), \"invalid signature\");        IERC20(poolToken).safeTransferFrom(msg.sender, address(this), amountIn);        uint256 initialBalance = _getBalance(toToken);        (bool success, ) = txTarget.call(txData);        require(success, \"Error withdrawing\");        uint256 toTokensRec = _getBalance(toToken) - initialBalance;        require(toTokensRec >= minToTokens, \"High Slippage\");        uint256 toSend = _getAmtAfterFees(toTokensRec, bpsFee);        if (toToken == address(0)) {            _sendETH(msg.sender, toSend);        } else {            IERC20(toToken).<mask0>;        }        emit Withdraw(msg.sender, poolToken, toToken, toTokensRec);    }"