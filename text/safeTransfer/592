"function seize(        uint256 amountToSeize,        uint256 rewardMultiplier,        address tattletale,        address[] memory misbehavedOperators    ) public onlyApprovedOperatorContract(msg.sender) {        uint256 totalAmountToBurn;        address authoritySource = getAuthoritySource(msg.sender);        for (uint i = 0; i < misbehavedOperators.length; i++) {            address operator = misbehavedOperators[i];            require(authorizations[authoritySource][operator], \"Not authorized\");            uint256 operatorParams = operators[operator].packedParams;            require(                _isInitialized(operatorParams),                \"Inactive stake\"            );            require(                !_isStakeReleased(operator, operatorParams, msg.sender),                \"Stake is released\"            );            uint256 currentAmount = operatorParams.getAmount();            if (currentAmount < amountToSeize) {                totalAmountToBurn = totalAmountToBurn.add(currentAmount);                operators[operator].packedParams = operatorParams.setAmount(0);                emit TokensSeized(operator, currentAmount);            } else {                totalAmountToBurn = totalAmountToBurn.add(amountToSeize);                operators[operator].packedParams = operatorParams.setAmount(                    currentAmount.sub(amountToSeize)                );                emit TokensSeized(operator, amountToSeize);            }        }        uint256 tattletaleReward = (totalAmountToBurn.percent(5)).percent(rewardMultiplier);        token.<mask0>;        token.burn(totalAmountToBurn.sub(tattletaleReward));    }"