"function settle(uint256 longTokensToRedeem, uint256 shortTokensToRedeem)        public        postExpiration()        nonReentrant()        returns (uint256 collateralReturned)    {        require(contractState != ContractState.Open, \"Unexpired contract\");        if (contractState != ContractState.ExpiredPriceReceived) {            expiryPrice = _getOraclePriceExpiration(expirationTimestamp);            expiryPercentLong = Math.min(                financialProductLibrary.percentageLongCollateralAtExpiry(expiryPrice),                FixedPoint.fromUnscaledUint(1).rawValue            );            contractState = ContractState.ExpiredPriceReceived;        }        require(longToken.burnFrom(msg.sender, longTokensToRedeem));        require(shortToken.burnFrom(msg.sender, shortTokensToRedeem));        uint256 longCollateralRedeemed =            FixedPoint                .Unsigned(longTokensToRedeem)                .mul(FixedPoint.Unsigned(collateralPerPair))                .mul(FixedPoint.Unsigned(expiryPercentLong))                .rawValue;        uint256 shortCollateralRedeemed =            FixedPoint                .Unsigned(shortTokensToRedeem)                .mul(FixedPoint.Unsigned(collateralPerPair))                .mul(FixedPoint.fromUnscaledUint(1).sub(FixedPoint.Unsigned(expiryPercentLong)))                .rawValue;        collateralReturned = longCollateralRedeemed + shortCollateralRedeemed;        collateralToken.<mask0>;        emit PositionSettled(msg.sender, collateralReturned, longTokensToRedeem, shortTokensToRedeem);    }"