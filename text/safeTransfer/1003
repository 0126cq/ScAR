"function borrow(        address _to,        uint256 _lendingAmount,        uint256 _lendingInterest    ) public onlyInitialized nonReentrant onlyOwner returns (uint256) {        totalUnderlyToken = totalUnderlyToken.sub(_lendingAmount);        frozenUnderlyToken = frozenUnderlyToken.add(_lendingAmount);        uint256 redeemState = ICompound(lpToken).redeemUnderlying(            _lendingAmount        );        require(            redeemState == 0,            \"SupplyTreasuryFundForCompound: !redeemState\"        );        if (isErc20) {            IERC20(underlyToken).<mask0>;            if (_lendingInterest > 0) {                IERC20(underlyToken).safeTransfer(owner, _lendingInterest);            }        } else {            payable(_to).sendValue(_lendingAmount.sub(_lendingInterest));            if (_lendingInterest > 0) {                payable(owner).sendValue(_lendingInterest);            }        }        return _lendingInterest;    }"