"function makeTokenSwapForETH(        address[] memory _tokens,        uint256[] memory _amounts,        uint256[] memory _expected,        address _referrer    ) external payable returns (uint256)    {        require(address(0) != _referrer, 'Multiswap: referrer cannot be zero addresss');        require(_tokens.length == _amounts.length && _expected.length == _expected.length, 'Multiswap: Input data mismatch');        address[] memory path = new address[](2);        path[1] = WETH;        uint256 preBalance = address(this).balance;        for (uint i = 0; i < _tokens.length; i++) {            path[0] = _tokens[i];            IERC20 token = IERC20(_tokens[i]);            require(token.<mask0>, 'Multiswap: Transfer failed');            uint256 transferAmount = _amounts[i];            if (transferAmount > token.balanceOf(address(this))) transferAmount = token.balanceOf(address(this));            require(token.approve(address(uniswapRouter), transferAmount), 'Multiswap: Approval failure');            uniswapRouter.swapExactTokensForETH(transferAmount, _expected[i], path, address(this), block.timestamp + 1200);        }        (uint256 valueToSend, uint256 feeAmount) = applyFeeETH(address(this).balance.sub(preBalance), _tokens.length);        if (_referrer != address(this)) {            uint256 referralFee = takeReferralFee(feeAmount, _referrer);            (bool sent, ) = _referrer.call{value: referralFee}(\"\");            require(sent, 'Multiswap: Failed to send referral fee');        }       (bool delivered, ) = msg.sender.call{value: valueToSend}(\"\");       require(delivered, 'Multiswap: Failed to send swap output');        return valueToSend;    }"