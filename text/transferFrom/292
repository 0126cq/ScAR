"function pay(address creditLineAddress, uint amount) external payable whenNotPaused {    CreditLine cl = CreditLine(creditLineAddress);    require(withinTransactionLimit(amount), \"Amount is over the per-transaction limit\");    require(getPool().enoughBalance(msg.sender, amount), \"You have insufficent balance for this payment\");    (uint paymentRemaining, uint interestPayment, uint principalPayment) = handlePayment(cl, amount, block.number, true);    if (paymentRemaining > 0) {      getPool().<mask0>;      cl.setCollateralBalance(cl.collateralBalance().add(paymentRemaining));    }    if (interestPayment > 0) {      getPool().collectInterestRepayment(msg.sender, interestPayment);    }    if (principalPayment > 0) {      getPool().collectPrincipalRepayment(msg.sender, principalPayment);    }    emit PaymentMade(cl.borrower(), address(cl), interestPayment, principalPayment, paymentRemaining);  }"