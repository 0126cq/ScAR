"function deposit(uint amountToStake) public returns (bool){        require(!ended, \"Staking has ended\");        require(getRewardsLeft() > 0, \"No rewards left\");        require(amountToStake > 0, \"Cannot deposit 0 Tokens\");        require(Token(tokenDepositAddress).<mask0>, \"Insufficient Token Allowance\");        require(updateAccount(msg.sender, true, false), \"Error updating account\");        uint fee = amountToStake.mul(stakingFeeRate).div(1e4);        uint amountAfterFee = amountToStake.sub(fee);        require(amountAfterFee <= availablePoolSize, \"No space available\");        require(Token(tokenDepositAddress).transfer(owner, fee), \"Could not transfer deposit fee.\");        depositedTokens[msg.sender] = depositedTokens[msg.sender].add(amountAfterFee);        if(depositedTokens[msg.sender] > maxDepositedTokens[msg.sender]){            maxDepositedTokens[msg.sender] = depositedTokens[msg.sender];        }         availablePoolSize = availablePoolSize.sub(amountAfterFee);        totalDeposited = totalDeposited.add(amountAfterFee);        if (!holders.contains(msg.sender)) {            holders.add(msg.sender);            firstTime[msg.sender] = block.timestamp;        }        amountPerInterval[msg.sender] = 0;        if(alreadyProgUnstaked[msg.sender] > 0){            firstTime[msg.sender] = block.timestamp;        }         alreadyProgUnstaked[msg.sender] = 0;        stakingTime[msg.sender] = block.timestamp;        return true;    }"