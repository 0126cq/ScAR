"function deposit(uint256 amount) public {        require(amount > 0, \"Amount must be greater than 0\");        LibBarnStorage.Storage storage ds = LibBarnStorage.barnStorage();        uint256 allowance = ds.bond.allowance(msg.sender, address(this));        require(allowance >= amount, \"Token allowance too small\");        if (address(ds.rewards) != address(0)) {            ds.rewards.registerUserAction(msg.sender);        }        uint256 newBalance = balanceOf(msg.sender).add(amount);        _updateUserBalance(ds.userStakeHistory[msg.sender], newBalance);        _updateLockedBond(bondStakedAtTs(block.timestamp).add(amount));        address delegatedTo = userDelegatedTo(msg.sender);        if (delegatedTo != address(0)) {            uint256 newDelegatedPower = delegatedPower(delegatedTo).add(amount);            _updateDelegatedPower(ds.delegatedPowerHistory[delegatedTo], newDelegatedPower);            emit DelegatedPowerIncreased(msg.sender, delegatedTo, amount, newDelegatedPower);        }        ds.bond.<mask0>;        emit Deposit(msg.sender, amount, newBalance);    }"