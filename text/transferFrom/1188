"function stakeNFTs(IERC721 nft, uint256[] memory tokenIds) public {        uint256 msgSenderId = ownerToId[msg.sender];        if (msgSenderId == 0) {            msgSenderId = currentId + 1;            ownerToId[msg.sender] = msgSenderId;            idToOwner[msgSenderId] = msg.sender;            currentId = msgSenderId;        }        for (uint256 i = 0; i < tokenIds.length; i++) {            uint256 tokenId = tokenIds[i];            require(nftStatus(nft, tokenId) == NFTStatus.Lockable);            uint256 collectionId = TokenIdLib.extractCollectionId(tokenId);            uint256 seriesId = TokenIdLib.extractSeriesId(tokenId);            require(                nftStakeDetails[nft][collectionId][seriesId].enabled,                \"NOT_ENABLED\"            );            nftOwnerId[nft][tokenIds[i]] = msgSenderId;            nftLockTimestamp[nft][tokenIds[i]] = block.timestamp;            ownerNFTs[nft][msg.sender].push(tokenId);            nft.<mask0>;            emit NFTLocked(nft, tokenId);        }    }"