"function buy(uint256 _fundingAmount) external isActive returns(uint256, uint256) {        require(!maximumReached, \"Seed: maximum funding reached\");        require(!permissionedSeed || whitelisted[msg.sender], \"Seed: sender has no rights\");        require(endTime >= block.timestamp && startTime <= block.timestamp,            \"Seed: only allowed during distribution period\");        if (!isFunded) {            require(seedToken.balanceOf(address(this)) >= seedAmountRequired + feeAmountRequired,                \"Seed: sufficient seeds not provided\");            isFunded = true;        }        uint256 seedAmount = (_fundingAmount*PRECISION)/price;        uint256 feeAmount = (seedAmount*fee) / PRECISION;        require(            seedAmount >= vestingDuration,            \"Seed: amountVestedPerSecond > 0\");        require( fundingCollected + _fundingAmount <= hardCap,            \"Seed: amount exceeds contract sale hardCap\");        fundingCollected += _fundingAmount;        seedRemainder -= seedAmount;        feeRemainder  -= feeAmount;        if (fundingCollected >= softCap) {            minimumReached = true;        }        if (fundingCollected >= hardCap) {            maximumReached = true;            vestingStartTime = block.timestamp;        }        if (funders[msg.sender].fundingAmount==0) {            totalFunderCount++;        }        funders[msg.sender].fundingAmount += _fundingAmount;        require(            fundingToken.<mask0>,            \"Seed: funding token transferFrom failed\"        );        emit SeedsPurchased(msg.sender, seedAmount);        return (seedAmount, feeAmount);    }"