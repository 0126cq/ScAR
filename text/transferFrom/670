"function createRaffle(    address _rewardTokenAddress,    uint256 _rewardAmountOrTokenId,    bool _isNft,    uint256 _start,    uint256 _end,    address _entryToken,    uint256 _entryFee,    uint256 _maxEntriesPerAddress  ) external {    _validateDates(_start, _end);    _mtgy.transferFrom(msg.sender, address(this), mtgyServiceCost);    _mtgy.approve(address(_spend), mtgyServiceCost);    _spend.spendOnProduct(mtgyServiceCost);    if (_isNft) {      IERC721 _rewardToken = IERC721(_rewardTokenAddress);      _rewardToken.<mask0>;    } else {      IERC20 _rewardToken = IERC20(_rewardTokenAddress);      _rewardToken.transferFrom(        msg.sender,        address(this),        _rewardAmountOrTokenId      );    }    bytes32 _id = sha256(abi.encodePacked(msg.sender, block.number));    address[] memory _entries;    raffles[_id] = Raffle({      owner: msg.sender,      isNft: _isNft,      rewardToken: _rewardTokenAddress,      rewardAmountOrTokenId: _rewardAmountOrTokenId,      start: _start,      end: _end,      entryToken: _entryToken,      entryFee: _entryFee,      entryFeesCollected: 0,      maxEntriesPerAddress: _maxEntriesPerAddress,      entries: _entries,      winner: address(0),      isComplete: false,      isClosed: false    });    raffleIds.push(_id);    emit CreateRaffle(msg.sender, _id);  }"