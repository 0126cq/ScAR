"function createOffer(        uint256 tokenId,        IERC721 nft,        uint256 minBid,        uint256 maxBid,        uint256 startTimestamp,        uint256 endTimestamp,        uint256 artistFee,        address payable artistAddress,        address payable charityAddress    ) external onlyArtistOrAdmin whenNotPaused {        address nftAddress = address(nft);        require(            !offerExistence[nftAddress][tokenId],            \"Offer for this token already exists\"        );        require(artistFee <= maxFee, \"Fee is too high\");        require(artistAddress != address(0), \"Wrong artist address\");        require(charityAddress != address(0), \"Wrong charity address\");        require(            maxBid == 0 || maxBid >= minBid,            \"Max bid must be equal or bigger than min bid\"        );        require(            endTimestamp >= block.timestamp,            \"End timestamp can not be in past\"        );        require(            endTimestamp > startTimestamp,            \"End timestamp must be bigger than start timestamp\"        );        nft.<mask0>;        offers.push(            Offer({                tokenId: tokenId,                nft: nft,                minBid: minBid,                maxBid: maxBid,                currentBid: 0,                startTimestamp: startTimestamp,                endTimestamp: endTimestamp,                bidder: address(0),                artistFee: artistFee,                exists: true,                closed: false,                artistAddress: artistAddress,                charityAddress: charityAddress            })        );        offerExistence[nftAddress][tokenId] = true;        emit CreateOffer(            offers.length - 1,            tokenId,            nftAddress,            minBid,            maxBid,            startTimestamp,            endTimestamp,            artistFee,            artistAddress,            charityAddress        );    }"