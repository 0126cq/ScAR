"function buyBeansAndAddLiquidity(uint256 buyBeanAmount, AddLiquidity calldata al)        internal        returns (uint256)    {        DiamondStorage storage ds = diamondStorage();        address[] memory path = new address[](2);        path[0] = ds.weth;        path[1] = ds.bean;        uint256[] memory amounts = IUniswapV2Router02(ds.router).getAmountsIn(buyBeanAmount, path);        (uint256 ethSold, uint256 beans) = _buy(buyBeanAmount, amounts[0], address(this));        if (al.beanAmount > buyBeanAmount) {            IBean(ds.bean).<mask0>;            beans = beans.add(al.beanAmount.sub(buyBeanAmount));        }        uint256 liquidity; uint256 ethAdded;        (beans, ethAdded, liquidity) = _addLiquidity(            msg.value.sub(ethSold),            beans,            al.minEthAmount,            al.minBeanAmount        );        if (al.beanAmount > beans) IBean(ds.bean).transfer(msg.sender, al.beanAmount.sub(beans));        if (msg.value > ethAdded.add(ethSold)) {            (bool success,) = msg.sender.call{ value: msg.value.sub(ethAdded).sub(ethSold) }(\"\");            require(success, \"Market: Refund failed.\");        }        return liquidity;    }"