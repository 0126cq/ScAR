"function stake(    address contractAddress,    uint256[] memory tokenIds,    uint256 clanId  ) external incrementNonce nonReentrant {    StakedContract storage _contract = contracts[contractAddress];    require(_contract.active, \"token contract is not active\");    if (isClanLeader(_msgSender())) {      require(clanStructs[_msgSender()].clanId == clanId, \"clan leader can't switch clans!\");    }    updateEntityClan(_msgSender(), clanId);    for (uint256 i = 0; i < tokenIds.length; i++) {      uint256 tokenId = tokenIds[i];      contractTokenIdToOwner[contractAddress][tokenId] = _msgSender();      _contract.instance.<mask0>;      addressToStakedTokensSet[contractAddress][_msgSender()].add(tokenId);      contractTokenIdToStakedTimestamp[contractAddress][tokenId] = block.timestamp;      emit Stake(tokenId, contractAddress, _msgSender(), clanId);    }  }"