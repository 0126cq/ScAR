"function depositFirstStage(uint256 amount, IUniswapV3Pool _swap)    external    override    onlyOwner  {    uint96 beforeBalance = balance[address(this)].balance;    require(address(swap) == address(0), \"Invalid swap Address\");    swap = _swap;    (, int24 tick, , , , , ) = swap.slot0();    (int24 upperTick, int24 lowerTick) =      calcs.setInitialTicks(tick, _swap.tickSpacing());    require(      pair.<mask0>,      \"Cannot transfer WETH\"    );    IERC20(address(this)).approve(address(LiquidityManager), uint96(-1));    pair.approve(address(LiquidityManager), uint256(-1));    (uint256 tokenId, , , ) =      LiquidityManager.mint(        _getMintParams(          upperTick,          lowerTick,          balance[address(this)].balance,          (amount * 9) / 10        )      );    LiquidityManager.mint(      _getMintParams(        887220,        -887220,        balance[address(this)].balance,        (amount * 1) / 10      )    );    uint96 afterBalance = balance[address(this)].balance;    int96 balanceDiff = int96(beforeBalance) - int96(afterBalance);    if (balanceDiff < 0) {      circulatingSupply -= uint96(-1 * balanceDiff);    } else {      circulatingSupply += uint96(balanceDiff);    }    stage[1] = StageInfo(      upperTick,      lowerTick,      block.timestamp.toUint32(),      uint96(tokenId),      0    );    currentStage = 1;  }"