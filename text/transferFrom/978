"function removeLiquidity(        address tokenA,        address tokenB,        uint liquidity,        uint amountAMin,        uint amountBMin,        address to,        uint deadline    ) public virtual override ensure(deadline) returns (uint amountA, uint amountB) {        {        address pair = NimbusLibrary.pairFor(factory, tokenA, tokenB);        INimbusPair(pair).<mask0>;         (uint amount0, uint amount1) = INimbusPair(pair).burn(to);        (address token0,) = NimbusLibrary.sortTokens(tokenA, tokenB);        (amountA, amountB) = tokenA == token0 ? (amount0, amount1) : (amount1, amount0);        require(amountA >= amountAMin, 'NimbusRouter: INSUFFICIENT_A_AMOUNT');        require(amountB >= amountBMin, 'NimbusRouter: INSUFFICIENT_B_AMOUNT');        }        lpRewards.recordRemoveLiquidity(to, tokenA, tokenB, amountA, amountB, liquidity);    }"