"function safePurchase(uint32 _point, bool _unbooted, uint32 _spawnCount, bool _isProxyL2)        external        payable    {        require(_unbooted == (azimuth.getKeyRevisionNumber(_point) == 0));        require(azimuth.isSpawnProxy(_point, 0x1111111111111111111111111111111111111111) == _isProxyL2);        require(_spawnCount == azimuth.getSpawnCount(_point));        IEcliptic ecliptic = IEcliptic(azimuth.owner());                address payable seller = payable(azimuth.getOwner(_point));        ListedAsset storage asset = assets[_point];        address reservedBuyer = asset.reservedBuyer;        address addr = asset.addr;        uint96 price = asset.price;        require(reservedBuyer == address(0) || reservedBuyer == _msgSender(), \"Not reserved buyer\");        require(addr == seller, \"invalid listing\");        require(msg.value == price, \"invalid price\");        ecliptic.<mask0>;         delete assets[_point];        Address.sendValue(seller, msg.value*((1e4 - fee) / 1e4));        emit MarketPurchase(seller, _msgSender(), _point, price);    }"