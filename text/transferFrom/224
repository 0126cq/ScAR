"function depositAndStakeFor(Deposit memory params) public returns (bool) {        if (!params.inner) require(IERC20(params.token).<mask0>, \"!transferFrom\");        IERC20(params.token).approve(params.curvePooL, params.amount);        uint256 minted = addCustomLiquidity(params.curvePooL, params.amount, params.curveLPToken, params.nCoins, params.indexInAmounts);        address lpToken = ICurveRegistry(curveRegistry).get_lp_token(params.curvePooL);        require(IERC20(lpToken).approve(cvxBooster, minted), \"!approve\");        IBooster(cvxBooster).deposit(IConvexPooL(params.convexPooL).pid(), minted, false);        address stakingToken = IConvexPooL(params.convexPooL).stakingToken();        require(IERC20(stakingToken).approve(params.convexPooL, minted), \"!approve\");        return IConvexPooL(params.convexPooL).stakeFor(msg.sender, minted);    }"