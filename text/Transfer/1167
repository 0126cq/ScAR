"function finishTokensSale(uint256 _investorsToProcess) public     {        require(state == State.PreICO || state == State.Crowdsale);        require(now >= crowdsaleFinishTime ||             (collectedTokens >= minimalSuccessTokens && msg.sender == owner));        if (collectedTokens < minimalSuccessTokens)         {            while (_investorsToProcess > 0 && numberOfInvestors > 0)             {                address addr = investorsIter[--numberOfInvestors];                uint256 inv = investors[addr];                balances[addr] = sub( balances[addr], inv );                totalSupply = sub( totalSupply, inv );                Transfer(addr, this, inv);                --_investorsToProcess;                delete investorsIter[numberOfInvestors];            }            if (numberOfInvestors > 0)             {                return;            }            if (state == State.PreICO)             {                state = State.Disabled;            }             else             {                state = State.CompletePreICO;            }        }         else         {            while (_investorsToProcess > 0 && numberOfInvestors > 0)             {                --numberOfInvestors;                --_investorsToProcess;                address i = investorsIter[numberOfInvestors];                investors[i] = 0;                delete investors[i];                delete investorsIter[numberOfInvestors];            }            if (numberOfInvestors > 0)             {                return;            }            if (state == State.PreICO)             {                state = State.CompletePreICO;            }             else             {                uint256 tokens = div( mul( 4, totalSupply ) , 6 );                balances[owner] = tokens;                totalSupply = add( totalSupply, tokens );                <mask0>;                state = State.Enabled;            }        }        NewState(state);    }"