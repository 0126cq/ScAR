"function invest(address _partner) payable public {        require(investStart > 1 && block.number < investStart + (hashesSize * 5) && investBalance < investBalanceMax);        uint investing = msg.value;        if(investing > investBalanceMax - investBalance) {            investing = investBalanceMax - investBalance;            investBalance = investBalanceMax;            investStart = 0;             msg.sender.transfer(msg.value.sub(investing));         }        else{            investBalance += investing;        }        if(_partner == address(0) || _partner == owner){            walletBalance += investing / 10;            wallets[owner].balance += uint208(investing / 10);}         else{            walletBalance += (investing * 5 / 100) * 2;            wallets[owner].balance += uint208(investing * 5 / 100);             wallets[_partner].balance += uint208(investing * 5 / 100);}         wallets[msg.sender].lastDividendPeriod = uint16(dividendPeriod);         uint senderBalance = investing / 10**15;        uint ownerBalance = investing * 16 / 10**17  ;        uint animatorBalance = investing * 10 / 10**17  ;        balances[msg.sender] += senderBalance;        balances[owner] += ownerBalance ;         balances[animator] += animatorBalance ;         totalSupply += senderBalance + ownerBalance + animatorBalance;        Transfer(address(0),msg.sender,senderBalance);         Transfer(address(0),owner,ownerBalance);         <mask0>;         LogInvestment(msg.sender,_partner,investing);    }"