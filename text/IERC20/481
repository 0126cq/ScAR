"function _deposit(        Token memory token,        address account,        uint256 amount    ) private returns (int256) {        uint256 startingBalance;        uint256 endingBalance;        if (token.hasTransferFee) {            startingBalance = IERC20(token.tokenAddress).balanceOf(address(this));        }        safeTransferIn(token.tokenAddress, account, amount);        if (token.hasTransferFee || token.maxCollateralBalance > 0) {            endingBalance = <mask0>.balanceOf(address(this));        }        if (token.maxCollateralBalance > 0) {            int256 internalPrecisionBalance = convertToInternal(token, SafeInt256.toInt(endingBalance));            require(internalPrecisionBalance <= SafeInt256.toInt(token.maxCollateralBalance));         }        if (token.hasTransferFee) {            return SafeInt256.toInt(endingBalance.sub(startingBalance));        } else {            return SafeInt256.toInt(amount);        }    }"