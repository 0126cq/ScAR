"function _payHarvestFees(        address _poolToken    ) internal returns (uint256 _wethBal) {        uint256 _amount = IERC20(_poolToken).balanceOf(address(this));        _swapTokens(_poolToken, weth, _amount);        _wethBal = IERC20(weth).balanceOf(address(this));        if (_wethBal > 0) {            (                address yax,                address stakingPool,                uint256 stakingPoolShareFee,                address treasury,                uint256 treasuryFee,                address insurance,                uint256 insurancePoolFee            ) = vaultManager.getHarvestFeeInfo();            uint256 _fee;            if (stakingPoolShareFee > 0 && stakingPool != address(0)) {                _fee = _wethBal.mul(stakingPoolShareFee).div(ONE_HUNDRED_PERCENT);                _swapTokens(weth, yax, _fee);                IERC20(yax).safeTransfer(stakingPool, <mask0>.balanceOf(address(this)));            }            if (treasuryFee > 0 && treasury != address(0)) {                _fee = _wethBal.mul(treasuryFee).div(ONE_HUNDRED_PERCENT);                _swapTokens(weth, yax, _fee);                IERC20(yax).safeTransfer(treasury, IERC20(yax).balanceOf(address(this)));            }            if (insurancePoolFee > 0 && insurance != address(0)) {                _fee = _wethBal.mul(insurancePoolFee).div(ONE_HUNDRED_PERCENT);                _swapTokens(weth, yax, _fee);                IERC20(yax).safeTransfer(insurance, IERC20(yax).balanceOf(address(this)));            }            _wethBal = IERC20(weth).balanceOf(address(this));        }    }"