"function executeOperation(    address[] calldata assets,    uint256[] calldata amounts,    uint256[] calldata premiums,    address initiator,    bytes calldata params_  ) external returns (bool) {    initiator;    LiquidateERC20Params memory params = abi.decode(      params_,      (LiquidateERC20Params)    );    if (params.mode != 0) {      _safeApprove(        params.flashLoanAsset,        address(CONFIG._uniswapV2Router()),        amounts[0]      );      CONFIG._uniswapV2Router().swapTokensForExactTokens(        params.debtToCover,        amounts[0],        params.flashLoanToDebtSwapPath,        address(this),        block.timestamp      );    }    console.log(\"swap 1\");    _safeApprove(params.debtAsset, address(CONFIG._pool()), params.debtToCover);    console.log(\"approve 1\");    CONFIG._pool().liquidationCall(      params.collateralAsset,      params.debtAsset,      params.user,      params.debtToCover,      false    );    console.log(\"liquidationCall\");    uint256 amountOwing = amounts[0] + premiums[0];    uint256 transferToOwner;    if (params.collateralAsset != params.flashLoanAsset) {      _safeApprove(        params.collateralAsset,        address(CONFIG._uniswapV2Router()),        IERC20(params.collateralAsset).balanceOf(address(this))      );      console.log(\"approve 2\");      uint256 amountNeeded = amountOwing -        IERC20(params.flashLoanAsset).balanceOf(address(this));      CONFIG._uniswapV2Router().swapTokensForExactTokens(        amountNeeded,        IERC20(params.collateralAsset).balanceOf(address(this)),        params.swapPath,        address(this),        block.timestamp      );      console.log(\"swap 2\");      transferToOwner = IERC20(params.collateralAsset).balanceOf(address(this));    } else {      transferToOwner =        IERC20(params.collateralAsset).balanceOf(address(this)) -        amountOwing;    }    IERC20(params.collateralAsset).safeTransfer(owner(), transferToOwner);    console.log(\"transfer To Owner\");    if (params.mode != 0) {      <mask0>.safeTransfer(        owner(),        IERC20(params.debtAsset).balanceOf(address(this))      );      console.log(\"transfer left debtAsset\");    }    _safeApprove(      params.flashLoanAsset,      address(CONFIG._flashLoanPool()),      amountOwing    );    console.log(\"approve 3\");    return true;  }"