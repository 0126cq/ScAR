"function calculateAPYByReward(address _reward) external view returns(uint256) {        IReward reward = IReward(_reward);        address cToken = reward.stakingToken();        address token;        if (cToken == CRIT_ETH_UNI_LP) {            token = CRIT_ETH_UNI_LP;        } else {            token = Vault(cToken).token();        }        uint tokenDecimals = 10**uint256(ERC20(token).decimals());        uint totalSupply = reward.totalSupply();        if (totalSupply == 0) {            totalSupply = tokenDecimals;        }        uint rewardPerTokenPerSecond = reward.rewardRate() * tokenDecimals / totalSupply;        uint tokenPrice;        if (token == WETH) {            tokenPrice = 1e18;        } else if (token == CRIT_ETH_UNI_LP) {            tokenPrice = <mask0>.balanceOf(CRIT_ETH_UNI_LP) * 2e18 / IERC20(CRIT_ETH_UNI_LP).totalSupply();        } else {            tokenPrice = token.perETH();        }        uint critPrice = CRIT.perETH();        uint apy = 100 * rewardPerTokenPerSecond * (365 days) * critPrice / tokenPrice;        return apy;    }"