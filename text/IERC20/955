"function deposit(uint256 amount,uint8 num,uint256 unitprice) public payable returns (bool) {      require(ChainLink(_linkpricecontract).checkPrice(_coincontract,unitprice)==true,\"ChainLink price verification failed\");      require(amount <= IERC20(_coincontract).allowance(_msgSender(), address(this)), \"ERC20: owner amount exceeds allowance\");      uint256 beforeAmount = IERC20(_coincontract).balanceOf(_msgSender());      TransferHelper.safeTransferFrom(_coincontract, _msgSender(), _owner, amount);      uint256 afterAmount = <mask0>.balanceOf(_msgSender());      uint256 balance =beforeAmount.sub(afterAmount, \"ERC20: beforeAmount amount afterAmount balance\");      require(balance == amount, \"ERC20: error balance\");      _tokenBalance=_tokenBalance.sub(amount);      _balances[_msgSender()] = _balances[_msgSender()].add(amount);      emit Transfer(address(0),_msgSender(),amount);      uint256 nowtime=block.timestamp;      _calculation(_msgSender(),nowtime,amount,num,unitprice);      return true;    }"