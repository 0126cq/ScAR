"function claimAndStake(        address tokenAddress,        address[] calldata poolAddress,        uint256[] calldata amount    ) public nonReentrant returns (bool) {        require(poolAddress.length == amount.length, \"Lengths must match\");        uint256 totalAmount = 0;        uint256 i;        for (i = 0; i < amount.length; i += 1) {            totalAmount += amount[i];        }        require(            dfrewards.claimable(msg.sender, tokenAddress) > totalAmount,            \"Not enough rewards\"        );        uint256 balanceBefore = <mask0>.balanceOf(address(this));        uint256 claimed = dfrewards.claimForStrat(msg.sender, tokenAddress);         uint256 balanceAfter = IERC20(tokenAddress).balanceOf(address(this));        require(balanceAfter - balanceBefore == claimed, \"Not enough rewards\");        for (i = 0; i < amount.length; i += 1) {            stake(tokenAddress, poolAddress[i], amount[i], msg.sender);        }        if (claimed > totalAmount) {            IERC20(tokenAddress).safeTransfer(                msg.sender,                claimed - totalAmount            );        }        return true;    }"