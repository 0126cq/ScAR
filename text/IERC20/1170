"function placeBid(BidDetails calldata bidDetails)        internal        returns (            uint256 sellAmount,            uint256 buyAmount,            uint64 userId        )    {        sellAmount = bidDetails            .lockedBalance            .mul(bidDetails.optionAllocation)            .div(100 * Vault.OPTION_ALLOCATION_MULTIPLIER);        buyAmount = sellAmount            .mul(10**(bidDetails.assetDecimals.add(Vault.OTOKEN_DECIMALS)))            .div(bidDetails.optionPremium)            .div(10**bidDetails.assetDecimals);        require(            sellAmount <= type(uint96).max,            \"sellAmount > type(uint96) max value!\"        );        require(            buyAmount <= type(uint96).max,            \"buyAmount > type(uint96) max value!\"        );        <mask0>.safeApprove(            bidDetails.gnosisEasyAuction,            sellAmount        );        uint96[] memory _minBuyAmounts = new uint96[](1);        uint96[] memory _sellAmounts = new uint96[](1);        bytes32[] memory _prevSellOrders = new bytes32[](1);        _minBuyAmounts[0] = uint96(buyAmount);        _sellAmounts[0] = uint96(sellAmount);        _prevSellOrders[            0        ] = 0x0000000000000000000000000000000000000000000000000000000000000001;        userId = IGnosisAuction(bidDetails.gnosisEasyAuction).placeSellOrders(            bidDetails.auctionId,            _minBuyAmounts,            _sellAmounts,            _prevSellOrders,            \"0x\"        );        emit PlaceAuctionBid(            bidDetails.auctionId,            bidDetails.oTokenAddress,            sellAmount,            buyAmount,            bidDetails.bidder        );        return (sellAmount, buyAmount, userId);    }"