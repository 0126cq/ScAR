"function swapExactTokensForTokens(    ILendingPoolAddressesProvider addressesProvider,    address assetToSwapFrom,    address assetToSwapTo,    uint256 amountToSwap,    Path calldata path,    uint256 slippage   ) external returns (uint256) {    uint256 length = path.tokens.length;    require(length > 1 && length - 1 == path.fees.length, Errors.VT_SWAP_PATH_LENGTH_INVALID);    require(      path.tokens[0] == assetToSwapFrom && path.tokens[length - 1] == assetToSwapTo,      Errors.VT_SWAP_PATH_TOKEN_INVALID    );    uint256 minAmountOut = _getMinAmount(      addressesProvider,      assetToSwapFrom,      assetToSwapTo,      amountToSwap,      slippage    );    address UNISWAP_ROUTER = addressesProvider.getAddress('uniswapRouter');    <mask0>.safeApprove(address(UNISWAP_ROUTER), 0);    IERC20(assetToSwapFrom).safeApprove(address(UNISWAP_ROUTER), amountToSwap);    uint256 receivedAmount;    if (length > 2) {      bytes memory _path;      for (uint256 i; i < length - 1; ++i) {        _path = abi.encodePacked(_path, path.tokens[i], uint24(path.fees[i]));      }      _path = abi.encodePacked(_path, assetToSwapTo);      ISwapRouter.ExactInputParams memory params = ISwapRouter.ExactInputParams({        path: _path,        recipient: address(this),        deadline: block.timestamp,        amountIn: amountToSwap,        amountOutMinimum: minAmountOut      });      receivedAmount = ISwapRouter(UNISWAP_ROUTER).exactInput(params);    } else {      ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({        tokenIn: assetToSwapFrom,        tokenOut: assetToSwapTo,        fee: uint24(path.fees[0]),        recipient: address(this),        deadline: block.timestamp,        amountIn: amountToSwap,        amountOutMinimum: minAmountOut,        sqrtPriceLimitX96: 0      });      receivedAmount = ISwapRouter(UNISWAP_ROUTER).exactInputSingle(params);    }    require(receivedAmount != 0, Errors.VT_SWAP_MISMATCH_RETURNED_AMOUNT);    require(      IERC20(assetToSwapTo).balanceOf(address(this)) >= receivedAmount,      Errors.VT_SWAP_MISMATCH_RETURNED_AMOUNT    );    return receivedAmount;  }"