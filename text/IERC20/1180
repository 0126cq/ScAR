"function createShort(        address gammaController,        address marginPool,        address oTokenAddress,        uint256 depositAmount    ) external returns (uint256) {        IController controller = IController(gammaController);        uint256 newVaultID =            (controller.getAccountVaultCounter(address(this))).add(1);        IOtoken oToken = IOtoken(oTokenAddress);        address collateralAsset = oToken.collateralAsset();        uint256 collateralDecimals =            uint256(IERC20Detailed(collateralAsset).decimals());        uint256 mintAmount;        mintAmount = depositAmount;        if (collateralDecimals > 8) {            uint256 scaleBy = 10**(collateralDecimals.sub(8));             if (mintAmount > scaleBy) {                mintAmount = depositAmount.div(scaleBy);             }        }        IERC20 collateralToken = <mask0>;        collateralToken.safeApprove(marginPool, depositAmount);        IController.ActionArgs[] memory actions =            new IController.ActionArgs[](3);        actions[0] = IController.ActionArgs(            IController.ActionType.OpenVault,            address(this),             address(this),             address(0),             newVaultID,             0,             0,             \"\"         );        actions[1] = IController.ActionArgs(            IController.ActionType.DepositCollateral,            address(this),             address(this),             collateralAsset,             newVaultID,             depositAmount,             0,             \"\"         );        actions[2] = IController.ActionArgs(            IController.ActionType.MintShortOption,            address(this),             address(this),             oTokenAddress,             newVaultID,             mintAmount,             0,             \"\"         );        controller.operate(actions);        return mintAmount;    }"