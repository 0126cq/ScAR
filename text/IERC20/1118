"function handleEthFee(uint feeAmount, uint _amountOutMin_ethFeeBuyBack, uint deadline) private {        require(feeAmount >= MIN_ETH_FEE_IN_WEI, \"Insufficient ETH Fee!\");        uint buyBackFeeAmount = feeAmount.mul(FEE_PERCENT_TO_BUYBACK_X_100).div(ONE_HUNDRED_X_100);        uint remainingFeeAmount = feeAmount.sub(buyBackFeeAmount);        distributeEthDivs(remainingFeeAmount);        uint oldPlatformTokenBalance = IERC20(TRUSTED_PLATFORM_TOKEN_ADDRESS).balanceOf(address(this));        address[] memory path = new address[](2);        path[0] = uniswapRouterV2.WETH();        path[1] = TRUSTED_PLATFORM_TOKEN_ADDRESS;        uniswapRouterV2.swapExactETHForTokens{value: buyBackFeeAmount}(_amountOutMin_ethFeeBuyBack, path, address(this), deadline);        uint newPlatformTokenBalance = IERC20(TRUSTED_PLATFORM_TOKEN_ADDRESS).balanceOf(address(this));        uint platformTokensReceived = newPlatformTokenBalance.sub(oldPlatformTokenBalance);        <mask0>.safeTransfer(BURN_ADDRESS, platformTokensReceived);    }"