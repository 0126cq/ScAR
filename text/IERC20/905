"function withdrawReward(uint256 _amount) external {        require(msg.sender == controller, \"!controller\");        address _jar = IController(controller).jars(address(want));        address reward_token = IJar(_jar).reward();        uint256 _balance = IERC20(reward).balanceOf(address(this));        uint256 _pendingReward = pendingReward();        require(            reward_token != address(0),            \"Reward token is not set in the pickle jar\"        );        require(reward_token == reward, \"Reward token is invalid\");        require(            _pendingReward >= _amount,            \"[withdrawReward] Withdraw amount exceed redeemable amount\"        );        _balance = IERC20(reward).balanceOf(address(this));        if (_balance < _amount && getRewardHarvestable() > 0)            IStakingPools(stakingPool).claim(alcxPoolId);        _balance = IERC20(reward).balanceOf(address(this));        if (_balance < _amount && getHarvestable() > 0)            IStakingPools(stakingPool).claim(alEthPoolId);        _balance = IERC20(reward).balanceOf(address(this));        if (_balance < _amount) {            uint256 _r = _amount.sub(_balance);            uint256 _alcxDeposited = getRewardDeposited();            IStakingPools(stakingPool).withdraw(                alcxPoolId,                _alcxDeposited >= _r ? _r : _alcxDeposited            );        }        _balance = IERC20(alcx).balanceOf(address(this));        require(            _balance >= _amount,            \"[WithdrawReward] Withdraw amount exceed balance\"        );         <mask0>.safeTransfer(_jar, _amount);        rewardDeposit();    }"