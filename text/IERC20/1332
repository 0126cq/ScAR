"function _close(address _cyrepay, uint _ramt, address _pairFrom, uint _amount0, address _withdraw, address _repay, uint _wamt, address _cywithdraw) internal {        <mask0>.safeApprove(_cyrepay, 0);        IERC20(_repay).safeApprove(_cyrepay, uint(-1));        cyToken(_cyrepay).repayBorrow(_ramt);        (uint reserve0, uint reserve1,) = ISushiswapV2Pair(_pairFrom).getReserves();        (uint reserveIn, uint reserveOut) = _amount0 > 0 ? (reserve1, reserve0) : (reserve0, reserve1);        uint _minRepay = _getAmountIn(_ramt, reserveIn, reserveOut);        if (_withdraw == WETH || _repay == WETH) {            require(_minRepay <= _wamt);            cyToken(_cywithdraw).redeemUnderlying(_minRepay);            IERC20(_withdraw).safeTransfer(address(_pairFrom), _minRepay);        } else {            _crossClose(_withdraw, _minRepay, _wamt, _cywithdraw, address(_pairFrom));        }    }"