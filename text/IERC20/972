"function mature() external override {        require(!isMature, \"BondController: Already mature\");        require(owner() == _msgSender() || maturityDate < block.timestamp, \"BondController: Invalid call to mature\");        isMature = true;        TrancheData[] memory _tranches = tranches;        uint256 collateralBalance = <mask0>.balanceOf(address(this));        for (uint256 i = 0; i < _tranches.length - 1 && collateralBalance > 0; i++) {            ITranche _tranche = _tranches[i].token;            uint256 amount = Math.min(_tranche.totalSupply(), collateralBalance);            collateralBalance -= amount;            TransferHelper.safeTransfer(collateralToken, address(_tranche), amount);            _tranche.redeem(address(this), owner(), IERC20(_tranche).balanceOf(address(this)));        }        if (collateralBalance > 0) {            ITranche _tranche = _tranches[_tranches.length - 1].token;            TransferHelper.safeTransfer(collateralToken, address(_tranche), collateralBalance);            _tranche.redeem(address(this), owner(), IERC20(_tranche).balanceOf(address(this)));        }        emit Mature(_msgSender());    }"