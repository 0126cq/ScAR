"function swapExactTokensForTokens(    ILendingPoolAddressesProvider addressesProvider,    address poolAddress,    address assetToSwapFrom,    address assetToSwapTo,    uint256 amountToSwap,    uint256 slippage   ) external returns (uint256) {    uint256 minAmountOut = _getMinAmount(      addressesProvider,      assetToSwapFrom,      assetToSwapTo,      amountToSwap,      slippage    );    address curveAddressProvider = addressesProvider.getAddress('CURVE_ADDRESS_PROVIDER');    address curveExchange = ICurveAddressProvider(curveAddressProvider).get_address(2);    <mask0>.safeApprove(address(curveExchange), 0);    IERC20(assetToSwapFrom).safeApprove(address(curveExchange), amountToSwap);    uint256 receivedAmount = ICurveExchange(curveExchange).exchange(      poolAddress,      assetToSwapFrom,      assetToSwapTo,      amountToSwap,      minAmountOut,      address(this)    );    require(receivedAmount > 0, Errors.VT_SWAP_MISMATCH_RETURNED_AMOUNT);    uint256 balanceOfAsset;    if (assetToSwapTo == ETH) {      balanceOfAsset = address(this).balance;    } else {      balanceOfAsset = IERC20(assetToSwapTo).balanceOf(address(this));    }    require(balanceOfAsset >= receivedAmount, Errors.VT_SWAP_MISMATCH_RETURNED_AMOUNT);    return receivedAmount;  }"