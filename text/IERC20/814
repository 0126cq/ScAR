"function addCustomLiquidity(        address _curvePooL,        uint256 _amount,        address _curveLPToken,        uint256 _nCoins,        uint256 _indexInAmounts    ) internal returns (uint256 minted) {        uint256 minMintAmout;        uint256 initialBalance = IERC20(_curveLPToken).balanceOf(address(this));        require(_amount > 0, \"!addCustomLiquidity: _amount > 0\");        if (_nCoins == 2) {            uint256[2] memory amounts;            amounts[_indexInAmounts] = _amount;            minMintAmout = 0;            ICurvePooLSize2(_curvePooL).add_liquidity(amounts, minMintAmout);        } else if (_nCoins == 3) {            uint256[3] memory amounts;            amounts[_indexInAmounts] = _amount;            minMintAmout = 0;            ICurvePooLSize3(_curvePooL).add_liquidity(amounts, minMintAmout);        } else if (_nCoins == 4) {            uint256[4] memory amounts;            amounts[_indexInAmounts] = _amount;            minMintAmout = 0;            ICurvePooLSize4(_curvePooL).add_liquidity(amounts, minMintAmout);        } else revert(\"!addCustomLiquidity\");        uint256 finalBalance = <mask0>.balanceOf(address(this));        return (finalBalance - initialBalance);    }"