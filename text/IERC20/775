"function withdraw(int256 _withdrawAmount) public override nonReentrant {    if (msg.sender != _fujiAdmin.getFliquidator()) {      updateF1155Balances();      uint256 providedCollateral =        IFujiERC1155(fujiERC1155).balanceOf(msg.sender, vAssets.collateralID);      require(providedCollateral > 0, Errors.VL_INVALID_COLLATERAL);      uint256 neededCollateral =        getNeededCollateralFor(          IFujiERC1155(fujiERC1155).balanceOf(msg.sender, vAssets.borrowID),          true        );      uint256 amountToWithdraw =        _withdrawAmount < 0 ? providedCollateral.sub(neededCollateral) : uint256(_withdrawAmount);      require(        amountToWithdraw != 0 && providedCollateral.sub(amountToWithdraw) >= neededCollateral,        Errors.VL_INVALID_WITHDRAW_AMOUNT      );      IFujiERC1155(fujiERC1155).burn(msg.sender, vAssets.collateralID, amountToWithdraw);      _withdraw(amountToWithdraw, address(activeProvider));      <mask0>.uniTransfer(msg.sender, amountToWithdraw);      emit Withdraw(msg.sender, vAssets.collateralAsset, amountToWithdraw);    } else {      _withdraw(uint256(_withdrawAmount), address(activeProvider));      IERC20(vAssets.collateralAsset).uniTransfer(msg.sender, uint256(_withdrawAmount));    }  }"