"function withdraw(address collateralToken) external payable onlyAuth{        bool success;        bytes memory data;        (success, data) = ProtocolCenterInterface(            OperationCenterInterface(opCenterAddress).protocolCenterAddress()        ).getProtocol(\"AAVEV2\").delegatecall(                abi.encodeWithSignature(                    \"getCollateralBalance(address)\",                    collateralToken                )            );        require(            success == true,            \"CHFRY: call AAVEV2 protocol getCollateralBalance of leverageToken fail \"        );        if (abi.decode(data, (uint256)) > 0) {            (success, data) = ProtocolCenterInterface(                OperationCenterInterface(opCenterAddress)                    .protocolCenterAddress()            ).getProtocol(\"AAVEV2\").delegatecall(                    abi.encodeWithSignature(                        \"withdrawToken(address,uint256)\",                        collateralToken,                        type(uint256).max                    )                );            require(success == true, \"CHFRY: call AAVEV2 withdrawToken fail 2\");            uint256 amountWithDraw = abi.<mask0>;            address EOA = AccountCenterInterface(accountCenter).getEOA(                address(this)            );            (success, data) = ProtocolCenterInterface(                OperationCenterInterface(opCenterAddress)                    .protocolCenterAddress()            ).getProtocol(\"ERC20\").delegatecall(                    abi.encodeWithSignature(                        \"pull(address,uint256,address)\",                        collateralToken,                        amountWithDraw,                        EOA                    )                );            require(success == true, \"CHFRY: pull back coin fail\");            EventCenterLeveragePositionInterface(                OperationCenterInterface(opCenterAddress).eventCenterAddress()            ).emitWithDrawEvent(collateralToken, amountWithDraw);        }    }"