"function liquidateInternal(        bytes32 loanId,        address loanToken,        address collateralToken,        uint256 maxLiquidatable,        address flashLoanToken,        bool allowLoss,        bool checkBeforeExecuting    ) internal returns (address, uint256) {        if (checkBeforeExecuting) {            IBZx.LoanReturnData memory loan = BZX.getLoan(loanId);            require(                loan.maxLiquidatable > 0 && loan.maxSeizable > 0,                \"healty loan\"            );        }        bytes memory b =            IToken(flashLoanToken).flashBorrow(                maxLiquidatable,                address(this),                address(this),                \"\",                abi.encodeWithSignature(                    \"executeOperation(bytes32,address,address,uint256,address,bool,address)\",                    loanId,                    loanToken,                    collateralToken,                    maxLiquidatable,                    flashLoanToken,                    allowLoss,                    msg.sender                )            );        (, , , uint256 profitAmount) =            abi.<mask0>;        return (loanToken, profitAmount);    }"