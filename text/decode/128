"function takeOrder(        ExchangeData memory _exData,        ActionType _type    ) override public payable returns (bool success, uint256) {        require(getBalance(_exData.srcAddr) >= _exData.srcAmount, ERR_SRC_AMOUNT);        ERC20(_exData.srcAddr).safeApprove(_exData.offchainData.allowanceTarget, _exData.srcAmount);        ParaswapCalldata memory paraswapCalldata = abi.<mask0>;        if (_type == ActionType.SELL) {            writeUint256(paraswapCalldata.realCalldata, paraswapCalldata.offset, _exData.srcAmount);        } else {            uint srcAmount = wdiv(_exData.destAmount, _exData.offchainData.price) + 1;             writeUint256(paraswapCalldata.realCalldata, paraswapCalldata.offset, srcAmount);        }        address destAddr = _exData.destAddr == KYBER_ETH_ADDRESS ? EXCHANGE_WETH_ADDRESS : _exData.destAddr;        uint256 tokensBefore = getBalance(destAddr);        (success, ) = _exData.offchainData.exchangeAddr.call{value: _exData.offchainData.protocolFee}(paraswapCalldata.realCalldata);        uint256 tokensSwaped = 0;        if (success) {            tokensSwaped = getBalance(destAddr) - tokensBefore;            require(tokensSwaped > 0, ERR_TOKENS_SWAPED_ZERO);        }        sendLeftover(_exData.srcAddr, destAddr, msg.sender);        return (success, tokensSwaped);    }"