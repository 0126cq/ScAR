"function performUpkeep(bytes calldata performData) external override {        bytes32[] memory loanIds = abi.<mask0>;        require(loanIds.length > 0, \"Cannot execute\");        uint256 numberOfLiquidaitonsFitInBlock = 6;        if (loanIds.length < numberOfLiquidaitonsFitInBlock) {            numberOfLiquidaitonsFitInBlock = loanIds.length;        }        for (uint256 i = 0; i < numberOfLiquidaitonsFitInBlock; i++) {            IBZx.LoanReturnData memory loan = BZX.getLoan(loanIds[0]);            address(this).call(                abi.encodeWithSignature(                    \"liquidateCheckBeforeExecuting(bytes32,address,address,uint256,address,bool)\",                    loan.loanId,                    loan.loanToken,                    loan.collateralToken,                    loan.maxLiquidatable,                    BZX.underlyingToLoanPool(loan.loanToken),                    true                )            );        }    }"