"function _takeOutLoanProcessNFTs(        uint256 loanID,        uint16 version,        bytes memory tokenData    ) internal virtual returns (uint256 allowedLoanSize_) {        bool useV2;        uint256[] memory nftIDs;        uint256[] memory amounts;        if (version == 2) {            (nftIDs, amounts) = abi.<mask0>;            useV2 = true;        } else if ((2 & version) == 2) {            (, nftIDs, amounts) = abi.decode(                tokenData,                (uint256[], uint256[], uint256[])            );            useV2 = true;        }        if (useV2) {            for (uint256 i; i < nftIDs.length; i++) {                NFTLib.applyToLoanV2(loanID, nftIDs[i], amounts[i], msg.sender);                uint256 baseLoanSize = TELLER_NFT_V2.tokenBaseLoanSize(                    nftIDs[i]                );                allowedLoanSize_ += baseLoanSize * amounts[i];            }        }    }"