"function pairsAddresses(        address factoryAddress,        uint256 pageSize,        uint256 pageNbr,        uint256 offset    ) public view returns (address[] memory) {        uint256 _pairsLength = pairsLength(factoryAddress);        uint256 startIdx = (pageNbr * pageSize) + offset;        uint256 endIdx = startIdx + pageSize;        if (endIdx > _pairsLength - 1) {            endIdx = _pairsLength - 1;        }        address[] memory _pairsAddresses = new address[](_pairsLength);        uint256 pairIdx;        for (; pairIdx + startIdx <= endIdx; pairIdx++) {            address pairAddress =                IUniswapV2Factory(factoryAddress).allPairs(pairIdx + startIdx);            _pairsAddresses[pairIdx] = pairAddress;        }        bytes memory pairsAddressesEncoded = abi.encode(_pairsAddresses);        assembly {            mstore(add(pairsAddressesEncoded, 0x40), pairIdx)        }        _pairsAddresses = abi.<mask0>;        return _pairsAddresses;    }"