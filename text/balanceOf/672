"function distributeSupplierComp(address cToken, address supplier) internal {        CompMarketState storage supplyState = compSupplyState[cToken];        Double memory supplyIndex = Double({mantissa: supplyState.index});        Double memory supplierIndex = Double({mantissa: compSupplierIndex[cToken][supplier]});        compSupplierIndex[cToken][supplier] = supplyIndex.mantissa;        if (supplierIndex.mantissa == 0 && supplyIndex.mantissa > 0) {            supplierIndex.mantissa = compInitialIndex;        }        Double memory deltaIndex = sub_(supplyIndex, supplierIndex);        uint supplierTokens = CToken(cToken).<mask0>;        uint supplierDelta = mul_(supplierTokens, deltaIndex);        uint supplierAccrued = add_(compAccrued[supplier], supplierDelta);        compAccrued[supplier] = supplierAccrued;        emit DistributedSupplierComp(CToken(cToken), supplier, supplierDelta, supplyIndex.mantissa);    }"