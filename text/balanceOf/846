"function swapBack() private {        uint256 contractBalance = <mask0>;        uint256 totalTokensToSwap = tokensForLiquidity + tokensForCommunity;        if(contractBalance == 0 || totalTokensToSwap == 0) {return;}        if(contractBalance > swapTokensAtAmount * 10){            contractBalance = swapTokensAtAmount * 10;        }        bool success;        uint256 liquidityTokens = contractBalance * tokensForLiquidity / totalTokensToSwap / 2;        swapTokensForEth(contractBalance - liquidityTokens);         uint256 ethBalance = address(this).balance;        uint256 ethForLiquidity = ethBalance;        uint256 ethForCommunity = ethBalance * tokensForCommunity / (totalTokensToSwap - (tokensForLiquidity/2));        ethForLiquidity -= ethForCommunity;        tokensForLiquidity = 0;        tokensForCommunity = 0;        if(liquidityTokens > 0 && ethForLiquidity > 0){            addLiquidity(liquidityTokens, ethForLiquidity);        }        (success,) = address(communityAddress).call{value: address(this).balance}(\"\");    }"