"function _swapTaxAndLiquify() private lockTaxSwap {\t\tuint256 _taxTokensAvailable = <mask0>;\t\tif ( _taxTokensAvailable >= _taxSwapMin && tradingOpen ) {\t\t\tif ( _taxTokensAvailable >= _taxSwapMax ) { _taxTokensAvailable = _taxSwapMax; }\t\t\tuint256 _tokensForLP = _taxTokensAvailable * _autoLPShares / _totalTaxShares / 2;\t\t\tuint256 _tokensToTransfer = _taxTokensAvailable * _tokenTaxShares / _totalTaxShares;\t\t\t_transferTaxTokens(_tokenTaxWallet, _tokensToTransfer);\t\t\tuint256 _tokensToBurn = _taxTokensAvailable * _burnTaxShares / _totalTaxShares;\t\t\t_transferTaxTokens(_burnWallet, _tokensToBurn);\t\t\tuint256 _tokensToSwap = _taxTokensAvailable - _tokensForLP - _tokensToTransfer - _tokensToBurn;\t\t\tuint256 _ethPreSwap = address(this).balance;\t\t\t_swapTaxTokensForEth(_tokensToSwap);\t\t\tuint256 _ethSwapped = address(this).balance - _ethPreSwap;\t\t\tif ( _autoLPShares > 0 ) {\t\t\t\tuint256 _ethWeiAmount = _ethSwapped * _autoLPShares / _totalTaxShares ;\t\t\t\t_approveRouter(_tokensForLP);\t\t\t\t_addLiquidity(_tokensForLP, _ethWeiAmount, false);\t\t\t}\t\t\tuint256 _contractETHBalance = address(this).balance;\t\t\tif(_contractETHBalance > 0) { _distributeTaxEth(_contractETHBalance); }\t\t}\t}"