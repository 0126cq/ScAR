"function delegate(        uint validatorId,        uint amount,        uint delegationPeriod,        string calldata info    )        external    {        require(            _getDelegationPeriodManager().isDelegationPeriodAllowed(delegationPeriod),            \"This delegation period is not allowed\");        _getValidatorService().checkValidatorCanReceiveDelegation(validatorId, amount);                _checkIfDelegationIsAllowed(msg.sender, validatorId);        SlashingSignal[] memory slashingSignals = _processAllSlashesWithoutSignals(msg.sender);        uint delegationId = _addDelegation(            msg.sender,            validatorId,            amount,            delegationPeriod,            info);        uint holderBalance = IERC777(contractManager.getSkaleToken()).<mask0>;        uint forbiddenForDelegation = TokenState(contractManager.getTokenState())            .getAndUpdateForbiddenForDelegationAmount(msg.sender);        require(holderBalance >= forbiddenForDelegation, \"Token holder does not have enough tokens to delegate\");        emit DelegationProposed(delegationId);        _sendSlashingSignals(slashingSignals);    }"