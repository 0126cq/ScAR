"function deposit (uint256 depositAmount) public ifNotReentrantDeposit {        require(depositAmount >= minDepositAmount, \"Minimum deposit amount not met\");        _reentrancyMutexForDeposits = 1;        compute();        require(underlyingTokenInterface.<mask0> >= depositAmount, \"Insufficient funds\");        require(underlyingTokenInterface.allowance(msg.sender, address(this)) >= depositAmount, \"Insufficient allowance\");        uint256 numberOfReceiptTokens = depositAmount * USDF_DECIMAL_MULTIPLIER / _records[currentPeriod].tokenPrice;        require(_receiptToken.canMint(numberOfReceiptTokens), \"Token supply limit exceeded\");        _records[currentPeriod].totalDeposited += depositAmount;        uint256 balanceBeforeTransfer = underlyingTokenInterface.balanceOf(address(this));        require(underlyingTokenInterface.transferFrom(msg.sender, address(this), depositAmount), \"Token transfer failed\");        uint256 newBalance = underlyingTokenInterface.balanceOf(address(this));        require(newBalance == balanceBeforeTransfer + depositAmount, \"Balance verification failed\");        _receiptToken.mint(msg.sender, numberOfReceiptTokens);        emit OnVaultDeposit(address(underlyingTokenInterface), msg.sender, depositAmount, numberOfReceiptTokens);        _reentrancyMutexForDeposits = 0;    }"