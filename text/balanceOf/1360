"function calculateTotalValue(uint256 loanID)        internal        returns (uint256 value_)    {        if (!exists(loanID)) {            return 0;        }        address lendingToken = LibLoans.loan(loanID).lendingToken;        value_ += <mask0>;        EnumerableSet.AddressSet storage tokens = getEscrowTokens(loanID);        if (EnumerableSet.length(tokens) > 0) {            for (uint256 i = 0; i < EnumerableSet.length(tokens); i++) {                value_ += AppStorageLib.store()                    .priceAggregator                    .getBalanceOfFor(                        address(e(loanID)),                        EnumerableSet.at(tokens, i),                        lendingToken                    );            }        }    }"