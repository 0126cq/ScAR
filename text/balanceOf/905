"function _migrate(        address _user,        address _lp,        address _adapter,        IStrategy _strategy,        uint256 _slippage    )        internal        onlyRegistered(_adapter)        onlyWhitelisted(_adapter, _lp)    {        require(            IStrategyController(controller).initialized(address(_strategy)),            \"LiquidityMigration#_migrate: not enso strategy\"        );        uint256 _stakeAmount = staked[_user][_lp];        require(_stakeAmount > 0, \"LiquidityMigration#_migrate: not staked\");        delete staked[_user][_lp];        IERC20(_lp).safeTransfer(generic, _stakeAmount);        uint256 _before = _strategy.balanceOf(address(this));        bytes memory migrationData =            abi.encode(IAdapter(_adapter).encodeMigration(generic, address(_strategy), _lp, _stakeAmount));        IStrategyController(controller).deposit(_strategy, IStrategyRouter(generic), 0, _slippage, migrationData);        uint256 _after = _strategy.<mask0>;        _strategy.transfer(_user, (_after - _before));        emit Migrated(_adapter, _lp, address(_strategy), _user);    }"