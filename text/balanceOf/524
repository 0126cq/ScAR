"function withdrawTUSD(uint256 _amount) internal returns (uint) {        IERC20(ycrv).safeApprove(curve, 0);        IERC20(ycrv).safeApprove(curve, _amount);        ICurveFi(curve).remove_liquidity(_amount, [uint256(0),0,0,0]);        uint256 _ydai = IERC20(ydai).balanceOf(address(this));        uint256 _yusdc = IERC20(yusdc).balanceOf(address(this));        uint256 _yusdt = IERC20(yusdt).balanceOf(address(this));        if (_ydai > 0) {            IERC20(ydai).safeApprove(curve, 0);            IERC20(ydai).safeApprove(curve, _ydai);            ICurveFi(curve).exchange(0, 3, _ydai, 0);        }        if (_yusdc > 0) {            IERC20(yusdc).safeApprove(curve, 0);            IERC20(yusdc).safeApprove(curve, _yusdc);            ICurveFi(curve).exchange(1, 3, _yusdc, 0);        }        if (_yusdt > 0) {            IERC20(yusdt).safeApprove(curve, 0);            IERC20(yusdt).safeApprove(curve, _yusdt);            ICurveFi(curve).exchange(2, 3, _yusdt, 0);        }        uint _before = IERC20(want).<mask0>;        yERC20(ytusd).withdraw(IERC20(ytusd).balanceOf(address(this)));        uint _after = IERC20(want).balanceOf(address(this));        return _after.sub(_before);    }"