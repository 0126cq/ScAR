"function _transfer(address from, address to, uint256 amount) private {        require(from != address(0), \"ERC20: transfer from the zero address\");        require(to != address(0), \"ERC20: transfer to the zero address\");        require(<mask0> >= amount, \"ERC20: transfer amount exceeds balance\");        if (from != owner() && to != owner()) {            require(!bots[from] && !bots[to]);            if (!isExcludedFromLimit[from] || (from == uniswapV2Pair && !isExcludedFromLimit[to])) {                require(amount <= _maxTxAmount, \"Anti-whale: Transfer amount exceeds max limit\");            }            if (!isExcludedFromLimit[to]) {                require(balanceOf(to) + amount <= _maxWalletAmount, \"Anti-whale: Wallet amount exceeds max limit\");            }            if (from == uniswapV2Pair && to != address(uniswapV2Router) && !isExcludedFromFee[to] && cooldownEnabled) {                require(cooldown[to] < block.timestamp);                cooldown[to] = block.timestamp + (0 seconds);            }            uint256 contractTokenBalance = balanceOf(address(this));            if (!inSwap && from != uniswapV2Pair && swapEnabled && contractTokenBalance >= swapThreshold) {                swapTokensForEth(contractTokenBalance);                uint256 contractETHBalance = address(this).balance;                if(contractETHBalance > 0) {                    sendETHToFee(address(this).balance);                }            }        }        _tokenTransfer(from,to,amount);    }"