"function getDTRewardsInfoBatch(        address[] calldata collectionAddresses,        address[] calldata owners    ) external view returns (DTRewardsInfo[] memory) {        DTRewardsInfo[] memory rewardsInfo = new DTRewardsInfo[](collectionAddresses.length);        for (uint256 i = 0; i < collectionAddresses.length; i++) {            address collectionAddress = collectionAddresses[i];            address ownerAddress = owners[i];            uint256 id = DROPPER_TOKEN.getId(collectionAddress);            bool isCollectionApproved = COLLECTIONS_REGISTRY.isCollectionApproved(collectionAddress);            uint256 myMinted = DROPPER_TOKEN.<mask0>;            uint256 myUnminted = DROPPER_TOKEN.mintableBalanceOf(ownerAddress, id);            uint256 escrowUnminted = DROPPER_TOKEN.mintableBalanceOf(DROP_REWARD_ESCROW, id);            uint256 rewardsToClaim = DROPPER_TOKEN.rewardBalanceOf(ownerAddress, id);            uint256 unmintedDTSupply = DROPPER_TOKEN.totalMintableSupply(id);            uint256 mintedDTSupply = DROPPER_TOKEN.totalSupply(id);            bytes memory totalCollectionSupplyRaw = _getTotalCollectionSupplyRaw(collectionAddress);            bytes memory collectionOwnerRaw = _getCollectionOwnerRaw(collectionAddress);            DTRewardsInfo memory info = DTRewardsInfo(                id,                 collectionAddress,                collectionOwnerRaw,                isCollectionApproved,                myMinted,                myUnminted,                escrowUnminted,                rewardsToClaim,                unmintedDTSupply,                mintedDTSupply,                totalCollectionSupplyRaw);            rewardsInfo[i] = info;        }        return rewardsInfo;    }"