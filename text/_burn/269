"function sell(\t\tuint256 _gdAmount,\t\tuint256 _minReturn,\t\taddress _target,\t\taddress _seller\t) external returns (uint256, uint256) {\t\tGoodMarketMaker mm = getMarketMaker();\t\tif (msg.sender != nameService.getAddress(\"EXCHANGE_HELPER\")) {\t\t\tIGoodDollar(nameService.getAddress(\"GOODDOLLAR\")).burnFrom(\t\t\t\tmsg.sender,\t\t\t\t_gdAmount\t\t\t);\t\t\t_seller = msg.sender;\t\t}\t\t_target = _target == address(0x0) ? msg.sender : _target;\t\tuint256 gdx = balanceOf(_seller);\t\tuint256 discount = gdx <= _gdAmount ? gdx : _gdAmount;\t\t<mask0>;\t\tuint256 contributionAmount = 0;\t\tuint256 gdAmountTemp = _gdAmount; \t\tif (discount < gdAmountTemp)\t\t\tcontributionAmount = ContributionCalc(\t\t\t\tnameService.getAddress(\"CONTRIBUTION_CALCULATION\")\t\t\t).calculateContribution(\t\t\t\tmm,\t\t\t\tthis,\t\t\t\t_seller,\t\t\t\tERC20(cDaiAddress),\t\t\t\tgdAmountTemp - discount\t\t\t);\t\tuint256 tokenReturn = mm.sellWithContribution(\t\t\tERC20(cDaiAddress),\t\t\tgdAmountTemp,\t\t\tcontributionAmount\t\t);\t\trequire(\t\t\ttokenReturn >= _minReturn,\t\t\t\"Token return must be above the minReturn\"\t\t);\t\tcERC20(cDaiAddress).transfer(_target, tokenReturn);\t\tif (_seller == msg.sender)\t\t\temit TokenSold(\t\t\t\tmsg.sender,\t\t\t\tcDaiAddress,\t\t\t\t_gdAmount,\t\t\t\tcontributionAmount,\t\t\t\ttokenReturn,\t\t\t\t_target\t\t\t);\t\treturn (tokenReturn, contributionAmount);\t}"