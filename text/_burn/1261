"function merge(uint256[] memory tokens, string memory referralCode) public payable onlyWhenEnabled {        require(            tokens.length > 1,            \"At least merge two tokens\"        );        for (uint256 i = 0; i < tokens.length; i = i.safeAdd(1)) {            address owner = ownerOf(tokens[i]);            require(                owner == msg.sender,                \"Some token doesn't belong to the sender\"            );        }        uint256 seedIndex = _getSeedIndex(tokens[0]);        for (uint256 i = 1; i < tokens.length; i = i.safeAdd(1)) {            require(                seedIndex == _getSeedIndex(tokens[i]),                \"Some tokens are not from the same category\"            );        }        uint256 price = getMergePrice(tokens.length);        console.log(\"merge price:\", price, \"value:\", msg.value);        require(            msg.value == price,            \"Insufficient payment\"        );        uint256 printIndex = _getPrintIndex(tokens[0]);        for (uint256 i = 1; i < tokens.length; i = i.safeAdd(1)) {            uint256 candidate = _getPrintIndex(tokens[i]);            if (candidate < printIndex) {                printIndex = candidate;            }        }        uint256 score = 0;        for (uint256 i = 0; i < tokens.length; i = i.safeAdd(1)) {            uint256 eachScore = _getScore(tokens[i]);            require(                eachScore < MAX_SCORE,                \"Cannot merge a full score token\"            );            score += eachScore;        }        if (score > MAX_SCORE) {            score = MAX_SCORE;        }        for (uint256 i = 0; i < tokens.length; i = i.safeAdd(1)) {            <mask0>;        }        burntNumber += tokens.length;        seedBurntNumber[seedIndex] = seedBurntNumber[seedIndex].safeAdd(tokens.length);        uint256 token = _genToken(msg.sender, seedIndex, printIndex, score);        _mint(msg.sender, token);        _addRewardPool(price);        _fundReferral(referralCode, price);    }"