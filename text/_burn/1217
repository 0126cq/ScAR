"function burn(address to) external lock override returns (uint amount0, uint amount1) {        (uint112 _reserve0, uint112 _reserve1,) = getReserves();         address token0_ = _token0;                                        address token1_ = _token1;                                        uint balance0 = IERC20(token0_).balanceOf(address(this));        uint balance1 = IERC20(token1_).balanceOf(address(this));        uint liquidity = _balanceOf[address(this)];        bool feeOn = _mintFee(_reserve0, _reserve1);        uint totalSupply_ = _totalSupply;         amount0 = liquidity.mul(balance0) / totalSupply_;         amount1 = liquidity.mul(balance1) / totalSupply_;         require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');        <mask0>;        _safeTransfer(token0_, to, amount0);        _safeTransfer(token1_, to, amount1);        balance0 = IERC20(token0_).balanceOf(address(this));        balance1 = IERC20(token1_).balanceOf(address(this));        _update(balance0, balance1, _reserve0, _reserve1);        if (feeOn) _kLast = uint(reserve0).mul(reserve1);         emit Burn(msg.sender, amount0, amount1, to);    }"