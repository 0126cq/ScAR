"function unbondLiquidityFromJob(address liquidity, address job, uint amount) external {        require(liquidityAmount[msg.sender][liquidity][job] == 0, \"credit: pending credit\");        liquidityUnbonding[msg.sender][liquidity][job] = now.add(UNBOND);        liquidityAmountsUnbonding[msg.sender][liquidity][job] = liquidityAmountsUnbonding[msg.sender][liquidity][job].add(amount);        require(liquidityAmountsUnbonding[msg.sender][liquidity][job] <= liquidityProvided[msg.sender][liquidity][job], \"unbondLiquidityFromJob: insufficient funds\");        uint _liquidity = Keep3Library.getReserve(liquidity, address(this));        uint _credit = _liquidity.mul(amount).div(IERC20(liquidity).totalSupply());        if (_credit > credits[job][address(this)]) {            _burn(address(this), credits[job][address(this)]);            credits[job][address(this)] = 0;        } else {            <mask0>;            credits[job][address(this)] = credits[job][address(this)].sub(_credit);        }        emit UnbondJob(job, liquidity, msg.sender, block.number, amount);    }"