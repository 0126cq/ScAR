"function burn(uint amountIn) external notPaused issuanceActive {        require(amountIn <= IERC20(address(synth())).balanceOf(msg.sender), \"Balance is too low\");        require(!exchangeRates().rateIsInvalid(currencyKey), \"Currency rate is invalid\");        require(totalIssuedSynths() > 0, \"Contract cannot burn for token, token balance is zero\");        (uint burnFee, bool negative) = calculateBurnFee(targetSynthIssued);        uint burnAmount;        uint amountOut;        if (negative) {            burnAmount = targetSynthIssued < amountIn ? targetSynthIssued.sub(burnFee) : amountIn;            amountOut = burnAmount.multiplyDecimal(                uint(int(SafeDecimalMath.unit()) - burnFeeRate())            );        } else {            burnAmount = targetSynthIssued.add(burnFee) < amountIn ? targetSynthIssued.add(burnFee) : amountIn;            amountOut = burnAmount.divideDecimal(                uint(int(SafeDecimalMath.unit()) + burnFeeRate())            );        }        uint feeAmountTarget = negative ? 0 : burnAmount.sub(amountOut);        bool success = _safeTransferFrom(address(token), address(this), msg.sender, amountOut);        require(success, \"Transfer did not succeed\");        <mask0>;        emit Burned(msg.sender, amountOut, feeAmountTarget, burnAmount);    }"