"function _withdraw(uint256 _shares) internal {        if (withdrawFee == 0) {            _withdrawWithoutFee(_shares);        } else {            require(_shares != 0, \"share-is-0\");            uint256 _fee = (_shares * withdrawFee) / MAX_BPS;            uint256 _sharesAfterFee = _shares - _fee;            uint256 _amountWithdrawn = _beforeBurning(_sharesAfterFee);            uint256 _proportionalShares = _calculateShares(_amountWithdrawn);            if (_proportionalShares < _sharesAfterFee) {                _shares = (_proportionalShares * MAX_BPS) / (MAX_BPS - withdrawFee);                _fee = _shares - _proportionalShares;                _sharesAfterFee = _proportionalShares;            }            <mask0>;            _transfer(_msgSender(), feeCollector, _fee);            _afterBurning(_amountWithdrawn);            emit Withdraw(_msgSender(), _shares, _amountWithdrawn);        }    }"