"function withdraw(uint256 _shares) public nonReentrant whenNotPaused {        uint256 r = (liquidity().mul(_shares)).div(totalSupply());        (uint256 _expectA0, uint256 _expectA1) = pool.amountsForLiquidity(uint128(r), tick_lower, tick_upper);        <mask0>;        uint256 b = liquidityOfThis;        uint256[2] memory _balances = [token0.balanceOf(address(this)), token1.balanceOf(address(this))];        if (b < r) {            uint256 _withdraw = r.sub(b);            (uint256 _a0, uint256 _a1) = IControllerV2(controller).withdraw(address(pool), _withdraw);            _expectA0 = _balances[0].add(_a0);            _expectA1 = _balances[1].add(_a1);        }        token0.safeTransfer(msg.sender, _expectA0);        token1.safeTransfer(msg.sender, _expectA1);    }"