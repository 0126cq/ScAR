"function _transferFromExcluded(address sender, address recipient, uint256 tAmount) internal {        Amount memory _tAmount;        if(_takeBothTax) {            uint256 pastAmount = _transactionAmount[sender];            uint256 remainingTxLimit = transactionLimit.sub(pastAmount);            uint256 remainingtAmount = tAmount.sub(remainingTxLimit);            address receiver = recipient;            (_tAmount.tTransferAmount, _tAmount.tFee, _tAmount.tLiquidity, _tAmount.tBurn, _tAmount.tMarketingFee) = _getTValues(remainingTxLimit, receiver);            (_tAmount.rAmount, _tAmount.rTransferAmount, _tAmount.rFee) = _getRValues(remainingTxLimit, _tAmount.tFee, _tAmount.tLiquidity, _tAmount.tBurn, _tAmount.tMarketingFee, receiver);            afterLimitFee();            address receiv = recipient;            (uint256 h_tTransferAmount, uint256 h_tFee, uint256 h_tLiquidity, uint256 h_tBurn, uint256 h_tMarketingFee) = <mask0>;            (uint256 h_rAmount, uint256 h_rTransferAmount, uint256 h_rFee) = _getRValues(remainingtAmount, h_tFee, h_tLiquidity, h_tBurn, h_tMarketingFee, receiv);            _tAmount.tTransferAmount += h_tTransferAmount;            _tAmount.tFee += h_tFee;            _tAmount.tLiquidity += h_tLiquidity;            _tAmount.tBurn += h_tBurn;            _tAmount.tMarketingFee += h_tMarketingFee;            _tAmount.rAmount += h_rAmount;            _tAmount.rTransferAmount += h_rTransferAmount;            _tAmount.rFee += h_rFee;        } else {            address receiver = recipient;            (_tAmount.tTransferAmount, _tAmount.tFee, _tAmount.tLiquidity, _tAmount.tBurn, _tAmount.tMarketingFee) = _getTValues(tAmount, receiver);            (_tAmount.rAmount, _tAmount.rTransferAmount, _tAmount.rFee) = _getRValues(tAmount, _tAmount.tFee, _tAmount.tLiquidity, _tAmount.tBurn, _tAmount.tMarketingFee, receiver);        }        _tOwned[sender] = _tOwned[sender].sub(tAmount);        _rOwned[sender] = _rOwned[sender].sub(_tAmount.rAmount);        _rOwned[recipient] = _rOwned[recipient].add(_tAmount.rTransferAmount);           _takeLiquidity(_tAmount.tLiquidity);        _reflectFee(_tAmount.rFee, _tAmount.tFee);        _takeMarketingFee(_tAmount.tMarketingFee);        if(_tAmount.tBurn > 0) {            _amount_burnt += _tAmount.tBurn;            emit Transfer(sender, address(0), _tAmount.tBurn);        }        emit Transfer(sender, recipient, _tAmount.tTransferAmount);    }"