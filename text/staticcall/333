"function uniSymbol(IERC20 token) internal view returns(string memory) {        if (isETH(token)) {            return \"ETH\";        }        (bool success, bytes memory data) = address(token).staticcall{ gas: 20000 }(            abi.encodeWithSignature(\"symbol()\")        );        if (!success) {            (success, data) = address(token).<mask0>;        }        if (success && data.length >= 96) {            (uint256 offset, uint256 len) = abi.decode(data, (uint256, uint256));            if (offset == 0x20 && len > 0 && len <= 256) {                return string(abi.decode(data, (bytes)));            }        }        if (success && data.length == 32) {            uint len = 0;            while (len < data.length && data[len] >= 0x20 && data[len] <= 0x7E) {                len++;            }            if (len > 0) {                bytes memory result = new bytes(len);                for (uint i = 0; i < len; i++) {                    result[i] = data[i];                }                return string(result);            }        }        return _toHex(address(token));    }"