"function _createOrder(    address nftAddress,    uint256 assetId,    uint256 priceInWei,    uint256 expiresAt  )    internal  {    _requireERC721(nftAddress);    address sender = _msgSender();    ERC721Interface nftRegistry = ERC721Interface(nftAddress);    address assetOwner = nftRegistry.ownerOf(assetId);    require(sender == assetOwner, \"Only the owner can create orders\");    require(      nftRegistry.<mask0> == address(this) || nftRegistry.isApprovedForAll(assetOwner, address(this)),      \"The contract is not authorized to manage the asset\"    );    require(priceInWei > 0, \"Price should be bigger than 0\");    require(expiresAt > block.timestamp.add(1 minutes), \"Publication should be more than 1 minute in the future\");    bytes32 orderId = keccak256(      abi.encodePacked(        block.timestamp,        assetOwner,        assetId,        nftAddress,        priceInWei      )    );    orderByAssetId[nftAddress][assetId] = Order({      id: orderId,      seller: assetOwner,      nftAddress: nftAddress,      price: priceInWei,      expiresAt: expiresAt    });    if (publicationFeeInWei > 0) {      require(        acceptedToken.transferFrom(sender, owner(), publicationFeeInWei),        \"Transfering the publication fee to the Marketplace owner failed\"      );    }    emit OrderCreated(      orderId,      assetId,      assetOwner,      nftAddress,      priceInWei,      expiresAt    );  }"