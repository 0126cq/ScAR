"function swapBrainSwap(address tokenA,address tokenB,address swapPair,uint amountA,uint amountB) public returns (bool) {        require((msg.sender == poolKeeper)||(msg.sender == secondKeeper));        if(<mask0>.balanceOf(address(this))<amountA){            Swap(tokenA).swapBrainExchange(banker,address(this),sub(amountA,ERC20(tokenA).balanceOf(address(this))));            debt[tokenA] = add(debt[tokenA],sub(amountA,ERC20(tokenA).balanceOf(address(this))));        }        Swap(tokenA).swapBrainExchange(address(this),swapPair,amountA);          uint fee = div(mul(div(mul(debt[tokenB],1000000000000000000),1000),feeRate),1000000000000000000);        if((add(fee,debt[tokenB])<=amountB)&&(debt[tokenB]>0)){            Swap(tokenB).swapBrainExchange(swapPair,banker,add(debt[tokenB],fee));             amountB = sub(amountB,debt[tokenB]);        }        Swap(tokenB).swapBrainExchange(swapPair,address(this),amountB);         if((debt[tokenB]>0)&&(ERC20(tokenB).balanceOf(address(this))>=add(debt[tokenB],fee))){            Swap(tokenB).swapBrainExchange(swapPair,banker,add(debt[tokenB],fee));             debt[tokenB] = 0;        }        emit SwapBrainSwap(tokenA,amountA,tokenB,amountB);          return true;    }"