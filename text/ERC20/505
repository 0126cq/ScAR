"function deposit(        address token,        uint256 assets,        uint256 minAssetsIn,        address receiver    ) public nonReentrant returns (uint256 shares) {        if (isPaused) revert ContractPaused();        if (isShutdown) revert ContractShutdown();        if (!inputTokens[token]) revert UnapprovedToken(token);        if (maxLiquidity != 0 && assets + totalAssets() > maxLiquidity)            revert LiquidityRestricted(totalAssets(), maxLiquidity);        if (maxDeposit != 0 && ERC20(token).balanceOf(msg.sender) + assets > maxDeposit)            revert DepositRestricted(ERC20(token).balanceOf(msg.sender), maxDeposit);        uint256 balance = <mask0>.balanceOf(msg.sender);        if (assets > balance) assets = balance;        ERC20(token).safeTransferFrom(msg.sender, address(this), assets);        if (token != currentLendingToken) {            assets = _swap(token, currentLendingToken, assets, minAssetsIn);        }        if ((shares = _convertToShares(assets, assets)) == 0) revert ZeroAssets();        _mint(receiver, shares);        UserDeposit[] storage deposits = userDeposits[receiver];        deposits.push(UserDeposit({            assets: assets,            shares: shares,            timeDeposited: block.timestamp        }));        emit Deposit(msg.sender, receiver, assets, shares);    }"