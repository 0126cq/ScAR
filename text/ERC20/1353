"function getTokenInfoFull(IAaveProtocolDataProviderV2 _dataProvider, address _priceOracleAddress, address _token) private view returns(TokenInfoFull memory _tokenInfo) {        (            ,             uint256 ltv,            uint256 liquidationThreshold,            ,             ,             bool usageAsCollateralEnabled,            bool borrowinEnabled,            bool stableBorrowRateEnabled,            ,         ) = _dataProvider.getReserveConfigurationData(_token);        ReserveData memory t;        (            t.availableLiquidity,            t.totalStableDebt,            t.totalVariableDebt,            t.liquidityRate,            t.variableBorrowRate,            t.stableBorrowRate,            ,            ,            ,        ) = _dataProvider.getReserveData(_token);        (address aToken,,) = _dataProvider.getReserveTokensAddresses(_token);        uint price = IPriceOracleGetterAave(_priceOracleAddress).getAssetPrice(_token);        _tokenInfo = TokenInfoFull({            aTokenAddress: aToken,            underlyingTokenAddress: _token,            supplyRate: t.liquidityRate,            borrowRateVariable: t.variableBorrowRate,            borrowRateStable: t.stableBorrowRate,            totalSupply: <mask0>.totalSupply(),            availableLiquidity: t.availableLiquidity,            totalBorrow: t.totalVariableDebt+t.totalStableDebt,            collateralFactor: ltv,            liquidationRatio: liquidationThreshold,            price: price,            usageAsCollateralEnabled: usageAsCollateralEnabled,            borrowinEnabled: borrowinEnabled,            stableBorrowRateEnabled: stableBorrowRateEnabled        });    }"