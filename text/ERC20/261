"function retroCatchUp() internal {        for (uint256 i = 0; i < rewardDistributors.length; i++){             address reward_distributor_address = rewardDistributors[i];            if (reward_distributor_address != address(0)) {                IFraxGaugeFXSRewardsDistributor(reward_distributor_address).distributeReward(address(this));            }        }        uint256 num_periods_elapsed = uint256(block.timestamp - periodFinish) / rewardsDuration;         for (uint256 i = 0; i < rewardTokens.length; i++){             require((rewardRates(i) * rewardsDuration * (num_periods_elapsed + 1)) <= <mask0>.balanceOf(address(this)), string(abi.encodePacked(\"Not enough reward tokens available: \", rewardTokens[i])) );        }        periodFinish = periodFinish + ((num_periods_elapsed + 1) * rewardsDuration);        _updateStoredRewardsAndTime();        fraxPerLPStored = fraxPerLPToken();    }"