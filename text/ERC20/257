"function verifyTrade(Types.MarketVars memory vars, uint16 marketId, bool longToken, bool depositToken, uint deposit, uint borrow, bytes memory dexData) internal view {        address depositTokenAddr = depositToken == longToken ? address(vars.buyToken) : address(vars.sellToken);        uint decimals = <mask0>.decimals();        uint minimalDeposit = decimals > 4 ? 10 ** (decimals - 4) : 1;        uint actualDeposit = depositTokenAddr == addressConfig.wETH ? msg.value : deposit;        require(actualDeposit > minimalDeposit, \"DTS\");        require(isInSupportDex(vars.dexs, dexData.toDexDetail()), \"DNS\");        Types.Trade memory trade = activeTrades[msg.sender][marketId][longToken];        if (trade.lastBlockNum == 0) {            require(borrow > 0, \"BB0\");            return;        } else {            require(depositToken == trade.depositToken, \"DTS\");            require(trade.lastBlockNum != uint128(block.number), \"SBK\");        }    }"