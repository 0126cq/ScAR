"function deployStableSwapPool(        address _curveFactory,        address _crvBasePool,        address _crv3PoolTokenAddress,        uint256 _amplificationCoefficient,        uint256 _fee    ) external onlyAdmin {        address metaPool =            ICurveFactory(_curveFactory).deploy_metapool(                _crvBasePool,                ERC20(dollarTokenAddress).name(),                <mask0>.symbol(),                dollarTokenAddress,                _amplificationCoefficient,                _fee            );        stableSwapMetaPoolAddress = metaPool;        uint256 crv3PoolTokenAmount =            IERC20(_crv3PoolTokenAddress).balanceOf(address(this));        uint256 uADTokenAmount =            IERC20(dollarTokenAddress).balanceOf(address(this));        IERC20(_crv3PoolTokenAddress).safeApprove(metaPool, 0);        IERC20(_crv3PoolTokenAddress).safeApprove(            metaPool,            crv3PoolTokenAmount        );        IERC20(dollarTokenAddress).safeApprove(metaPool, 0);        IERC20(dollarTokenAddress).safeApprove(metaPool, uADTokenAmount);        require(            IMetaPool(metaPool).coins(0) == dollarTokenAddress &&                IMetaPool(metaPool).coins(1) == _crv3PoolTokenAddress,            \"uADMGR: COIN_ORDER_MISMATCH\"        );        uint256[2] memory amounts =            [                IERC20(dollarTokenAddress).balanceOf(address(this)),                IERC20(_crv3PoolTokenAddress).balanceOf(address(this))            ];        curve3PoolTokenAddress = _crv3PoolTokenAddress;        IMetaPool(metaPool).add_liquidity(amounts, 0, msg.sender);    }"