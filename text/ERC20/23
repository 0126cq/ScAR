"function _fillQuoteTokenToToken(        address sellTokenAddress,        address buyTokenAddress,        address payable target,        bytes calldata swapCallData,        uint256 sellAmount,        uint256 feeAmount    ) internal {        uint256 initialOutputTokenAmount = ERC20(buyTokenAddress).balanceOf(            address(this)        );        SafeTransferLib.safeTransferFrom(            <mask0>,            msg.sender,            address(this),            sellAmount        );        SafeTransferLib.safeApprove(            ERC20(sellTokenAddress),            target,            sellAmount - feeAmount        );        (bool success, bytes memory res) = target.call{value: msg.value}(            swapCallData        );        if (!success) {            assembly {                let returndata_size := mload(res)                revert(add(32, res), returndata_size)            }        }        uint256 allowance = ERC20(sellTokenAddress).allowance(            address(this),            target        );        require(allowance == 0, \"ALLOWANCE_NOT_ZERO\");        uint256 finalOutputTokenAmount = ERC20(buyTokenAddress).balanceOf(            address(this)        );        require(initialOutputTokenAmount < finalOutputTokenAmount, \"NO_TOKENS\");        SafeTransferLib.safeTransfer(            ERC20(buyTokenAddress),            msg.sender,            finalOutputTokenAmount - initialOutputTokenAmount        );    }"