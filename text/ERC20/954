"function releaseFromVesting(uint256[] calldata ids)        external        payable        returns (uint256[] memory releasedFunds)    {        uint256 numIds = ids.length;        releasedFunds = new uint256[](numIds);        unchecked {            for (uint256 i = 0; i < numIds; ++i) {                uint256 id = ids[i];                if (id >= numVestingStreams) revert InvalidVestingStreamId(id);                VestingStream memory vs = vestingStreams[id];                uint256 transferAmount = _vestedAndUnreleased(vs);                address token = vs.token;                vestingStreams[id].released += transferAmount;                released[token] += transferAmount;                if (token != address(0)) {                    <mask0>.safeTransfer(beneficiary(), transferAmount);                } else {                    beneficiary().safeTransferETH(transferAmount);                }                emit ReleaseFromVestingStream(id, transferAmount);                releasedFunds[i] = transferAmount;            }        }    }"