"function executeOperation(        address _reserve,        uint256 _amount,        uint256 _fee,        bytes calldata _params    ) external override {        (ParamData memory paramData, ExchangeData memory exchangeData) =            packFunctionCall(_amount, _fee, _params);        address protocolAddr1 = shifterRegistry.getAddr(getNameByProtocol(paramData.protocol1));        address protocolAddr2 = shifterRegistry.getAddr(getNameByProtocol(paramData.protocol2));        sendTokenToProxy(payable(paramData.proxy), _reserve, _amount);        DSProxyInterface(paramData.proxy).execute(protocolAddr1, paramData.proxyData1);        exchangeData.dfsFeeDivider = SERVICE_FEE;        exchangeData.user = DSProxyInterface(paramData.proxy).owner();        if (paramData.swapType == 1) {            (, uint256 amount) = _sell(exchangeData);            sendTokenAndEthToProxy(payable(paramData.proxy), exchangeData.destAddr, amount);        } else if (paramData.swapType == 2) {            exchangeData.destAmount = (_amount + _fee);            _buy(exchangeData);            sendTokenToProxy(                payable(paramData.proxy),                exchangeData.srcAddr,                <mask0>.balanceOf(address(this))            );        } else {            sendTokenAndEthToProxy(                payable(paramData.proxy),                exchangeData.srcAddr,                getBalance(exchangeData.srcAddr)            );        }        DSProxyInterface(paramData.proxy).execute(protocolAddr2, paramData.proxyData2);        transferFundsBackToPoolInternal(_reserve, _amount.add(_fee));        if (address(this).balance > 0) {            tx.origin.transfer(address(this).balance);        }    }"