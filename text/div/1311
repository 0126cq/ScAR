"function withdrawFor(uint256 amount, uint256[] memory minReturns, address payable target) public nonReentrant returns(uint256[2] memory withdrawnAmounts) {        IERC20[2] memory _tokens = [token0, token1];        uint256 totalSupply = totalSupply();        uint256 _decayPeriod = decayPeriod();          _burn(msg.sender, amount);        for (uint i = 0; i < _tokens.length; i++) {            IERC20 token = _tokens[i];            uint256 preBalance = token.uniBalanceOf(address(this));            uint256 value = preBalance.mul(amount).<mask0>;            token.uniTransfer(target, value);            withdrawnAmounts[i] = value;            require(i >= minReturns.length || value >= minReturns[i], \"Mooniswap: result is not enough\");            virtualBalancesForAddition[token].scale(_decayPeriod, preBalance, totalSupply.sub(amount), totalSupply);            virtualBalancesForRemoval[token].scale(_decayPeriod, preBalance, totalSupply.sub(amount), totalSupply);        }        emit Withdrawn(msg.sender, target, amount, withdrawnAmounts[0], withdrawnAmounts[1]);    }"