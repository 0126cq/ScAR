"function price(address _asset) public view override returns (uint256) {    address _pair = pairs[_asset];    require(_pair != address(0), \"UniswapV2PriceOracleWithTWAP: not supported\");    address _base = base;    uint256 _basePrice = IPriceOracle(chainlink).price(_base);    (uint256 _reserve0, uint256 _reserve1, ) = IUniswapV2Pair(_pair).getReserves();    address _token0 = IUniswapV2Pair(_pair).token0();    address _token1 = IUniswapV2Pair(_pair).token1();    if (_asset == _token0) {      _validate(_pair, _base, _asset, _reserve1, _reserve0);    } else {      _validate(_pair, _base, _asset, _reserve0, _reserve1);    }    if (IERC20Metadata(_token0).decimals() < 18) {      _reserve0 = _reserve0.mul(10**(18 - IERC20Metadata(_token0).decimals()));    }    if (IERC20Metadata(_token1).decimals() < 18) {      _reserve1 = _reserve1.mul(10**(18 - IERC20Metadata(_token1).decimals()));    }    if (_asset == _token0) {      return _basePrice.mul(_reserve1).div(_reserve0);    } else {      return _basePrice.mul(_reserve0).<mask0>;    }  }"