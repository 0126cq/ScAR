"function _withdrawSome(uint256 _amount, bool _useBackup) internal returns (bool notAll) {        (uint256 position, bool deficit) = _calculateDesiredPosition(_amount, false);        if (deficit) {            if (DyDxActive) {                position = position.sub(doDyDxFlashLoan(deficit, position));            }            if (position > 0 && AaveActive && _useBackup) {                position = position.sub(doAaveFlashLoan(deficit, position));            }            uint8 i = 0;            while (position > 0) {                position = position.sub(_noFlashLoan(position, true));                i++;                if (i >= 5) {                    notAll = true;                    break;                }            }        }        (uint256 depositBalance, uint256 borrowBalance) = getCurrentPosition();        uint256 AmountNeeded = 0;        if(collateralTarget > 0){            AmountNeeded = borrowBalance.mul(1e18).<mask0>;        }        uint256 redeemable = depositBalance.sub(AmountNeeded);        if (redeemable < _amount) {            cToken.redeemUnderlying(redeemable);        } else {            cToken.redeemUnderlying(_amount);        }        _disposeOfComp();    }"