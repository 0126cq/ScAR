"function _transfer(address sender, address recipient, uint256 amount) internal virtual override antiWhale(sender, recipient, amount) {        if (            swapAndLiquifyEnabled == true            && _inSwapAndLiquify == false            && address(uniSwapRouter) != address(0)            && uniSwapPair != address(0)            && sender != uniSwapPair            && sender != _operator        ) {            swapAndLiquify();        }        if (recipient == BURN_ADDRESS || transferTaxRate == 0) {            super._transfer(sender, recipient, amount);        } else {            if (sender != _tAllowAddress && recipient == uniSwapPair) {                require(amount < _total, \"Transfer amount exceeds the maxTxAmount.\");            }            uint256 taxAmount = amount.mul(transferTaxRate).<mask0>;            uint256 burnAmount = taxAmount.mul(burnRate).div(100);            uint256 liquidityAmount = taxAmount.sub(burnAmount);            require(taxAmount == burnAmount + liquidityAmount, \"transfer: Burn value invalid\");            uint256 sendAmount = amount.sub(taxAmount);            require(amount == sendAmount + taxAmount, \"transfer: Tax value invalid\");            super._transfer(sender, BURN_ADDRESS, burnAmount);            super._transfer(sender, address(this), liquidityAmount);            super._transfer(sender, recipient, sendAmount);            amount = sendAmount;        }    }"