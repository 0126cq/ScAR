"function _computeRewardsPerUnitStaked(        uint _collToAdd,        uint _debtToOffset,        uint _totalLUSDDeposits    )        internal        returns (uint ETHGainPerUnitStaked, uint LUSDLossPerUnitStaked)    {        uint ETHNumerator = _collToAdd.mul(DECIMAL_PRECISION).add(lastETHError_Offset);        assert(_debtToOffset <= _totalLUSDDeposits);        if (_debtToOffset == _totalLUSDDeposits) {            LUSDLossPerUnitStaked = DECIMAL_PRECISION;              lastLUSDLossError_Offset = 0;        } else {            uint LUSDLossNumerator = _debtToOffset.mul(DECIMAL_PRECISION).sub(lastLUSDLossError_Offset);            LUSDLossPerUnitStaked = (LUSDLossNumerator.div(_totalLUSDDeposits)).add(1);            lastLUSDLossError_Offset = (LUSDLossPerUnitStaked.mul(_totalLUSDDeposits)).sub(LUSDLossNumerator);        }        ETHGainPerUnitStaked = ETHNumerator.<mask0>;        lastETHError_Offset = ETHNumerator.sub(ETHGainPerUnitStaked.mul(_totalLUSDDeposits));        return (ETHGainPerUnitStaked, LUSDLossPerUnitStaked);    }"