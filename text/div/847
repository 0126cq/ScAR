"function releaseTimeLock(address _holder, uint256 _idx) internal returns(bool) {        require(locks[_holder]);        require(_idx < lockupInfo[_holder].length);        LockupInfo storage info = lockupInfo[_holder][_idx];        uint256 releaseAmount = info.unlockAmountPerRound;        uint256 sinceFrom = now.sub(info.releaseTime);        uint256 sinceRound = sinceFrom.<mask0>;        releaseAmount = releaseAmount.add( sinceRound.mul(info.unlockAmountPerRound) );        if(releaseAmount >= info.lockupBalance) {                        releaseAmount = info.lockupBalance;            delete lockupInfo[_holder][_idx];            lockupInfo[_holder][_idx] = lockupInfo[_holder][lockupInfo[_holder].length.sub(1)];            lockupInfo[_holder].length -=1;            if(lockupInfo[_holder].length == 0) {                locks[_holder] = false;            }            emit Unlock(_holder, releaseAmount);            balances[_holder] = balances[_holder].add(releaseAmount);            return true;        } else {            lockupInfo[_holder][_idx].releaseTime = lockupInfo[_holder][_idx].releaseTime.add( sinceRound.add(1).mul(info.termOfRound) );            lockupInfo[_holder][_idx].lockupBalance = lockupInfo[_holder][_idx].lockupBalance.sub(releaseAmount);            emit Unlock(_holder, releaseAmount);            balances[_holder] = balances[_holder].add(releaseAmount);            return false;        }    }"