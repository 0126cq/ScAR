"function registerUserOnToken(address _token, address _user, uint _value, uint _flc, string _json) public onlyWhitelisted() returns (uint) {        Debug(\"USER.registerUserOnToken() _token,_user,msg.sender\",_token,_user, msg.sender);        Debug(\"USER.registerUserOnToken() _valu, msg.value\",_value,msg.value);        uint _time = block.timestamp;        uint _userid = 0;        uint _userindex = 0;        uint _credit = 0;        if (msg.sender != NRB_address) {            _credit = _value;        }        if (accounts[_user][_token].registered) {            _userid = accounts[_user][_token].userid;            _userindex = accounts[_user][_token].userindex;        } else {            if (userindex[_token] == 0) {                userindex[_token] = 1;            }            _userindex                         = userindex[_token];            _userid                            = userlength;            user[_userid]                      = _user;            tokenUsers[_token][_userindex]     = _user;            accounts[_user][_token].registered = true;            accounts[_user][_token].userid     = _userid;            accounts[_user][_token].userindex  = _userindex;            userindex[_token]++;            userlength++;        }        accounts[_user][_token].time = _time;        if (keccak256(_json) != <mask0>) {            accounts[_user][_token].json = _json;        }        accounts[_user][_token].flc = accounts[_user][_token].flc + _flc;         accounts[_user][_token].paid = accounts[_user][_token].paid + _value;        accounts[_user][_token].credit = accounts[_user][_token].credit + _credit;        raisedAmount[_token] = raisedAmount[_token] + _value;        if (!tokenmap[_token]) {            tokenlist[tokenlength++] = _token;            tokenmap[_token] = true;        }        return _userindex;    }"