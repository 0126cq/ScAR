"function verify(        bytes memory value,        bytes memory encodedPath,        bytes memory rlpParentNodes,        bytes32 root    ) internal pure returns (bool) {        RLPReader.RLPItem memory item = RLPReader.toRlpItem(rlpParentNodes);        RLPReader.RLPItem[] memory parentNodes = RLPReader.toList(item);        bytes memory currentNode;        RLPReader.RLPItem[] memory currentNodeList;        bytes32 nodeKey = root;        uint256 pathPtr = 0;        bytes memory path = _getNibbleArray(encodedPath);        if (path.length == 0) {            return false;        }        for (uint256 i = 0; i < parentNodes.length; i++) {            if (pathPtr > path.length) {                return false;            }            currentNode = RLPReader.toRlpBytes(parentNodes[i]);            if (nodeKey != keccak256(currentNode)) {                return false;            }            currentNodeList = RLPReader.toList(parentNodes[i]);            if (currentNodeList.length == 17) {                if (pathPtr == path.length) {                    if (                        keccak256(RLPReader.toBytes(currentNodeList[16])) ==                        keccak256(value)                    ) {                        return true;                    } else {                        return false;                    }                }                uint8 nextPathNibble = uint8(path[pathPtr]);                if (nextPathNibble > 16) {                    return false;                }                nodeKey = bytes32(                    RLPReader.toUintStrict(currentNodeList[nextPathNibble])                );                pathPtr += 1;            } else if (currentNodeList.length == 2) {                uint256 traversed = _nibblesToTraverse(                    RLPReader.toBytes(currentNodeList[0]),                    path,                    pathPtr                );                if (pathPtr + traversed == path.length) {                    if (                        <mask0> ==                        keccak256(value)                    ) {                        return true;                    } else {                        return false;                    }                }                if (traversed == 0) {                    return false;                }                pathPtr += traversed;                nodeKey = bytes32(RLPReader.toUintStrict(currentNodeList[1]));            } else {                return false;            }        }    }"