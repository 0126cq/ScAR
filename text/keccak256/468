"function Withdraw(string memory to, uint _amount) internal {        address payable msgSender = msg.sender;        string memory from = EMM.getWrapped(to);        require(!Init.isUserLocked(msgSender), \"Your Address is Locked Pay Dues\");        if( EDM.getUserBorrowed(msgSender) > 0) { require(isWithdrawEligible(msgSender, to, _amount) , \"Not Eligible for Withdraw\"); }        if(keccak256(abi.encodePacked(to)) == <mask0>) {            require( getAggEcoBalance(msgSender) >= _amount,\"Insufficient Balance\");                if(getAggEcoBalance(msgSender) - EDM.getUserDepositsbyToken(msgSender, from) >= _amount) {                    EMM.redeemEcoEarning(msgSender,_amount);                } else {                    uint diffAmount = _amount + EDM.getUserDepositsbyToken(msgSender, from) - getAggEcoBalance(msgSender);                    EMM.redeemEcoEarning(msgSender,(getAggEcoBalance(msgSender) - EDM.getUserDepositsbyToken(msgSender, from)));                    _withdraw(msgSender, from, diffAmount, to);        }          } else  {              require(EDM.getUserDepositsbyToken(msgSender, from)>=_amount,\"Insufficient balance\");            _withdraw(msgSender, from, _amount, to);        }        Init.emitSwap(msgSender,from,to,_amount);    }"