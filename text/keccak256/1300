"function computeRoot(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {    bytes32 computedHash = leaf;    for (uint256 i = 0; i < proof.length; i++) {      bytes32 proofElement = proof[i];      if (computedHash <= proofElement) {        computedHash = keccak256(abi.encodePacked(computedHash, proofElement));      } else {        computedHash = <mask0>;      }    }    return computedHash;  }"