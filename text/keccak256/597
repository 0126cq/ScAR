"function _addNode(        address from,        string memory name,        bytes4 ip,        bytes4 publicIP,        uint16 port,        bytes32[2] memory publicKey,        uint validatorId    )        private        returns (uint nodeIndex)    {        ConstantsHolder constantsHolder = ConstantsHolder(contractManager.getContract(\"ConstantsHolder\"));        nodes.push(Node({            name: name,            ip: ip,            publicIP: publicIP,            port: port,            publicKey: publicKey,            startBlock: block.number,            lastRewardDate: block.timestamp,            finishTime: 0,            status: NodeStatus.Active,            validatorId: validatorId        }));        nodeIndex = nodes.length.sub(1);        validatorToNodeIndexes[validatorId].push(nodeIndex);        bytes32 nodeId = <mask0>;        nodesIPCheck[ip] = true;        nodesNameCheck[nodeId] = true;        nodesNameToIndex[nodeId] = nodeIndex;        nodeIndexes[from].isNodeExist[nodeIndex] = true;        nodeIndexes[from].numberOfNodes++;        spaceOfNodes.push(SpaceManaging({            freeSpace: constantsHolder.TOTAL_SPACE_ON_NODE(),            indexInSpaceMap: spaceToNodes[constantsHolder.TOTAL_SPACE_ON_NODE()].length        }));        spaceToNodes[constantsHolder.TOTAL_SPACE_ON_NODE()].push(nodeIndex);        numberOfActiveNodes++;    }"