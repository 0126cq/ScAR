"function mintNFT(uint256 numberOfTokens, bytes32[] calldata _merkleProof) external payable {        bytes32 leaf = <mask0>;        if(!MerkleProof.verify(_merkleProof, root, leaf)){            require(saleIsActive, \"Your are not whitelister. Try on pulic sale\");        }        require(totalSupply() + numberOfTokens <= totalsupply, \"can't mint anymore\");        uint256 freeMintableCnt = 0;        uint256 personalFreeMintable = MAX_FREE_FOR_USER - claimInFree[msg.sender];        uint256 payfulAmount = numberOfTokens;        if ( personalFreeMintable > 0 && freemintednft < MAX_SUPPLY_FOR_FREE) {            freeMintableCnt = MAX_SUPPLY_FOR_FREE - freemintednft;            if (freeMintableCnt > personalFreeMintable) {                freeMintableCnt = personalFreeMintable;            }        }        if (freeMintableCnt >= numberOfTokens) {            freeMintableCnt = numberOfTokens;            payfulAmount = 0;        } else {            payfulAmount = numberOfTokens - freeMintableCnt;        }        freemintednft += freeMintableCnt;        if(payfulAmount != 0){            require(                msg.value >= MINT_PRICE * payfulAmount,                \"Invalid Amount\"            );            uint256 restAmount = msg.value - MINT_PRICE * payfulAmount;            uint256 commisionAmount = MINT_PRICE.mul(payfulAmount).mul(9).div(DENOMINATOR);            payable(comissionaddress).transfer(commisionAmount);            payable(msg.sender).transfer(restAmount);            for(uint256 i = 0; i < creator.length;i++){                uint256 creatorFee = (MINT_PRICE.mul(payfulAmount) - commisionAmount).mul(creatorPercent[i]).div(DENOMINATOR);                payable(creator[i]).transfer(creatorFee);               }            payable(owner()).transfer(address(this).balance);        }        claimInFree[msg.sender] += freeMintableCnt;        _safeMint(msg.sender, numberOfTokens);        if(totalSupply() >= MAX_SUPPLY_FOR_FREE) freemintstate = false;    }"