"function checkProofOrdered(\t\tbytes32[] memory _proof,\t\tbytes32 _root,\t\tbytes32 _hash,\t\tuint256 _index\t) public pure returns (bool) {\t\tbytes32 proofElement;\t\tbytes32 computedHash = _hash;\t\tuint256 remaining;\t\tfor (uint256 j = 0; j < _proof.length; j++) {\t\t\tproofElement = _proof[j];\t\t\tremaining = _proof.length - j;\t\t\twhile (remaining > 0 && _index % 2 == 1 && _index > 2**remaining) {\t\t\t\t_index = _index / 2 + 1;\t\t\t}\t\t\tif (_index % 2 == 0) {\t\t\t\tcomputedHash = <mask0>;\t\t\t\t_index = _index / 2;\t\t\t} else {\t\t\t\tcomputedHash = keccak256(abi.encodePacked(computedHash, proofElement));\t\t\t\t_index = _index / 2 + 1;\t\t\t}\t\t}\t\treturn computedHash == _root;\t}"