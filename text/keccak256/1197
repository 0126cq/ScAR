"function permit(        address owner,        address spender,        uint256 amount,        uint256 deadline,        uint8 v,        bytes32 r,        bytes32 s    ) external override {        require(owner != address(0x00), \"ERR_ERC20_PERMIT_OWNER_ZERO_ADDRESS\");        require(spender != address(0x00), \"ERR_ERC20_PERMIT_SPENDER_ZERO_ADDRESS\");        require(deadline >= block.timestamp, \"ERR_ERC20_PERMIT_EXPIRED\");        bytes32 hashStruct = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, amount, nonces[owner]++, deadline));        bytes32 digest = <mask0>;        address recoveredOwner = ecrecover(digest, v, r, s);        require(recoveredOwner != address(0x00), \"ERR_ERC20_PERMIT_RECOVERED_OWNER_ZERO_ADDRESS\");        require(recoveredOwner == owner, \"ERR_ERC20_PERMIT_INVALID_SIGNATURE\");        approveInternal(owner, spender, amount);    }"