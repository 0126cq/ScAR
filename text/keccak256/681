"function __callback(bytes32 queryId, string result, bytes proof) public onlyOraclize {        if (oraclize_randomDS_proofVerify__returnCode(queryId, result, proof) != 0) {            if(!refundPaused){                playerAddress[queryId].transfer(playerBetAmount[queryId]);                LogRefund(queryId, playerBetAmount[queryId]);            }        }else{            uint8 tempStart = playerNumberStart[queryId];            uint8 tempEnd = playerNumberEnd[queryId];            address tempAddress = playerAddress[queryId];            uint256 tempAmount = playerBetAmount[queryId];            uint8 probability;            uint256 houseEdgeFee;            uint256 playerProfit;            uint8 random = uint8(uint256(<mask0>) % 100) + 1;            delete playerAddress[queryId];            delete playerBetAmount[queryId];            delete playerNumberStart[queryId];            delete playerNumberEnd[queryId];            if(tempEnd == 0){                if(random % 2 == tempStart){                    probability = 50;                    playerProfit = getProfit(probability,tempAmount);                    totalWeiWon = safeAdd(totalWeiWon, playerProfit);                    setMaxProfit();                    LogResult(queryId, tempAddress, random, playerProfit, 1, 0, 0, tempStart, tempAmount);                    houseEdgeFee = getHouseEdgeFee(probability, tempAmount);                    increaseJackpot(houseEdgeFee * jackpotOfHouseEdge / 1000, queryId, tempAddress, tempAmount);                    tempAddress.transfer(safeAdd(playerProfit, tempAmount));                  }else{                    LogResult(queryId, tempAddress, random, 0, 0, 0, 0, tempEnd, tempAmount);                     setMaxProfit();                    tempAddress.transfer(1);                }            }else if(tempEnd != 0 && tempStart != 0){                if(tempStart <= random && random <= tempEnd){                    probability = tempEnd - tempStart + 1;                    playerProfit = getProfit(probability,tempAmount);                    totalWeiWon = safeAdd(totalWeiWon, playerProfit);                    setMaxProfit();                    LogResult(queryId, tempAddress, random, playerProfit, 1, tempStart, tempEnd, 2, tempAmount);                    houseEdgeFee = getHouseEdgeFee(probability, tempAmount);                    increaseJackpot(houseEdgeFee * jackpotOfHouseEdge / 1000, queryId, tempAddress, tempAmount);                    tempAddress.transfer(safeAdd(playerProfit, tempAmount));                   }else{                    LogResult(queryId, tempAddress, random, 0, 0, tempStart, tempEnd, 2, tempAmount);                     setMaxProfit();                    tempAddress.transfer(1);                }            }        }    }"