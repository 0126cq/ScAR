"function liquidate(        address _flashLoanToken,        address _cErc20,        address _borrower,        uint256 _amount,        address _cTokenCollateral,        IRouter _dolaRouter,        IRouter _exitRouter,        uint256 _minProfit,        uint256 _deadline    ) external {        require(            (_dolaRouter == sushiRouter || _dolaRouter == uniRouter) &&                (_exitRouter == sushiRouter || _exitRouter == uniRouter),            \"Invalid router\"        );        (, , uint256 shortfall) = comptroller.getAccountLiquidity(_borrower);        require(shortfall > 0, \"!liquidatable\");        address[] memory path = _getDolaPath(_flashLoanToken);        uint256 tokensNeeded;        {            tokensNeeded = _dolaRouter.getAmountsIn(_amount, path)[0];            require(                tokensNeeded <= flashLender.maxFlashLoan(_flashLoanToken),                \"Insufficient lender reserves\"            );            uint256 fee = flashLender.flashFee(_flashLoanToken, tokensNeeded);            uint256 repayment = tokensNeeded + fee;            <mask0>;        }        bytes memory data =            abi.encode(                LiquidationData({                    cErc20: _cErc20,                    cTokenCollateral: _cTokenCollateral,                    borrower: _borrower,                    caller: msg.sender,                    dolaRouter: _dolaRouter,                    exitRouter: _exitRouter,                    amount: _amount,                    minProfit: _minProfit,                    deadline: _deadline                })            );        flashLender.flashLoan(            address(this),            _flashLoanToken,            tokensNeeded,            data        );    }"