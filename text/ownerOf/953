"function processExits(address _token) public {        uint256 exitableAt;        uint256 exitId;        PriorityQueue exitQueue = PriorityQueue(exitsQueues[_token]);        while (exitQueue.currentSize() > 0 && gasleft() > ON_FINALIZE_GAS_LIMIT) {            (exitableAt, exitId) = exitQueue.getMin();            exitId = (exitableAt << 128) | exitId;            PlasmaExit memory currentExit = exits[exitId];            if (exitableAt > block.timestamp) return;            exitQueue.delMin();            if (!exitNft.exists(exitId)) continue;            address exitor = exitNft.<mask0>;            exits[exitId].owner = exitor;            exitNft.burn(exitId);            currentExit.predicate.call(                abi.encodeWithSignature(\"onFinalizeExit(bytes)\", encodeExitForProcessExit(exitId))            );            emit Withdraw(exitId, exitor, _token, currentExit.receiptAmountOrNFTId);            if (!currentExit.isRegularExit) {                address(uint160(exitor)).send(BOND_AMOUNT);            }        }    }"