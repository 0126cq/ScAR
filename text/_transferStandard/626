"function _transfer(address from, address to, uint256 amount) private {\t\tif(from != owner() && to != owner()){\t\t\trequire(tradingOpen,\"Trading not open yet\");\t\t\tif(TOBITNA && from == uniswapV2Pair){\t\t\t\tisBlacklisted[to] = true;\t\t\t}\t\t}\t\tif(blacklistMode && !TOBITNA){\t\t\trequire(!isBlacklisted[from],\"Blacklisted\");\t\t}\t\trequire((amount <= _maxTxAmount) || isTxLimitExempt[from] || isTxLimitExempt[to], \"Max TX Limit Exceeded\");\t\tif (!isWalletLimitExempt[from] && !isWalletLimitExempt[to] && to != uniswapV2Pair) {\t\t    require((balanceOf(to) + amount) <= _maxWalletToken,\"max wallet limit reached\");\t\t}\t\t{\t\t    uint256 contractTokenBalance = balanceOf(address(this));\t\t    if(contractTokenBalance >= _maxTxAmount) {\t\t        contractTokenBalance = _maxTxAmount - 1;\t\t    }\t\t    bool overMinTokenBalance = contractTokenBalance >= swapThreshold;\t\t    if (overMinTokenBalance &&\t\t        !inSwapAndLiquify &&\t\t        from != uniswapV2Pair &&\t\t        swapAndLiquifyEnabled\t\t    ) {\t\t        contractTokenBalance = swapThreshold;\t\t        swapAndLiquify(contractTokenBalance);\t\t    }\t\t    if(!inSwapAndLiquify && from != uniswapV2Pair && swapAndLiquifyEnabled){\t\t        _fees_to_eth(_fee_treasury_convert_limit,_wallet_treasury, _fee_treasury_min_bal);\t\t        _fees_to_eth(_fee_marketing_convert_limit,_wallet_marketing, _fee_marketing_min_bal);\t\t    }\t\t}\t\tbool takeFee = true;\t\tif(isFeeExempt[from] || isFeeExempt[to]){\t\t    takeFee = false;\t\t    removeAllFee();\t\t}\t\t(uint256 rAmount, uint256 rTransferAmount, uint256 rReflection, uint256 tTransferAmount, uint256 tMarketing, uint256 tLiquidity, uint256 tTreasury,  uint256 tReflection) = _getValues(amount, to, from);\t\t<mask0>;\t\t_supply_reflected = _supply_reflected - rReflection;\t\t_contractReflectionStored = _contractReflectionStored + tReflection;\t\tif(!takeFee){\t\t    restoreAllFee();\t\t} else{\t\t    _takeFee(tMarketing,_wallet_marketing);\t\t    _takeFee(tLiquidity,address(this));\t\t    _takeFee(tTreasury,_wallet_treasury);\t\t}\t}"