"function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {        require(_functionSelectors.length > 0, \"LibDiamondCut: No selectors in facet to cut\");        DiamondStorage storage ds = diamondStorage();        uint256 selectorCount = ds.selectors.length;        require(_facetAddress == address(0), \"LibDiamondCut: Remove facet address must be address(0)\");        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {            bytes4 selector = _functionSelectors[selectorIndex];            FacetAddressAndSelectorPosition memory oldFacetAddressAndSelectorPosition = ds.facetAddressAndSelectorPosition[selector];            require(oldFacetAddressAndSelectorPosition.facetAddress != address(0), \"LibDiamondCut: Can't remove function that doesn't exist\");            require(oldFacetAddressAndSelectorPosition.facetAddress != address(this), \"LibDiamondCut: Can't remove immutable function.\");            selectorCount--;            if (oldFacetAddressAndSelectorPosition.selectorPosition != selectorCount) {                bytes4 lastSelector = ds.selectors[selectorCount];                ds.selectors[oldFacetAddressAndSelectorPosition.selectorPosition] = lastSelector;                ds.facetAddressAndSelectorPosition[lastSelector].selectorPosition = oldFacetAddressAndSelectorPosition.selectorPosition;            }            ds.selectors.<mask0>;            delete ds.facetAddressAndSelectorPosition[selector];        }    }"