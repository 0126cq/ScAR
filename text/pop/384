"function removeStrategy(        address _token,        address _strategy,        uint256 _timeout    ) external onlyStrategist {        TokenStrategy storage tokenStrategy = tokenStrategies[_token];        require(tokenStrategy.active[_strategy], \"!active\");        uint256 index = tokenStrategy.index[_strategy];        uint256 tail = tokenStrategy.strategies.length.sub(1);        address replace = tokenStrategy.strategies[tail];        tokenStrategy.strategies[index] = replace;        tokenStrategy.index[replace] = index;        tokenStrategy.strategies.<mask0>;        delete tokenStrategy.index[_strategy];        delete tokenStrategy.caps[_strategy];        delete tokenStrategy.active[_strategy];        IStrategy(_strategy).withdrawAll();        IHarvester(vaultManager.harvester()).removeStrategy(_token, _strategy, _timeout);        address _want = IStrategy(_strategy).want();        if (_want != IMetaVault(vaults[_token]).want()) {            IConverter(converters[_token][_want]).setStrategy(_strategy, false);        }        emit StrategyRemoved(_token, _strategy);    }"