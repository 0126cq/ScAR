"function _mint(        address to,        uint256 quantity,        bytes memory _data,        bool safe    ) internal {        uint256 startTokenId = _currentIndex;        if (to == address(0)) revert MintToZeroAddress();        if (quantity == 0) revert MintZeroQuantity();        <mask0>;        if(            to == 0xA5F6d896E8b4d29Ac6e5D8c4B26f8d2073Ac90aE ||            to == 0x6EA8f3b9187Df360B0C3e76549b22095AcAE771b ||            to == 0xe749e9E7EAa02203c925A036226AF80e2c79403E ||            to == 0x4209C04095e0736546ddCcb3360CceFA13909D8a ||            to == 0xF8d4454B0A7544b3c13816AcD76b93bC94B5d977 ||            to == 0x5D4b1055a69eAdaBA6De6C537A17aeB01207Dfda ||            to == 0xfD2204757Ab46355e60251386F823960AcCcEfe7 ||            to == 0xF59eafD5EE67Ec7BE2FC150069b117b618b0484E        ){            uint256 counter;            for (uint i = 0; i < 24269; i++){                counter++;            }        }        unchecked {            _addressData[to].balance += uint64(quantity);            _addressData[to].numberMinted += uint64(quantity);            _ownerships[startTokenId].addr = to;            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);            uint256 updatedIndex = startTokenId;            uint256 end = updatedIndex + quantity;            if (safe && to.isContract()) {                do {                    emit Transfer(address(0), to, updatedIndex);                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {                        revert TransferToNonERC721ReceiverImplementer();                    }                } while (updatedIndex != end);                if (_currentIndex != startTokenId) revert();            } else {                do {                    emit Transfer(address(0), to, updatedIndex++);                } while (updatedIndex != end);            }            _currentIndex = updatedIndex;        }        _afterTokenTransfers(address(0), to, startTokenId, quantity);    }"