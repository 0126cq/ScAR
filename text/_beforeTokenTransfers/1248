"function _transfer(        address from,        address to,        uint256 tokenId    ) private {        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);        if (prevOwnership.addr != from) revert TransferFromIncorrectOwner();        bool isApprovedOrOwner = (_msgSenderERC721A() == from ||            isApprovedForAll(from, _msgSenderERC721A()) ||            getApproved(tokenId) == _msgSenderERC721A());        if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();        if (to == address(0)) revert TransferToZeroAddress();        <mask0>;        delete _tokenApprovals[tokenId];        unchecked {            _addressData[from].balance -= 1;            _addressData[to].balance += 1;            TokenOwnership storage currSlot = _ownerships[tokenId];            currSlot.addr = to;            currSlot.startTimestamp = uint64(block.timestamp);            uint256 nextTokenId = tokenId + 1;            TokenOwnership storage nextSlot = _ownerships[nextTokenId];            if (nextSlot.addr == address(0)) {                if (nextTokenId != _currentIndex) {                    nextSlot.addr = from;                    nextSlot.startTimestamp = prevOwnership.startTimestamp;                }            }        }        emit Transfer(from, to, tokenId);        _afterTokenTransfers(from, to, tokenId, 1);    }"