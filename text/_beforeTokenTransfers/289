"function _transfer(\t\taddress from,\t\taddress to,\t\tuint256 tokenId\t) private {\t\tTokenOwnership memory prevOwnership = _ownershipOf(tokenId);\t\tif (prevOwnership.addr != from) revert TransferFromIncorrectOwner();\t\tbool isApprovedOrOwner = (_msgSender() == from ||\t\tisApprovedForAll(from, _msgSender()) ||\t\tgetApproved(tokenId) == _msgSender());\t\tif (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\t\tif (to == address(0)) revert TransferToZeroAddress();\t\t<mask0>;\t\t_approve(address(0), tokenId, from);\tunchecked {\t\t_addressData[from].balance -= 1;\t\t_addressData[to].balance += 1;\t\tTokenOwnership storage currSlot = _ownerships[tokenId];\t\tcurrSlot.addr = to;\t\tcurrSlot.startTimestamp = uint64(block.timestamp);\t\tuint256 nextTokenId = tokenId + 1;\t\tTokenOwnership storage nextSlot = _ownerships[nextTokenId];\t\tif (nextSlot.addr == address(0)) {\t\t\tif (nextTokenId != _currentIndex) {\t\t\t\tnextSlot.addr = from;\t\t\t\tnextSlot.startTimestamp = prevOwnership.startTimestamp;\t\t\t}\t\t}\t}\t\temit Transfer(from, to, tokenId);\t\t_afterTokenTransfers(from, to, tokenId, 1);\t}"