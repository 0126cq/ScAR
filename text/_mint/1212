"function claim(address _address, uint256[] memory tokenIndices) internal returns (uint256) {        require(block.timestamp > emissionStart, \"Emission has not started yet\");        uint256 totalClaimQty = 0;        for (uint i = 0; i < tokenIndices.length; i++) {            require(tokenIndices[i] < IDudeSista(_address).totalSupply(), \"NFT at index has not been minted yet\");            for (uint j = i + 1; j < tokenIndices.length; j++) {                require(tokenIndices[i] != tokenIndices[j], \"Duplicate token index\");            }            uint tokenIndex = tokenIndices[i];            require(IDudeSista(_address).ownerOf(tokenIndex) == msg.sender, \"Sender is not the owner\");            uint256 claimQty = accumulated(_address, tokenIndex);            if (claimQty != 0) {                totalClaimQty = totalClaimQty.add(claimQty);                _lastClaim[tokenIndex] = block.timestamp;            }        }        require(totalClaimQty != 0, \"No accumulated love\");        <mask0>;         return totalClaimQty;    }"