"function mintPreSale(bytes32 leaf, bytes32[] calldata proof)        public        payable    {        require(_phase == 1, \"Pre-sale not open\");        (uint8 paid, uint8 free, uint16 index, address account) = _unpackleaf(            leaf        );        uint256 amount = paid + free;        require(            MerkleProof.verify(proof, _root, keccak256(abi.encodePacked(leaf))),            \"Invalid proof\"        );        require(amount > 0, \"Invalid leaf\");        require(_currentTokenId + amount <= _supply, \"Max supply reached\");        require(account == msg.sender, \"You are not the owner\");        uint256 cluster;        uint256 bitMask;        uint256 voucherBitmap;        unchecked {            cluster = index >> 8;            bitMask = 1 << (index % 256);            voucherBitmap = _vouchersTracker[cluster];            require(voucherBitmap & bitMask == 0, \"Already claimed\");            require(_price * paid <= msg.value, \"Not enough ether\");        }        _vouchersTracker[cluster] = voucherBitmap | bitMask;        if (amount == 1) {            <mask0>;        } else {            _mintAmount(amount, msg.sender);        }    }"