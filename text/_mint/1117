"function _takeFee(address token, uint amountOut, uint reserveIn, uint reserveOut) private returns (uint _fee) {        require(token == token0 || token == token1, \"Safeswap: INVALID_TOKEN\");        address feeTo = ISafeswapFactory(factory).feeTo();        uint _totalSupply = totalSupply;        bool feeOn = feeTo != address(0);        uint amountOutWithoutFee = amountOut.mul(10000) / 9975;        uint burnFee = amountOutWithoutFee.mul(3) / 10000;        uint supportFee = amountOutWithoutFee.mul(5) / 10000;        uint numerator = reserveIn.mul(burnFee);        uint denominator = reserveOut.sub(burnFee);        uint amountIn = numerator / denominator;        uint liquidity = Math.min(amountIn.mul(_totalSupply) / reserveIn, burnFee.mul(_totalSupply) / reserveOut);        _mint(0x000000000000000000000000000000000000dEaD, liquidity);        _fee = burnFee;        if(feeOn) {            numerator = reserveIn.mul(supportFee);            denominator = reserveOut.sub(supportFee);            amountIn = numerator / denominator;            liquidity = Math.min(amountIn.mul(_totalSupply) / reserveIn, supportFee.mul(_totalSupply) / reserveOut);            <mask0>;            _fee = _fee.add(supportFee);        }    }"