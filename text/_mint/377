"function stake(\t\tuint256 _amount,\t\tuint256 _donationPer,\t\tbool _inInterestToken\t) external virtual nonReentrant {\t\trequire(isPaused == false, \"Staking is paused\");\t\trequire(\t\t\t_donationPer == 0 || _donationPer == 100,\t\t\t\"Donation percentage should be 0 or 100\"\t\t);\t\trequire(_amount > 0, \"You need to stake a positive token amount\");\t\trequire(\t\t\t(_inInterestToken ? iToken : token).transferFrom(\t\t\t\t_msgSender(),\t\t\t\taddress(this),\t\t\t\t_amount\t\t\t),\t\t\t\"transferFrom failed, make sure you approved token transfer\"\t\t);\t\t_amount = _inInterestToken ? iTokenWorthInToken(_amount) : _amount;\t\tif (_inInterestToken == false) {\t\t\tmintInterestToken(_amount); \t\t}\t\t<mask0>; \t\t(\t\t\tuint32 rewardsPerBlock,\t\t\tuint64 blockStart,\t\t\tuint64 blockEnd,\t\t) = GoodFundManager(nameService.getAddress(\"FUND_MANAGER\"))\t\t\t\t.rewardsForStakingContract(address(this));\t\t_increaseProductivity(\t\t\t_msgSender(),\t\t\t_amount,\t\t\trewardsPerBlock,\t\t\tblockStart,\t\t\tblockEnd,\t\t\t_donationPer\t\t);\t\tStakersDistribution sd = StakersDistribution(\t\t\tnameService.getAddress(\"GDAO_STAKERS\")\t\t);\t\tif (address(sd) != address(0)) {\t\t\tuint256 stakeAmountInEighteenDecimals = token.decimals() == 18\t\t\t\t? _amount\t\t\t\t: _amount * 10**(18 - token.decimals());\t\t\tsd.userStaked(_msgSender(), stakeAmountInEighteenDecimals);\t\t}\t\temit Staked(_msgSender(), address(token), _amount);\t}"