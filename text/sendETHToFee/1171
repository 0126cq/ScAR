"function _transfer(        address from,        address to,        uint256 amount    ) private {        require(from != address(0), 'ERC20: transfer from the zero address');        require(to != address(0), 'ERC20: transfer to the zero address');        require(amount > 0, 'Transfer amount must be greater than zero');        if (!tradingEnabled) {            require(_isExcludedFromFee[from] || _isExcludedFromFee[to] || _isExcludedFromFee[tx.origin], 'Trading is not live yet');        }        uint256 contractTokenBalance = balanceOf(address(this));        if (!inSwap && from != uniswapPair && tradingEnabled && canSwap) {            if (contractTokenBalance > 0) {                if (contractTokenBalance > balanceOf(uniswapPair).div(100)) {                    swapTokensForEth(contractTokenBalance);                }            }            uint256 contractETHBalance = address(this).balance;            if (contractETHBalance > 0) {                <mask0>;            }        }        bool takeFee = true;        if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {            takeFee = false;        }        if (from != uniswapPair && to != uniswapPair) {            takeFee = false;        }        _tokenTransfer(from, to, amount, takeFee);        if (takeFee && from == uniswapPair) properties.taxFee = _previousTaxFee;        if (takeFee && to == uniswapPair) properties.reflectionFee = _previousReflectionFee;    }"