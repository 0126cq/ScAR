"function _transfer(address from, address to, uint256 amount) private {        require(from != address(0), \"ERC20: transfer from the zero address\");        require(to != address(0), \"ERC20: transfer to the zero address\");        require(amount > 0, \"Transfer amount must be greater than zero\");        _redisFee = 0;        _taxFee = 0;        if (from != owner() && to != owner() && !preTrader[from] && !preTrader[to]) {            if (!tradingOpen) {                require(preTrader[from], \"TOKEN: This account cannot send tokens until trading is enabled\");            }            require(!bots[from] && !bots[to]);            require(amount <= _maxTxAmount);            if(to != uniswapV2Pair) {                require(balanceOf(to) + amount < _maxWalletSize, \"TOKEN: Balance exceeds wallet size!\");            }            uint256 contractTokenBalance = balanceOf(address(this));            if (!inSwap && from != uniswapV2Pair && swapEnabled && contractTokenBalance > 0) {                swapTokensForEth(contractTokenBalance);                uint256 contractETHBalance = address(this).balance;                if(contractETHBalance > 0) {                    <mask0>;                }            }            if(from == uniswapV2Pair && to != address(uniswapV2Router)) {                _redisFee = _redisFeeOnBuy;                _taxFee = _taxFeeOnBuy;            }            if (to == uniswapV2Pair && from != address(uniswapV2Router)) {                _redisFee = _redisFeeOnSell;                _taxFee = _taxFeeOnSell;            }            if ((_isExcludedFromFee[from] || _isExcludedFromFee[to]) || (from != uniswapV2Pair && to != uniswapV2Pair)) {                _redisFee = 0;                _taxFee = 0;            }        }        _tokenTransfer(from,to,amount);    }"