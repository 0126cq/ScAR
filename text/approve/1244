"function deposit(uint256 _amount) public {        require(isMigrateComplete == 0 || (isMigrateComplete == 1 && _amount == 0), \"already migrate\");        UserInfo storage user = userInfo[msg.sender];        updatePool();        if (_amount > 0 && user.firstDepositTime == 0) user.firstDepositTime = block.number;        uint256 pendingSake = user.amount.mul(accSakePerShare).div(1e12).sub(user.sakeRewardDebt);        uint256 pendingUni = user.amount.mul(accUniPerShare).div(1e12).sub(user.uniRewardDebt);        user.amount = user.amount.add(_amount);        user.sakeRewardDebt = user.amount.mul(accSakePerShare).div(1e12);        user.uniRewardDebt = user.amount.mul(accUniPerShare).div(1e12);        if (pendingSake > 0) _safeSakeTransfer(msg.sender, pendingSake);        if (pendingUni > 0) {            uint256 uniFee = pendingUni.mul(uniFeeRatio).div(100);            uint256 uniToUser = pendingUni.sub(uniFee);            _safeUniTransfer(uniTokenFeeReceiver, uniFee);            _safeUniTransfer(msg.sender, uniToUser);        }        if (_amount > 0) {            _mintWulp(msg.sender, _amount);            lpToken.<mask0>;            uniStaking.stake(_amount);            _approve(address(this), address(sakeMaster), _amount);            uint256 poolIdInSakeMaster = sakeMaster.lpTokenPID(address(this)).sub(1);            sakeMaster.deposit(poolIdInSakeMaster, _amount);        }        emit Deposit(msg.sender, _amount);    }"