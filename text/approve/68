"function borrowAndSellFyTokens(        FyTokenInterface fyToken,        uint256 borrowAmount,        uint256 underlyingAmount    ) public payable {        Erc20Interface underlying = fyToken.underlying();        fyToken.borrow(borrowAmount);        uint256 allowance = fyToken.allowance(address(this), EXCHANGE_PROXY_ADDRESS);        if (allowance < borrowAmount) {            fyToken.<mask0>;        }        TokenInterface tokenIn = TokenInterface(address(fyToken));        TokenInterface tokenOut = TokenInterface(address(underlying));        uint256 totalAmountOut = underlyingAmount;        uint256 maxTotalAmountIn = borrowAmount;        uint256 nPools = 1;        uint256 totalAmountIn =            ExchangeProxyInterface(EXCHANGE_PROXY_ADDRESS).smartSwapExactOut(                tokenIn,                tokenOut,                totalAmountOut,                maxTotalAmountIn,                nPools            );        MathError mathErr;        uint256 fyTokenDelta;        (mathErr, fyTokenDelta) = subUInt(borrowAmount, totalAmountIn);        require(mathErr == MathError.NO_ERROR, \"ERR_BORROW_AND_SELL_FYTOKENS_MATH_ERROR\");        if (fyTokenDelta > 0) {            fyToken.repayBorrow(fyTokenDelta);        }        underlying.safeTransfer(msg.sender, underlyingAmount);        emit BorrowAndSellFyTokens(msg.sender, borrowAmount, fyTokenDelta, underlyingAmount);    }"