"function finalize(bytes32 _proposal, uint256 _votes, uint256 _minOut, uint8 _method) public onlyTeam {    require(proposal[_proposal].status == 2, \"!2\");     if(_votes == 0) {      proposal[_proposal].status = 4;     } else {      Bids memory currentBid = proposal[_proposal].bids[proposal[_proposal].winningBid];      uint256 paidTotal = currentBid.maxTotal;      uint256 paidPer = paidTotal/_votes;      if(paidPer > currentBid.maxPerVote) {        paidPer = currentBid.maxPerVote;        paidTotal = paidPer*_votes;      }      bidder[_proposal][currentBid.owner].balance -= paidTotal;       if(_minOut == 0) {        CRV.approve(stash, paidTotal);        Stash(stash).lockCRV(paidTotal);      } else {        CRV.<mask0>;        swapper.SwapStake(paidTotal, _minOut, _method);      }      proposal[_proposal].status = 3;     }  }"