"function receiveApproval(        address _from,        uint256 _tokenId,        address,        bytes memory _extraData    ) public {         require(msg.sender == address(tbtcDepositToken), \"Only token contract can call receiveApproval\");        tbtcDepositToken.transferFrom(_from, address(this), _tokenId);        tbtcDepositToken.<mask0>;        bytes4 functionSignature;        assembly {            functionSignature := and(mload(add(_extraData, 0x20)), not(0xff))        }        require(            functionSignature == vendingMachine.unqualifiedDepositToTbtc.selector,            \"Bad _extraData signature. Call must be to unqualifiedDepositToTbtc.\"        );        (bool success, bytes memory returnData) = address(vendingMachine).call(_extraData);        string memory revertMessage;        assembly {            revertMessage := add(returnData, 0x44)        }        require(success, revertMessage);        tbtcToken.transfer(_from, tbtcToken.balanceOf(address(this)));        feeRebateToken.transferFrom(address(this), _from, uint256(_tokenId));    }"