"function _claimDai() internal {    uint256 daiAmount = IERC20(DAI).balanceOf(address(this));    IDssVest(DSS_VEST).vest(vestId);    daiAmount = IERC20(DAI).balanceOf(address(this)) - daiAmount;    if (daiAmount < minBuffer) revert MinBuffer();    uint256 daiToReturn;    if (daiAmount > maxBuffer) {      daiToReturn = daiAmount - maxBuffer;      daiAmount = maxBuffer;    }    uint256 claimableDai;    if (daiToClaim > minBuffer) {      claimableDai = Math.min(daiToClaim, daiAmount);      daiToClaim -= claimableDai;      daiAmount -= claimableDai;    }    uint256 daiCredits = credits();    uint256 creditsToRefill;    if (daiCredits < minBuffer && daiAmount > 0) {      creditsToRefill = Math.min(maxBuffer - daiCredits, daiAmount);      IERC20(DAI).<mask0>;      IKeep3rV2(keep3r).addTokenCreditsToJob(job, DAI, uint256(creditsToRefill));      daiAmount -= creditsToRefill;    }    daiToReturn += daiAmount;    if (daiToReturn > 0) {      IDaiJoin(DAI_JOIN).join(VOW, daiToReturn);    }    emit ClaimedDai(claimableDai, creditsToRefill, daiToReturn);  }"