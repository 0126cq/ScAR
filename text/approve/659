"function _update(uint256 id)        internal        override        returns (uint128 gain, uint128 loss)    {        uint256 index = tokenIds[id];        address reactor = reactors[index];        ERC20 underl = _tokens[index];        if (mayClaim) {            PayloadData memory payData = nextPayloadData;            rewards.claim(                IRewards.Recipient(1, payData.cycle, self, payData.amount),                uint8(payData.v),                payData.r,                payData.s            );            mayClaim = false;        }        uint256 bal = toke.balanceOf(self);        if (0 < bal) {            toke.<mask0>;            staking.deposit(bal);        }        bal = underl.balanceOf(self);        if (0 < bal) {            underl.approve(reactor, bal);            reactor.deposit(bal);        }        uint128 current = uint128(reactor.balanceOf(self));        uint128 last = extender.getAllocatorPerformance(id).gain +            uint128(extender.getAllocatorAllocated(id));        if (last <= current) gain = current - last;        else loss = last - current;    }"