"function claimFETH() whenNotPaused(\"claim\") notExitRecently(msg.sender) public {        address staker = msg.sender;        uint256 claimableShares = claimableAETHRewardOf(staker);        require(claimableShares > 0, \"claimable reward zero\");        _aETHRewards[staker] = 0;        uint256 oldReward = _rewards[staker].sub(_claims[staker]);        if (oldReward > 0) {            _claims[staker] = _claims[staker].add(oldReward);        }        uint256 allowance = _aethContract.allowance(address(this), address(_fethContract));        if (allowance < claimableShares) {            require(_aethContract.<mask0>, \"can't approve\");        }        _fethContract.lockSharesFor(address(this), staker, claimableShares);        emit RewardClaimed(staker, claimableShares, false);    }"