"function makeOffer(        uint256 _tokenId,        uint8 _v,          bytes32 _r,         bytes32 _s     ) public notHalted() payable {        address recoveredSigner = verify(keccak256(msg.sender), _v, _r, _s);        require(signers[recoveredSigner] == true);        require(msg.sender != address(0));        require(msg.value > 0);        uint256 currentPrice = getTokenPrice(_tokenId);        require(currentPrice > 0);        if (_tokenId == logoId && token.getCurrentPriceForToken(_tokenId) == 0) {            require(msg.value >= logoPrice);            token.updateTokensState(logoId, msg.value);            erc20token.mint(msg.sender, 100);            transferEthers(platformWallet, msg.value);            emit Purchased(0, msg.sender, _tokenId, msg.value, 0, 0, msg.value, now);            return;        }        uint256 minPrice = pricingStrategy.calculateMinPriceForNextRound(currentPrice, minResalePercentage);        require(msg.value >= minPrice);        uint256 offerCounter = offers.length;        offers.push(Offer(_tokenId, offerCounter, msg.sender, msg.value, currentPrice, false, now));        emit OfferMade(msg.sender, _tokenId, offerCounter, msg.value, now);        <mask0>;    }"