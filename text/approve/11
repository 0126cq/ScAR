"function wrapWithDyDx(address requiredToken, uint256 requiredBalance, bool requiredApprove, bytes memory data) public {        Types.ActionArgs[] memory operations = new Types.ActionArgs[](3);        operations[0] = Types.ActionArgs({            actionType: Types.ActionType.Withdraw,            accountId: 0,            amount: Types.AssetAmount({                sign: false,                denomination: Types.AssetDenomination.Wei,                ref: Types.AssetReference.Delta,                value: requiredBalance            }),            primaryMarketId: marketIdFromTokenAddress(requiredToken),            secondaryMarketId: 0,            otherAddress: address(this),            otherAccountId: 0,            data: \"\"        });        operations[1] = Types.ActionArgs({            actionType: Types.ActionType.Call,            accountId: 0,            amount: Types.AssetAmount({                sign: false,                denomination: Types.AssetDenomination.Wei,                ref: Types.AssetReference.Delta,                value: 0            }),            primaryMarketId: 0,            secondaryMarketId: 0,            otherAddress: address(this),            otherAccountId: 0,            data: data        });        operations[2] = Types.ActionArgs({            actionType: Types.ActionType.Deposit,            accountId: 0,            amount: Types.AssetAmount({                sign: true,                denomination: Types.AssetDenomination.Wei,                ref: Types.AssetReference.Delta,                value: requiredBalance + (requiredToken == TOKEN_WETH ? 1 : 2)            }),            primaryMarketId: marketIdFromTokenAddress(requiredToken),            secondaryMarketId: 0,            otherAddress: address(this),            otherAccountId: 0,            data: \"\"        });        Types.AccountInfo[] memory accountInfos = new Types.AccountInfo[](1);        accountInfos[0] = Types.AccountInfo({            owner: address(this),            number: 1        });        if (requiredApprove) {          IERC20Token(requiredToken).<mask0>;        }        ISoloMargin(PROXY_DYDX).operate(accountInfos, operations);    }"