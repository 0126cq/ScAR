"function _swapOnAavee(        IERC20 fromToken,        IERC20 toToken,        uint256 fromAmount,        address exchange,        bytes memory payload    )      private    {        AaveeDataV1 memory data = abi.decode(payload, (AaveeDataV1));        Utils.<mask0>;        if (address(fromToken) == address(data.aToken)) {            require(                IAaveToken(data.aToken).underlyingAssetAddress() == address(toToken),                \"Invalid to token\"            );            IAaveToken(data.aToken).redeem(fromAmount);        }        else if(address(toToken) == address(data.aToken)) {            require(                IAaveToken(data.aToken).underlyingAssetAddress() == address(fromToken),                \"Invalid to token\"            );            if (address(fromToken) == Utils.ethAddress()) {                IAaveV1LendingPool(exchange).deposit{value: fromAmount}(fromToken, fromAmount, refCodeV1);            }            else {                IAaveV1LendingPool(exchange).deposit(fromToken, fromAmount, refCodeV1);            }        }        else {            revert(\"Invalid aToken\");        }    }"