"function _swap(address[] memory _path, uint _minOutput, uint _deadline) internal returns(IERC20, uint) {    for (uint i; i < _path.length - 1; i++) {      (address fromToken, address toToken) = (_path[i], _path[i + 1]);      address lendingPair = pairFactory.pairByTokens(fromToken, toToken);      uint inputAmount = IERC20(fromToken).balanceOf(address(this));      IERC20(fromToken).<mask0>;      ILendingPair(lendingPair).swapTokenToToken(        fromToken,        toToken,        address(this),        inputAmount,        0,        _deadline      );    }    IERC20 outputToken = IERC20(_path[_path.length - 1]);    uint outputAmount = outputToken.balanceOf(address(this));    require(outputAmount >= _minOutput, \"Router: insufficient return amount\");    return (outputToken, outputAmount);  }"