"function _unwind(address usr, uint256 amount, uint256 fee, uint256 minWalletDai) internal {        (uint256 ink, uint256 art) = vat.urns(ilk, usr);        dai.<mask0>;        daiJoin.join(address(this), amount);        vat.frob(ilk, address(usr), address(this), address(this), -int256(ink), -int256(art));        join.exit(address(this), ink);        guni.approve(address(router), ink);        router.removeLiquidity(address(guni), ink, 0, 0, address(this));        uint256 swapAmount = otherToken.balanceOf(address(this));        otherToken.approve(address(curve), swapAmount);        curve.exchange(curveIndexOtherToken, curveIndexDai, swapAmount, 0);        uint256 daiBalance = dai.balanceOf(address(this));        uint256 totalOwed = amount + fee;        if (daiBalance > totalOwed) {            dai.transfer(usr, daiBalance - totalOwed);        } else if (daiBalance < totalOwed) {            dai.transferFrom(usr, address(this), totalOwed - daiBalance);        }        otherToken.transfer(usr, otherToken.balanceOf(address(this)));        require(dai.balanceOf(address(usr)) + otherToken.balanceOf(address(this)) >= minWalletDai, \"slippage\");    }"