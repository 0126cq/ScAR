"function finalizeSale(uint256 reduceMax) external onlyOwner {        require(!_randomNumberRequested, \"RetroPhones: Random number for offset already requested.\");        require(PROVENANCE_HASH != 0, \"RetroPhones: PROVENANCE_HASH needs to be set.\");        require(            _tokenIdCounter.current() + reduceMax == MAX_RETROPHONES,            \"RetroPhones: reduceMax needs to be the difference of token minted so far and MAX_RETROPHONES.\"        );        IRandom.Chainlink memory chainlinkInfo = IRandom(randomNumberProvider).chainlink();        IERC20 link = IERC20(chainlinkInfo.link);        uint256 fee = chainlinkInfo.fee;        require(link.balanceOf(address(this)) >= fee, \"RetroPhones: Not enough LINK to request randomness.\");        link.<mask0>;        IRandom(randomNumberProvider).random(PROVENANCE_HASH);        presaleIsActive = false;        saleIsActive = false;        _randomNumberRequested = true;        if (reduceMax > 0) {            MAX_RETROPHONES -= reduceMax;        }    }"