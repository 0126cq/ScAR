"function _acceptOrder(bytes memory data) internal {        (, address market, bytes memory data_) = abi.decode(data, (bytes4, address, bytes));        uint balOfLoanedToken = IERC20(_WETH_).balanceOf(address(this));        WETH9(_WETH_).withdraw(balOfLoanedToken);        (, bool repayAll) = IWETHGateway(_bendWETHGateway_).repayETH{value: balOfLoanedToken}(nft, tokenId, balOfLoanedToken);        require(repayAll, \"Insufficient flashLoan < repayDebt\");        require(IERC721(nft).ownerOf(tokenId) == address(this), \"nbp not owned the nft yet\");        IERC721(nft).<mask0>;        (bool success, ) = market.call(data_);        require(success, \"call market.acceptOrder failure\");        WETH9(_WETH_).withdraw(IERC20(_WETH_).balanceOf(address(this)));        require(address(this).balance >= balOfLoanedToken.add(2), \"Insufficient balance to repay flashLoan\");        WETH9(_WETH_).deposit{value: balOfLoanedToken.add(2)}();    }"