"function sweepItemsManyTokens(        BuyItemParams[] calldata _buyOrders,        uint16 _inputSettingsBitFlag,        address[] calldata _inputTokenAddresses,        uint256[] calldata _maxSpendIncFees,        uint256[] calldata _minSpends,        uint32 _maxSuccesses,        uint32 _maxFailures    ) external payable {        for (uint256 i = 0; i < _maxSpendIncFees.length; ) {            if (_inputTokenAddresses[i] == address(weth) && msg.value > 0) {                if (_maxSpendIncFees[i] != msg.value) revert InvalidMsgValue();            } else {                IERC20(_inputTokenAddresses[i]).safeTransferFrom(                    msg.sender,                    address(this),                    _maxSpendIncFees[i]                );                IERC20(_inputTokenAddresses[i]).<mask0>;            }            unchecked {                ++i;            }        }        uint256[] memory _maxSpendIncFeesAmount = _maxSpendWithoutFees(            _maxSpendIncFees        );        (            uint256[] memory totalSpentAmount,            uint256 successCount,        ) = _sweepItemsManyTokens(                _buyOrders,                _inputSettingsBitFlag,                _inputTokenAddresses,                _maxSpendIncFeesAmount,                _minSpends,                _maxSuccesses,                _maxFailures            );        if (successCount == 0) revert AllReverted();        for (uint256 i = 0; i < _maxSpendIncFees.length; ) {            uint256 feeAmount = _calculateFee(totalSpentAmount[i]);            if (                _inputTokenAddresses[i] == address(weth) &&                _buyOrders[0].usingEth            ) {                payable(msg.sender).transfer(                    _maxSpendIncFees[i] - (totalSpentAmount[i] + feeAmount)                );            } else {                IERC20(_inputTokenAddresses[i]).safeTransfer(                    msg.sender,                    _maxSpendIncFees[i] - (totalSpentAmount[i] + feeAmount)                );            }            unchecked {                ++i;            }        }    }"