"function intializeContract() external onlyOwner {        require(!contractInitialized, \"Contract already initialized.\");        _name = \"Eiichiro Oda Inu \";        _symbol = \"ODA\";        startingSupply = 100_000_000_000_000;        if (startingSupply < 10000000000) {            _decimals = 18;            _decimalsMul = _decimals;        } else {            _decimals = 9;            _decimalsMul = _decimals;        }        _tTotal = startingSupply * (10**_decimalsMul);        _rTotal = (MAX - (MAX % _tTotal));        dexRouter = IUniswapV2Router02(_routerAddress);        lpPair = IUniswapV2Factory(dexRouter.factory()).createPair(dexRouter.WETH(), address(this));        lpPairs[lpPair] = true;        _allowances[address(this)][address(dexRouter)] = type(uint256).max;        _maxTxAmount = (_tTotal * 125) / 100000;        maxTxAmountUI = (startingSupply * 125) / 100000;        _maxWalletSize = (_tTotal * 5) / 1000;        maxWalletSizeUI = (startingSupply * 5) / 1000;        swapThreshold = (_tTotal * 5) / 10000;        swapAmount = (_tTotal * 5) / 1000;        <mask0>;        contractInitialized = true;        _rOwned[owner()] = _rTotal;        emit Transfer(ZERO, owner(), _tTotal);    }"