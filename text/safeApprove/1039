"function executeOperation(        address[] calldata,        uint256[] calldata amounts,        uint256[] calldata premiums,        address initiator,        bytes calldata params    ) public returns (bool) {        (            bytes memory exchangeDataBytes,            address market,            uint256 gasCost,            uint256 rateMode,            bool isRepay,            address proxy        )        = abi.decode(params, (bytes,address,uint256,uint256,bool,address));        require(initiator == proxy, \"initiator isn't proxy\");        ExchangeData memory exData = unpackExchangeData(exchangeDataBytes);        exData.user = DSAuth(proxy).owner();            exData.dfsFeeDivider = MANUAL_SERVICE_FEE;        if (BotRegistry(BOT_REGISTRY_ADDRESS).botList(tx.origin)) {            exData.dfsFeeDivider = AUTOMATIC_SERVICE_FEE;        }        uint totalValueToReturn = exData.srcAmount + premiums[0];        if (isRepay) {            repay(exData, market, gasCost, proxy, rateMode, totalValueToReturn);            address token = exData.srcAddr;            if (token == ETH_ADDR || token == WETH_ADDRESS) {                TokenInterface(WETH_ADDRESS).deposit.value(totalValueToReturn)();                token = WETH_ADDRESS;            }            ERC20(token).<mask0>;        } else {            boost(exData, market, gasCost, proxy);        }        tx.origin.transfer(address(this).balance);        return true;    }"