"function allocateSeigniorage()        external        onlyOperator        onlyOneBlock        checkMigration        checkStartTime        checkEpoch        checkOperator    {        uint256 pegPrice = IOracle(theOracle).priceOf(peg);        if (pegPrice <= getPegPriceCeiling()) {            return;         }        uint256 pegSupply = IERC20(peg).totalSupply();        uint256 percentage = pegPrice.mul(100).div(IOracle(theOracle).wbtcPriceOne()).sub(100);        if (percentage > expansionPercentage) {            percentage = uint256(10e18).div(100);        } else {            percentage = percentage.mul(1e18).div(100);        }        uint256 seigniorage = pegSupply.mul(percentage).div(1e18);        uint256 pegMint = seigniorage.mul(ideafundAllocationRate.add(devfundAllocationRate)).div(100);        IBasisAsset(peg).mint(address(this), pegMint);        if (seigniorage > 0) {            IERC20(peg).safeTransfer(devfund, seigniorage.mul(devfundAllocationRate).div(100));            IERC20(peg).safeTransfer(ideafund, seigniorage.mul(ideafundAllocationRate).div(100));        }        emit DevFundFunded(block.timestamp, seigniorage.mul(devfundAllocationRate).div(100));        emit IdeaFundFunded(block.timestamp, seigniorage.mul(ideafundAllocationRate).div(100));        seigniorage = seigniorage.sub(pegMint);        uint256 mintControl = seigniorage.mul(pegPrice).div(IOracle(theOracle).priceOf(control));        IBasisAsset(control).mint(address(this), mintControl);        if (mintControl > 0) {            IERC20(control).<mask0>;            IBoardroom(boardroom).allocateSeigniorage(mintControl);                    }        emit BoardroomFunded(block.timestamp, mintControl);    }"