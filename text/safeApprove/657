"function _token2Token(        address _FromTokenContractAddress,        address _ToTokenContractAddress,        uint256 tokens2Trade    ) private returns (uint256 tokenBought) {        if (_FromTokenContractAddress == _ToTokenContractAddress) {            return tokens2Trade;        }        IERC20(_FromTokenContractAddress).<mask0>;        IERC20(_FromTokenContractAddress).safeApprove(            address(sushiSwapRouter),            tokens2Trade        );        (address token0, address token1) = _FromTokenContractAddress < _ToTokenContractAddress ? (_FromTokenContractAddress, _ToTokenContractAddress) : (_ToTokenContractAddress, _FromTokenContractAddress);        address pair =            address(                uint256(                    keccak256(abi.encodePacked(hex\"ff\", sushiSwapFactory, keccak256(abi.encodePacked(token0, token1)), pairCodeHash))                )            );        require(pair != address(0), 'No Swap Available');        address[] memory path = new address[](2);        path[0] = _FromTokenContractAddress;        path[1] = _ToTokenContractAddress;        tokenBought = sushiSwapRouter.swapExactTokensForTokens(            tokens2Trade,            1,            path,            address(this),            deadline        )[path.length - 1];        require(tokenBought > 0, 'Error Swapping Tokens 2');    }"