"function _provideLiquidity(        ProviderInfo memory _provider0,        ProviderInfo memory _provider1,        OfferInfo memory _info    ) internal returns (uint256[] memory) {        _provider0.token.safeApprove(address(uniswapRouter), 0);        _provider1.token.safeApprove(address(uniswapRouter), 0);        _provider0.token.<mask0>;        _provider1.token.safeApprove(address(uniswapRouter), _provider1.amount);        uint256 amountMin0 = _provider0.amount.sub(_provider0.amount.mul(_info.slippageTolerancePpm) / 1000);        uint256 amountMin1 = _provider1.amount.sub(_provider1.amount.mul(_info.slippageTolerancePpm) / 1000);        uint256 spentAmount0;        uint256 spentAmount1;        uint256 liquidity;        {            (spentAmount0, spentAmount1, liquidity) = uniswapRouter.addLiquidity(                address(_provider0.token),                address(_provider1.token),                _provider0.amount,                _provider1.amount,                amountMin0,                amountMin1,                address(this),                _info.deadline            );        }        if (spentAmount0 < _provider0.amount) {            _provider0.token.safeTransfer(_provider0.user, _provider0.amount - spentAmount0);        }        if (spentAmount1 < _provider1.amount) {            _provider1.token.safeTransfer(_provider1.user, _provider1.amount - spentAmount1);        }        uint256[] memory liq = new uint256[](3);        liq[0] = liquidity;        liq[1] = spentAmount0;        liq[2] = spentAmount1;        return (liq);    }"