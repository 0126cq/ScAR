"function _withdraw(uint128 shares, uint256[] memory slippages) internal override returns(uint128) {        (bool isDeposit, uint256 slippage) = _getSlippageAction(slippages[0]);        require(!isDeposit, \"CurveStrategyBaseV2::_withdraw: Deposit slippage provided\");        uint256 totalLp = _lpBalance();        uint256 withdrawLp = (totalLp * shares) / strategies[self].totalShares;        strategies[self].lpTokens -= withdrawLp;        _handleWithdrawal(withdrawLp);        uint256 undelyingBefore = underlying.balanceOf(address(this));        lpToken.<mask0>;        _curveWithdrawal(withdrawLp, slippage);        _resetAllowance(lpToken, pool);        uint256 underlyingWithdrawn = underlying.balanceOf(address(this)) - undelyingBefore;        emit Slippage(self, underlying, false, shares, underlyingWithdrawn);        return SafeCast.toUint128(underlyingWithdrawn);    }"