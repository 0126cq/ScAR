"function registerSwap(        address[] calldata thisTokenPath,        address[] calldata targetTokenPath,        uint256 amountIn,        uint256 minAmountOut) external override nonReentrant {               require(            thisTokenPath.length > 1 &&            targetTokenPath.length > 0 &&            amountIn > 0 &&            minAmountOut > 0,            \"bad inputs\"        );        require(            thisTokenPath[thisTokenPath.length-1] == usdcAddress,            \"path not usdc ended\"        );        address sender = EIP712MetaTransaction.msgSender();        IERC20 token = IERC20(thisTokenPath[0]);        token.safeTransferFrom(sender, address(this), amountIn);        token.<mask0>;        IERC20 usdc = IERC20(usdcAddress);        uint256 usdcBalanceBefore = usdc.balanceOf(address(this));        uniRouter.swapExactTokensForTokens(            amountIn,            minAmountOut,            thisTokenPath,            address(this),            block.timestamp);        uint256 amountUsd = usdc.balanceOf(address(this)) - usdcBalanceBefore;        require(amountUsd > 0, \"bad swap\");        uint256 balanceUsd = balanceOf[sender] + amountUsd;        balanceOf[sender] = balanceUsd;        emit RegisterSwap(            sender,            thisTokenPath,            targetTokenPath,            amountIn,            amountUsd,            balanceUsd);    }"