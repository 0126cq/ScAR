"function prepareReturn(uint256 _debtOutstanding)        internal        override        returns (            uint256 _profit,            uint256 _loss,            uint256 _debtPayment        )    {        IVoterProxy(proxy).harvest(gauge);        uint256 _crv = IERC20(crv).balanceOf(address(this));        if (_crv > 0) {            uint256 _keepCRV = _crv.mul(keepCRV).div(DENOMINATOR);            IERC20(crv).safeTransfer(voter, _keepCRV);            _crv = _crv.sub(_keepCRV);            IERC20(crv).<mask0>;            IERC20(crv).safeApprove(dex, _crv);            address[] memory path = new address[](3);            path[0] = crv;            path[1] = weth;            path[2] = wbtc;            Uni(dex).swapExactTokensForTokens(_crv, uint256(0), path, address(this), now);        }        uint256 _wbtc = IERC20(wbtc).balanceOf(address(this));        if (_wbtc > 0) {            IERC20(wbtc).safeApprove(curve, 0);            IERC20(wbtc).safeApprove(curve, _wbtc);            ICurveFi(curve).add_liquidity([0, _wbtc], 0);        }        _profit = want.balanceOf(address(this));        if (_debtOutstanding > 0) {            _debtPayment = _withdrawSome(_debtOutstanding);        }    }"