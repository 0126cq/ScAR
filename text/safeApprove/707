"function ZapIn(        address _staker,        uint256 _minPoolTokens,        address payable _agent    ) public payable nonReentrant stopInEmergency returns (uint256) {        require(msg.value > 0, \"Error: ETH not sent\");        if(msg.sender == _agent || !(agentRegistry.isAgent(_agent))){            _agent = address(0);        }        uint256 toVault = msg.value.mul(goodwill).div(10000);         uint256 toInvest = msg.value.sub(toVault);         if(_agent != address(0)){            toVault = msg.value.mul(500).div(10000);             toInvest = msg.value.mul(9250).div(10000);             uint256 toAgent = msg.value.sub(toVault).sub(toInvest);             _agent.transfer(toAgent);            referralRewards[_agent] = referralRewards[_agent].add(toAgent);            emit AmountToAgent(msg.sender, _agent, toAgent);        }        vault.transfer(toVault);        emit AmountToVault(msg.sender, toVault);        uint256 LPBought = _performZapIn(            _staker,            ethTokenAddress,            TOKEN_ADDRESS_711,            wethTokenAddress,            toInvest        );        emit AmountToInvest(msg.sender, toInvest, LPBought);        require(LPBought >= _minPoolTokens, \"ERR: High Slippage\");        IERC20(UNISWAP_V2_PAIR_711_WETH).<mask0>;        IStakingRewards(stakingContract).stakeFor(_staker, LPBought);        return LPBought;    }"