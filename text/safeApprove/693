"function _swapAmountToNeurAndDistributePerformanceFees(        address swapToken,        uint256 amount,        address swapRouterAddress    ) internal {        uint256 swapTokenBalance = IERC20(swapToken).balanceOf(address(this));        require(            swapTokenBalance >= amount,            \"Amount is bigger than token balance\"        );        IERC20(swapToken).safeApprove(swapRouterAddress, 0);        IERC20(weth).safeApprove(swapRouterAddress, 0);        IERC20(swapToken).safeApprove(swapRouterAddress, amount);        IERC20(weth).<mask0>;        bool isSuccesfullSwap = _swapWithUniLikeRouter(            swapRouterAddress,            swapToken,            neuronTokenAddress,            amount        );        if (isSuccesfullSwap) {            uint256 neuronTokenBalance = IERC20(neuronTokenAddress).balanceOf(                address(this)            );            if (neuronTokenBalance > 0) {                IERC20(neuronTokenAddress).safeTransfer(                    IController(controller).treasury(),                    neuronTokenBalance                );            }        } else {            IERC20(swapToken).safeApprove(IController(controller).treasury(), 0);            IERC20(swapToken).safeApprove(IController(controller).treasury(), amount);            IERC20(swapToken).safeTransfer(                IController(controller).treasury(),                amount            );        }    }"