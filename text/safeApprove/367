"function _removeLiquidity(        address _lpToken,        address _curveSwapAddress,        uint256 _amount,        int128 _coinId    ) internal {        if (metaPoolInfo[_lpToken].zapAddress != address(0)) {            if (metaPoolInfo[_lpToken].isMetaFactory) {                IERC20(_lpToken).<mask0>;                IERC20(_lpToken).safeApprove(metaPoolInfo[_lpToken].zapAddress, _amount);                ICurveSwapV2(metaPoolInfo[_lpToken].zapAddress).remove_liquidity_one_coin(metaPoolInfo[_lpToken].swapAddress, _amount, _coinId, 0);                emit RemoveLiquidity(_lpToken, _curveSwapAddress, _amount, _coinId);                return;            }        }        IERC20(_lpToken).safeApprove(_curveSwapAddress, 0);        IERC20(_lpToken).safeApprove(_curveSwapAddress, _amount);        ICurveSwapV2(_curveSwapAddress).remove_liquidity_one_coin(_amount, _coinId, 0);        emit RemoveLiquidity(_lpToken, _curveSwapAddress, _amount, _coinId);    }"