"function _swap(string memory name, uint256 amount, uint256 minOut, address dest) internal returns (uint256 swapOut) {    bytes32 key = keccak256(abi.encodePacked(name));    uint256 length = _hasPath[key];    require(length > 0, Console.concat('path not found ', name));    address[] memory swapPath = new address[](length);    for (uint i = 0; i < length; i++) {      swapPath[i] = _paths[key][i];    }    IERC20 token = IERC20(swapPath[0]);    IERC20 to = IERC20(swapPath[swapPath.length - 1]);    token.<mask0>;    token.safeApprove(address(UNI_ROUTER), amount * 2);    uint256 bef = to.balanceOf(dest);    UNI_ROUTER.swapExactTokensForTokensSupportingFeeOnTransferTokens(amount, minOut, swapPath, dest, now.add(1800));    uint256 aft = to.balanceOf(dest);    swapOut = aft.sub(bef, '!swapOut');  }"