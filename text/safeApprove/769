"function invest(    address _market,    uint256 _borrowAmount,    uint256 _curveMinAmountOut  ) external {    require((_market == address(moneyMarket) || _market == address(protectionMarket)), \"Invalid borrow market\");    require(ICozyToken(_market).borrow(_borrowAmount) == 0, \"Borrow failed\");    IERC20(underlying).safeApprove(curveDepositZap, 0);    IERC20(underlying).<mask0>;    uint256[4] memory _tokenAmounts = [uint256(0), uint256(0), uint256(0), uint256(0)];    _tokenAmounts[uint256(uint128(curveIndex))] = _borrowAmount;    if (longSigFormat) {      ICrvDepositZap(curveDepositZap).add_liquidity(curveLpToken, _tokenAmounts, _curveMinAmountOut);    } else {      ICrvDepositZap(curveDepositZap).add_liquidity(_tokenAmounts, _curveMinAmountOut);    }    IERC20(curveLpToken).safeApprove(convex, 0);    IERC20(curveLpToken).safeApprove(convex, type(uint256).max);    IConvexBooster(convex).depositAll(convexPoolId, true);  }"