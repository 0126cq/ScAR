"function _liquidateRewards(        address rewardToken,        address underlying,        address _dEXRouter,        address _baseCurrency,        uint256 minUnderlyingExpected    ) internal {        uint256 rewardAmount = IERC20(rewardToken).balanceOf(address(this));        if (rewardAmount != 0) {            IUniswapV2Router02 dEXRouter = IUniswapV2Router02(_dEXRouter);            address[] memory path =                _getPath(rewardToken, underlying, _baseCurrency);            uint256 underlyingAmountOut =                dEXRouter.getAmountsOut(rewardAmount, path)[path.length - 1];            if (underlyingAmountOut != 0) {                IERC20(rewardToken).<mask0>;                uint256 underlyingBalanceBefore =                    IERC20(underlying).balanceOf(address(this));                dEXRouter.swapExactTokensForTokens(                    rewardAmount,                    minUnderlyingExpected,                    path,                    address(this),                    now                );                uint256 underlyingBalanceAfter =                    IERC20(underlying).balanceOf(address(this));                require(                    underlyingBalanceAfter.sub(underlyingBalanceBefore) >=                        minUnderlyingExpected,                    \"Not liquidated properly\"                );            }        }    }"