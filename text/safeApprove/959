"function openAndLeverage(        uint _collAmount,        uint _daiAmountAndFee,        address _joinAddr,        address _proxy,        ExchangeData memory _exchangeData    ) public {        uint dfsFee = getFee(_exchangeData.srcAmount, DSProxy(payable(_proxy)).owner());        _exchangeData.srcAmount = (_exchangeData.srcAmount - dfsFee);        (, uint256 collSwaped) = _sell(_exchangeData);        bytes32 ilk = Join(_joinAddr).ilk();        if (_joinAddr == ETH_JOIN_ADDRESS) {            MCDCreateProxyActions(CREATE_PROXY_ACTIONS).openLockETHAndDraw{value: address(this).balance}(                MANAGER_ADDRESS,                JUG_ADDRESS,                ETH_JOIN_ADDRESS,                DAI_JOIN_ADDRESS,                ilk,                _daiAmountAndFee,                _proxy            );        } else {            ERC20(address(Join(_joinAddr).gem())).safeApprove(CREATE_PROXY_ACTIONS, 0);            ERC20(address(Join(_joinAddr).gem())).<mask0>;            MCDCreateProxyActions(CREATE_PROXY_ACTIONS).openLockGemAndDraw(                MANAGER_ADDRESS,                JUG_ADDRESS,                _joinAddr,                DAI_JOIN_ADDRESS,                ilk,                (_collAmount + collSwaped),                _daiAmountAndFee,                true,                _proxy            );        }    }"