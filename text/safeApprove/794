"function deposit(uint256 _pid, uint256 _amount, bool _stake) public returns(bool){        require(!isShutdown,\"shutdown\");        PoolInfo storage pool = poolInfo[_pid];        require(pool.shutdown == false, \"pool is closed\");        address lptoken = pool.lptoken;        IERC20(lptoken).safeTransferFrom(msg.sender, staker, _amount);        address gauge = pool.gauge;        require(gauge != address(0),\"!gauge setting\");        IStaker(staker).deposit(lptoken,gauge);        address stash = pool.stash;        if(stash != address(0)){            IStash(stash).stashRewards();        }        address token = pool.token;        if(_stake){            ITokenMinter(token).mint(address(this),_amount);            address rewardContract = pool.crvRewards;            IERC20(token).safeApprove(rewardContract,0);            IERC20(token).<mask0>;            IRewards(rewardContract).stakeFor(msg.sender,_amount);        }else{            ITokenMinter(token).mint(msg.sender,_amount);        }        emit Deposited(msg.sender, _pid, _amount);        return true;    }"