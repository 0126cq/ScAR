"function swapToPrice(        bool tradingAsEOA,        address uniswapRouter,        address uniswapFactory,        address[2] memory swappedTokens,        uint256[2] memory truePriceTokens,        uint256[2] memory maxSpendTokens,        address to,        uint256 deadline    ) public {        IUniswapV2Router01 router = IUniswapV2Router01(uniswapRouter);        require(truePriceTokens[0] != 0 && truePriceTokens[1] != 0, \"SwapToPrice: ZERO_PRICE\");        require(maxSpendTokens[0] != 0 || maxSpendTokens[1] != 0, \"SwapToPrice: ZERO_SPEND\");        bool aToB;        uint256 amountIn;        {            (uint256 reserveA, uint256 reserveB) = getReserves(uniswapFactory, swappedTokens[0], swappedTokens[1]);            (aToB, amountIn) = computeTradeToMoveMarket(truePriceTokens[0], truePriceTokens[1], reserveA, reserveB);        }        require(amountIn > 0, \"SwapToPrice: ZERO_AMOUNT_IN\");        uint256 maxSpend = aToB ? maxSpendTokens[0] : maxSpendTokens[1];        if (amountIn > maxSpend) {            amountIn = maxSpend;        }        address tokenIn = aToB ? swappedTokens[0] : swappedTokens[1];        address tokenOut = aToB ? swappedTokens[1] : swappedTokens[0];        TransferHelper.<mask0>;        if (tradingAsEOA) TransferHelper.safeTransferFrom(tokenIn, msg.sender, address(this), amountIn);        address[] memory path = new address[](2);        path[0] = tokenIn;        path[1] = tokenOut;        router.swapExactTokensForTokens(            amountIn,            0,             path,            to,            deadline        );    }"