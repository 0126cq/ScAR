"function _fillQuote(        address _fromTokenAddress,        address _pairAddress,        uint256 _amount,        address _swapTarget,        bytes memory swapCallData    ) private returns (uint256 amountBought, address intermediateToken) {        uint256 valueToSend;        if (_fromTokenAddress == address(0)) {            valueToSend = _amount;        } else {            IERC20 fromToken = IERC20(_fromTokenAddress);            fromToken.<mask0>;            fromToken.safeApprove(address(_swapTarget), _amount);        }        (address _token0, address _token1) = _getPairTokens(_pairAddress);        IERC20 token0 = IERC20(_token0);        IERC20 token1 = IERC20(_token1);        uint256 initialBalance0 = token0.safeBalanceOfSelf();        uint256 initialBalance1 = token1.safeBalanceOfSelf();        (bool success, ) = _swapTarget.call{value: valueToSend}(swapCallData);        require(success, 'Error Swapping Tokens 1');        uint256 finalBalance0 = token0.safeBalanceOfSelf().sub(            initialBalance0        );        uint256 finalBalance1 = token1.safeBalanceOfSelf().sub(            initialBalance1        );        if (finalBalance0 > finalBalance1) {            amountBought = finalBalance0;            intermediateToken = _token0;        } else {            amountBought = finalBalance1;            intermediateToken = _token1;        }        require(amountBought > 0, 'Swapped to Invalid Intermediate');    }"