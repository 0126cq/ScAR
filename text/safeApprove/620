"function exitMarket(address cTkn) external isMaster {        address tkn;        if (cTkn != cEth) {            tkn = CTokenInterface(cTkn).underlying();            IERC20(tkn).<mask0>;        } else {            tkn = ethAddr;        }        require(isTknAllowed[tkn], \"tkn-not-allowed\");        ComptrollerInterface(comptrollerAddr).exitMarket(cTkn);        delete isTknAllowed[tkn];        bool isFound = false;        uint _length = tokensAllowed.length;        uint _id;        for (uint i = 0; i < _length; i++) {            if (tkn == tokensAllowed[i]) {                isFound = true;                _id = i;                break;            }        }        if (isFound) {            address _last = tokensAllowed[_length - 1];            tokensAllowed[_length - 1] = tokensAllowed[_id];            tokensAllowed[_id] = _last;            tokensAllowed.pop();        }        emit LogExitMarket(tkn, cTkn);    }"