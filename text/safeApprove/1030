"function buy(address _srcAddr, address _destAddr, uint _destAmount) external override payable returns(uint) {        ERC20 srcToken = ERC20(_srcAddr);        ERC20 destToken = ERC20(_destAddr);        address walletAddr = feeRecipient.getFeeAddr();        uint srcAmount = 0;        if (_srcAddr != KYBER_ETH_ADDRESS) {            srcAmount = srcToken.balanceOf(address(this));        } else {            srcAmount = msg.value;        }        KyberNetworkProxyInterface kyberNetworkProxy = KyberNetworkProxyInterface(KYBER_INTERFACE);        if (_srcAddr != KYBER_ETH_ADDRESS) {            srcToken.<mask0>;        }        uint destAmount = kyberNetworkProxy.trade{value: msg.value}(            srcToken,            srcAmount,            destToken,            msg.sender,            _destAmount,            0,            walletAddr        );        require(destAmount == _destAmount, \"Wrong dest amount\");        uint srcAmountAfter = 0;        if (_srcAddr != KYBER_ETH_ADDRESS) {            srcAmountAfter = srcToken.balanceOf(address(this));        } else {            srcAmountAfter = address(this).balance;        }        sendLeftOver(_srcAddr);        return (srcAmount - srcAmountAfter);    }"