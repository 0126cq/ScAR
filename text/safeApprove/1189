"function deposit(        LedgerStruct.Ledger storage _self,        bytes32 _channelId,        address _receiver,        uint _transferFromAmount    )        external    {        uint msgValue = msg.value;        _addDeposit(_self, _channelId, _receiver, _transferFromAmount.add(msgValue));        LedgerStruct.Channel storage c = _self.channelMap[_channelId];        if (c.token.tokenType == PbEntity.TokenType.ETH) {            if (msgValue > 0) {                _self.celerWallet.depositETH.value(msgValue)(_channelId);            }            if (_transferFromAmount > 0) {                _self.ethPool.transferToCelerWallet(                    msg.sender,                    address(_self.celerWallet),                    _channelId,                    _transferFromAmount                );            }        } else if (c.token.tokenType == PbEntity.TokenType.ERC20) {            require(msgValue == 0, \"msg.value is not 0\");            IERC20 erc20Token = IERC20(c.token.tokenAddress);            erc20Token.safeTransferFrom(msg.sender, address(this), _transferFromAmount);            erc20Token.<mask0>;            _self.celerWallet.depositERC20(_channelId, address(erc20Token), _transferFromAmount);        } else {            assert(false);        }    }"