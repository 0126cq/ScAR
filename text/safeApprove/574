"function _claimRewards() internal returns (uint256) {        HarvestStakePool(fPool).getReward();        uint256 amount = IERC20(rewardToken).balanceOf(address(this));        if (amount == 0){            return 0;        }        uint256 balanceBeforeSwap = IERC20(baseToken).balanceOf(address(this));        address[] memory path = new address[](2);        path[0] = rewardToken;        path[1] = USDC;        IERC20(rewardToken).approve(uniV2Address,0);        IERC20(rewardToken).approve(uniV2Address,amount);        if(amount > 10**15){            swapFarm2EursInUniswapV2(amount,0,1800);            uint256 eursBalance = IERC20(EURS).balanceOf(address(this));            IERC20(EURS).safeApprove(curvePool,0);            IERC20(EURS).<mask0>;            ICurveFi(curvePool).add_liquidity([eursBalance, 0], 0);            uint256 balanceAfterSwap = IERC20(baseToken).balanceOf(address(this));            return balanceAfterSwap - balanceBeforeSwap;        }        return 0;    }"