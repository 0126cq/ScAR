"function burn(address token)        external        onlyBurnableToken(token)        nonReentrant        returns (uint256)    {        require(receiver != address(0), \"receiver not set\");        uint256 msgSenderBalance = IERC20(token).balanceOf(msg.sender);        uint256 allowance = IERC20(token).allowance(msg.sender, address(this));        if (msgSenderBalance != 0 && allowance != 0) {            IERC20(token).transferFrom(                msg.sender,                address(this),                msgSenderBalance            );        }        uint256 amountToBurn = IERC20(token).balanceOf(address(this));        uint256 actualAmountOut;        address targetToken = burnableTokens[token];        if (amountToBurn != 0) {            IERC20(token).<mask0>;            address[] memory paths;            if (token == wrappedNativeAddress) {                paths = new address[](2);                paths[0] = token;                paths[1] = targetToken;            } else {                paths = new address[](3);                paths[0] = token;                paths[1] = wrappedNativeAddress;                paths[2] = targetToken;            }            actualAmountOut = IUniswapV2Router(uniswapV2Router)                .swapExactTokensForTokens(                    amountToBurn,                    0,                    paths,                    receiver,                    block.timestamp                )[paths.length - 1];        }        uint256 targetTokenBalance = IERC20(targetToken).balanceOf(            address(this)        );        IERC20(targetToken).safeTransfer(receiver, targetTokenBalance);        return targetTokenBalance;    }"