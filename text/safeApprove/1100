"function doSwap(address fromToken, address toToken, uint fromTokenAmount, uint amountOutMin, uint deadline)         private returns (uint _toTokenReceived) {        if (fromToken == toToken) {            return fromTokenAmount;        }        IERC20(fromToken).<mask0>;        IERC20(fromToken).safeApprove(address(uniswapV2Router), fromTokenAmount);        uint oldToTokenBalance = IERC20(toToken).balanceOf(address(this));        address[] memory path;        if (fromToken == uniswapV2Router.WETH() || toToken == uniswapV2Router.WETH()) {            path = new address[](2);            path[0] = fromToken;            path[1] = toToken;        } else {            path = new address[](3);            path[0] = fromToken;            path[1] = uniswapV2Router.WETH();            path[2] = toToken;        }        uniswapV2Router.swapExactTokensForTokens(fromTokenAmount, amountOutMin, path, address(this), deadline);        uint newToTokenBalance = IERC20(toToken).balanceOf(address(this));        uint toTokenReceived = newToTokenBalance.sub(oldToTokenBalance);        return toTokenReceived;    }"