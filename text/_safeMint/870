"function publicMint(    string calldata salt,    bytes calldata token,    uint16 amount  ) external nonReentrant {    require(_state == State.PublicMint, \"not open yet\");    require(amount <= 5, \"you cant mint more than 5\");    require(msg.sender == tx.origin, \"contracts not allowed\");    require(totalSupply() + amount <= 12455, \"cant go over max supply\");    require(!Address.isContract(msg.sender), \"contracts not allowed\");    require(_verify(_hash(salt, msg.sender), token), \"invalid token.\");    require(!usedToken[token], \"The token has been used.\");    require(      mintedInBlock[msg.sender][block.number] == false,      \"you already minted in this block\"    );    require(      astoToken.allowance(msg.sender, address(this)) >= amount * MINT_PRICE,      \"please first allow this contract to pay for your nfts in ASTO tokens\"    );    astoToken.safeTransferFrom(msg.sender, address(this), amount * MINT_PRICE);    usedToken[token] = true;    mintedInBlock[msg.sender][block.number] = true;    <mask0>;    emit Minted(msg.sender, amount);  }"