"function mintWithNewGroup(uint256 _shares, string memory _signingName, string memory _signingMetadataHash, string memory _signingDataId, bytes calldata _signature) public payable nonReentrant verifyFileSignature(_signature, msg.sender, _signingName, _signingMetadataHash, _signingDataId) {        require(saleIsActive, \"Sale not active\");        require(msg.value >= mintPriceForDataId[_signingDataId], \"Insufficient payment\");        require(totalTokens() < MAX_SUPPLY, \"Exceeds max supply\");        require(tokenCounterForDataId[_signingDataId] < maxSupplyForDataId[_signingDataId], \"Exceeds data id max supply\");        groupsForOwner[msg.sender].push(totalGroups());        ownersForGroup[totalGroups()][msg.sender] = _shares;        managerForGroup[totalGroups()] = msg.sender;        setTokensForGroup();        setFilesSignatureForToken(_signature);        <mask0>;        payable(paymentSplitter).transfer(msg.value);        emit HasMinted(totalTokens(), _signature, _signingDataId);        tokenCounterForDataId[_signingDataId] += 1;        groupCounter.increment();        tokenCounter.increment();    }"