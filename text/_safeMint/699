"function mint(uint256[] memory tokenId) ensureAvailability public payable     {        require(blnSale == true, \"Not Sales Period.\");        require(tokenId.length <= batchMintMaxAmount, \"Maximum of tokens to buy at once exceeded.\");        require(msg.value == cost * tokenId.length, \"Price must be equal to listing price.\");        if(blnWhitelisted == true){            bool isWhiteListedOne =isAddressWhitelistedOne(msg.sender);            bool isWhiteListedTwo =isAddressWhitelistedTwo(msg.sender);            require(isWhiteListedOne || isWhiteListedTwo, \"Not on the whitelist! Cannot buy during PreSales Period.\");            if(isWhiteListedOne){                require(balanceOf(msg.sender) + tokenId.length <= whiteOneMax, \"Max mint per address exceeded!\");            }else if(isWhiteListedTwo){                require(balanceOf(msg.sender) + tokenId.length <= whiteTwoMax, \"Max mint per address exceeded!\");            }            for(uint256 i=0; i <= tokenId.length-1; i++){                if (tokenId[i] >= startIndex && tokenId[i] <= endIndex){                    _safeMint(msg.sender, tokenId[i]);                    usedTokenId.push(tokenId[i]);                    super.nextToken();                }            }        }else{            for(uint256 i=0; i <= tokenId.length-1; i++){                if (tokenId[i] >= startIndex && tokenId[i] <= endIndex){                    <mask0>;                    usedTokenId.push(tokenId[i]);                    super.nextToken();                }            }        }    }"