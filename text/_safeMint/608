"function mintWithGroupId(uint256 _groupId, bool _isDerivative, string memory _signingName, string memory _signingMetadataHash, string memory _signingDataId, bytes calldata _signature) public payable nonReentrant verifyFileSignature(_signature, msg.sender, _signingName, _signingMetadataHash, _signingDataId) {        require(groupSaleIsActive, \"Group sale not active\");        require(msg.value >= mintPriceForDataId[_signingDataId], \"Insufficient payment\");        require(activeGroupId == _groupId, \"Group sale not active for group\");        require(_groupId < totalGroups(), \"Group does not exist\");        require(totalTokens() < MAX_SUPPLY, \"Exceeds max supply\");        require(tokenCounterForDataId[_signingDataId] < maxSupplyForDataId[_signingDataId], \"Exceeds data id max supply\");        setTokensForGroupId(_groupId);        setFilesSignatureForToken(_signature);        if (_isDerivative) {            setDerivativeTokensForGroup(_groupId);        }        <mask0>;        payable(paymentSplitter).transfer(msg.value);        emit HasMinted(totalTokens(), _signature, _signingDataId);        tokenCounterForDataId[_signingDataId] += 1;        tokenCounter.increment();    }"