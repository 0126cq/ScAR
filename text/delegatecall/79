"function handleOpenLong(bytes memory arguments) internal {        bool notOverflow;        uint256 _temp;        uint256 pay;        bool success;        bytes memory data;        (            address leverageToken,            address targetToken,            uint256 amountLeverageToken,            uint256 amountFlashLoan,            uint256 unitAmt,            uint256 rateMode        ) = abi.decode(                arguments,                (address, address, uint256, uint256, uint256, uint256)            );        (notOverflow, pay) = SafeMath.tryAdd(            amountLeverageToken,            amountFlashLoan        );        require(notOverflow == true, \"CHFRY: overflow 1\");        uint256 flashLoanFee = IERC3156FlashLender(lender).flashFee(            leverageToken,            amountFlashLoan        );        (notOverflow, _temp) = SafeMath.trySub(pay, flashLoanFee);        require(notOverflow == true, \"CHFRY: overflow 2\");        (success, data) = ProtocolCenterInterface(            OperationCenterInterface(opCenterAddress).protocolCenterAddress()        ).getProtocol(\"UniswapV2\").delegatecall(                abi.encodeWithSignature(                    \"sellToken(address,address,uint256,uint256)\",                    targetToken,                    leverageToken,                    _temp,                    unitAmt                )            );        require(success == true, \"CHFRY: call UniswapV2 sellToken fail\");        uint256 buyAmount = abi.decode(data, (uint256));        (success, data) = ProtocolCenterInterface(            OperationCenterInterface(opCenterAddress).protocolCenterAddress()        ).getProtocol(\"AAVEV2\").delegatecall(                abi.encodeWithSignature(                    \"depositToken(address,uint256)\",                    targetToken,                    buyAmount                )            );        require(success == true, \"CHFRY: call AAVEV2 depositToken fail\");        (success, data) = ProtocolCenterInterface(            OperationCenterInterface(opCenterAddress).protocolCenterAddress()        ).getProtocol(\"AAVEV2\").<mask0>;        require(success == true, \"CHFRY: call AAVEV2 borrowToken fail\");        EventCenterLeveragePositionInterface(            OperationCenterInterface(opCenterAddress).eventCenterAddress()        ).emitOpenLongLeverageEvent(                leverageToken,                targetToken,                pay,                buyAmount,                amountLeverageToken,                amountFlashLoan,                unitAmt,                rateMode            );    }"