"function withdrawNFT(uint256 _pid, uint256 _amount) public {\t    PoolInfo storage pool = poolInfo[_pid];\t    UserInfo storage user = userInfo[_pid][msg.sender];\t\tUserInfoNFTSet storage userset = userInfoNFTSet[_pid][msg.sender];\t\trequire(pool.isNFT, \"NFT Pool\");\t    require(user.amount >= _amount, \"withdraw: not good\");\t    updatePool(_pid);\t    uint256 pending = user.amount.mul(pool.accSushiPerShare).div(1e12).sub(user.rewardDebt);\t    if(pending > 0) {\t        safeSushiTransfer(msg.sender, pending);\t    }\t    if(_amount > 0) {\t        user.amount = user.amount.sub(_amount);\t        pool.amount = pool.amount.sub(_amount);\t\t\tfor(uint256 i = 0; i < _amount; i++) {\t\t\t    uint256 tokenId = userset.holderTokens.at(0);\t\t\t    IERC721Enumerable(address(pool.lpToken)).safeTransferFrom(address(this), address(msg.sender), tokenId);\t\t\t    userset.holderTokens.<mask0>;\t\t\t}\t    }\t    user.rewardDebt = user.amount.mul(pool.accSushiPerShare).div(1e12);\t    emit Withdraw(msg.sender, _pid, _amount);\t}"