"function withdraw2(uint amountToWithdraw) public returns (bool){        require(holders.contains(msg.sender), \"Not a staker\");        require(amountToWithdraw <= getMaxAmountWithdrawable(msg.sender), \"Maximum reached\");        require(alreadyProgUnstaked[msg.sender] > 0 || ended, \"Use withdraw first\");        alreadyProgUnstaked[msg.sender] = alreadyProgUnstaked[msg.sender].add(amountToWithdraw);        uint fee = amountToWithdraw.mul(unstakingFeeRate).div(1e4);        uint amountAfterFee = amountToWithdraw.sub(fee);        updateAccount(msg.sender, false, true);        require(Token(tokenDepositAddress).transfer(owner, fee), \"Could not transfer withdraw fee.\");        require(Token(tokenDepositAddress).transfer(msg.sender, amountAfterFee), \"Could not transfer tokens.\");        depositedTokens[msg.sender] = depositedTokens[msg.sender].sub(amountToWithdraw);        availablePoolSize = availablePoolSize.add(amountToWithdraw);        totalDeposited = totalDeposited.sub(amountToWithdraw);        if (holders.contains(msg.sender) && depositedTokens[msg.sender] == 0 && getPendingRewards(msg.sender) == 0) {            holders.<mask0>;            firstTime[msg.sender] = 0;        }        return true;    }"