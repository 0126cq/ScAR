"function _beforeTokenTransfer(        address from,        address to,        uint256 tokenId    )        internal        virtual        override(ERC721Upgradeable, ERC721EnumerableUpgradeable)    {        uint96 feeRate = getFeeRate(tokenId);        FeeEntry memory newOwnerRate = _lowestFeeRatesByOwner[to];        if (!newOwnerRate.isValue) {            _lowestFeeRatesByOwner[to] = _feeValue(feeRate, true);        }        if (newOwnerRate.isValue && feeRate < newOwnerRate.value) {            _lowestFeeRatesByOwner[to].value = feeRate;        }        _feeRatesSetByOwner[to].add(feeRate);        unchecked {            _feeRatesCountByOwner[to][feeRate]++;            _feeRatesCountByOwner[from][feeRate]--;        }        if (_feeRatesCountByOwner[from][feeRate] == 0) {            _feeRatesSetByOwner[from].<mask0>;            uint256 feesCount = _feeRatesSetByOwner[from].length();            if (feesCount > 0) {                uint96 lowestFee = type(uint96).max;                for (uint256 i = 0; i < feesCount; ) {                    unchecked {                        lowestFee = uint96(                            MathUpgradeable.min(                                _feeRatesSetByOwner[from].at(i),                                lowestFee                            )                        );                        i++;                    }                }                _lowestFeeRatesByOwner[from].value = lowestFee;            } else {                _lowestFeeRatesByOwner[from] = _feeValue(0, false);            }        }        super._beforeTokenTransfer(from, to, tokenId);    }"