"function _beforeTokenTransfer(        address operator,        address from,        address to,        uint256[] memory ids,        uint256[] memory amounts,        bytes memory data    ) internal virtual override {        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);        if (from != to) {            ERC1155EnumerableStorage.Layout storage l = ERC1155EnumerableStorage                .layout();            mapping(uint256 => EnumerableSet.AddressSet)                storage tokenAccounts = l.accountsByToken;            EnumerableSet.UintSet storage fromTokens = l.tokensByAccount[from];            EnumerableSet.UintSet storage toTokens = l.tokensByAccount[to];            for (uint256 i; i < ids.length; ) {                uint256 amount = amounts[i];                if (amount > 0) {                    uint256 id = ids[i];                    if (from == address(0)) {                        l.totalSupply[id] += amount;                    } else if (_balanceOf(from, id) == amount) {                        tokenAccounts[id].<mask0>;                        fromTokens.remove(id);                    }                    if (to == address(0)) {                        l.totalSupply[id] -= amount;                    } else if (_balanceOf(to, id) == 0) {                        tokenAccounts[id].add(to);                        toTokens.add(id);                    }                }                unchecked {                    i++;                }            }        }    }"