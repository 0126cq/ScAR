"function _updateSupplierInDS(address _poolTokenAddress, address _user) internal {        uint256 onPool = supplyBalanceInOf[_poolTokenAddress][_user].onPool;        uint256 inP2P = supplyBalanceInOf[_poolTokenAddress][_user].inP2P;        uint256 formerValueOnPool = suppliersOnPool[_poolTokenAddress].getValueOf(_user);        uint256 formerValueInP2P = suppliersInP2P[_poolTokenAddress].getValueOf(_user);        if (onPool <= dustThreshold) {            supplyBalanceInOf[_poolTokenAddress][_user].onPool = 0;            onPool = 0;        }        if (formerValueOnPool != onPool) {            if (formerValueOnPool > 0) suppliersOnPool[_poolTokenAddress].<mask0>;            if (onPool > 0)                suppliersOnPool[_poolTokenAddress].insertSorted(_user, onPool, maxSortedUsers);        }        if (inP2P <= dustThreshold) {            supplyBalanceInOf[_poolTokenAddress][_user].inP2P = 0;            inP2P = 0;        }        if (formerValueInP2P != inP2P) {            if (formerValueInP2P > 0) suppliersInP2P[_poolTokenAddress].remove(_user);            if (inP2P > 0)                suppliersInP2P[_poolTokenAddress].insertSorted(_user, inP2P, maxSortedUsers);        }        if (address(rewardsManager) != address(0))            rewardsManager.accrueUserSupplyUnclaimedRewards(                _user,                _poolTokenAddress,                formerValueOnPool            );    }"