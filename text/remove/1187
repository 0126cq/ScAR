"function _claimFisherFromRiver(uint256 tokenId, bool unstake) internal returns (uint256 owed) {    Stake memory stake = riverside[tokenId];    require(stake.owner == _msgSender(), \"SWIPER, NO SWIPING\");    require(!(unstake && block.timestamp - stake.value < MINIMUM_TO_EXIT), \"GONNA BE COLD WITHOUT TWO DAY'S WOOL\");    owed = calcRewardFisherman(tokenId);    if (unstake) {      getRandomChainlink();      if (random(tokenId) & 1 == 1) {                                                   _payBearTax(owed);        owed = 0;        }      delete riverside[tokenId];      totalFishermanStaked -= 1;      _deposits[_msgSender()].<mask0>;      roar.safeTransferFrom(address(this), _msgSender(), tokenId, \"\");             } else {      _payBearTax(owed * SALMON_CLAIM_TAX_PERCENTAGE / 100);                          riverside[tokenId] = Stake({        owner: _msgSender(),        tokenId: uint16(tokenId),        value: uint80(block.timestamp)      });       owed = owed * (100 - SALMON_CLAIM_TAX_PERCENTAGE) / 100;                      }    emit FishermanClaimed(tokenId, owed, unstake);  }"