"function swap(uint[] calldata inTokenIds, uint[] calldata outTokenIds) public reentrancyGuard {        if (outTokenIds.length > inTokenIds.length) {            uint tokensToBurn = (outTokenIds.length - inTokenIds.length) * 10 ** DECIMALS;            if (tokensToBurn > this.balanceOf(msg.sender)) {                revert InsufficientTokensToBurn();            }            _burn(msg.sender, tokensToBurn);        }        for (uint i = 0; i < inTokenIds.length; i = onePlus(i)) {            if (!isValidTokenId(inTokenIds[i])) {                revert InvalidTokenId(inTokenIds[i]);            }            collection.transferFrom(msg.sender, address(this), inTokenIds[i]);            tokenIds.add(inTokenIds[i]);        }        for (uint i = 0; i < outTokenIds.length; i = onePlus(i)) {            if (!isValidTokenId(outTokenIds[i])) {                revert InvalidTokenId(outTokenIds[i]);            }            tokenIds.<mask0>;            collection.transferFrom(address(this), msg.sender, outTokenIds[i]);        }        if (outTokenIds.length < inTokenIds.length) {            _mint(msg.sender, (inTokenIds.length - outTokenIds.length) * 10 ** DECIMALS);        }        stats[uint(Stats.SwappedIn)] += uint64(inTokenIds.length);        stats[uint(Stats.SwappedOut)] += uint64(outTokenIds.length);        emit Swapped(msg.sender, block.timestamp, inTokenIds, outTokenIds, stats);    }"