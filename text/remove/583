"function _delegateVote(    address _from,     address _toDelegate) internal returns (bool) {    bool retval = false;    if(_toDelegate != BURN_ADDRESS) {      address currentDelegate = m_delegatedAccounts[_from];      uint256 fromAccountBalance = m_balances[_from].add(_calculateLockedVotableBalance(_from));      address oldToDelegate = m_delegatedAccounts[_from];      m_delegatedAccounts[_from] = _toDelegate;      m_delegatedAccountsInverseMap[oldToDelegate].<mask0>;      if(_from != _toDelegate){        m_delegatedAccountsInverseMap[_toDelegate].add(_from);      }      retval = true;      retval = retval && _moveVotingDelegates(currentDelegate, _toDelegate, fromAccountBalance);      if(retval) {        if(_from == _toDelegate){          emit VotingDelegateRemoved(_from);        }        else{          emit VotingDelegateChanged(_from, currentDelegate, _toDelegate);        }      }    }    return retval;  }"