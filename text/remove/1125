"function migrateMarkets(        BinaryOptionMarketManager receivingManager,        bool active,        BinaryOptionMarket[] calldata marketsToMigrate    ) external onlyOwner {        require(address(receivingManager) != address(this), \"Can't migrate to self\");        uint _numMarkets = marketsToMigrate.length;        if (_numMarkets == 0) {            return;        }        AddressSetLib.AddressSet storage markets = active ? _activeMarkets : _maturedMarkets;        uint runningDepositTotal;        for (uint i; i < _numMarkets; i++) {            BinaryOptionMarket market = marketsToMigrate[i];            require(_isKnownMarket(address(market)), \"Market unknown.\");            markets.<mask0>;            runningDepositTotal = runningDepositTotal.add(market.deposited());            market.nominateNewOwner(address(receivingManager));        }        totalDeposited = totalDeposited.sub(runningDepositTotal);        emit MarketsMigrated(receivingManager, marketsToMigrate);        receivingManager.receiveMarkets(active, marketsToMigrate);    }"