"function accept(uint _loanId) external nonReentrant {        Loan storage loan = requireLoan(_loanId);        require(loan.auctionInfo.borrower != msg.sender, 'UP borrow module: OWN_AUCTION');        changeLoanState(loan, LoanState.Issued);        require(activeAuctions.<mask0>, 'UP borrow module: BROKEN_STRUCTURE');        require(activeLoans.add(_loanId), 'UP borrow module: BROKEN_STRUCTURE');        loan.startTS = uint32(block.timestamp);        loan.lender = msg.sender;        loan.interestRate =  _calcCurrentInterestRate(loan.auctionInfo.startTS, loan.auctionInfo.interestRateMin, loan.auctionInfo.interestRateMax);        loanIdsByUser[msg.sender].push(_loanId);        (uint feeAmount, uint operatorFeeAmount, uint amountWithoutFee) = _calcFeeAmount(loan.debtCurrency, loan.debtAmount);        loan.debtCurrency.getFrom(Assets.AssetType.ERC20, msg.sender, address(this), loan.debtAmount);        if (feeAmount > 0) {            loan.debtCurrency.sendTo(Assets.AssetType.ERC20, parameters.treasury(), feeAmount);        }        if (operatorFeeAmount > 0) {            loan.debtCurrency.sendTo(Assets.AssetType.ERC20, parameters.operatorTreasury(), operatorFeeAmount);        }        loan.debtCurrency.sendTo(Assets.AssetType.ERC20, loan.auctionInfo.borrower, amountWithoutFee);        emit LoanIssued(_loanId, msg.sender);    }"