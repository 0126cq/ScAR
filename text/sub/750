"function getRandomNonZeroElementFromPlaceToLast(        Tree storage self,        uint place,        Random.RandomGenerator memory randomGenerator    )        external        view        returns (uint)    {        require(_correctPlace(self, place), \"Incorrect place\");        uint vertex = 1;        uint leftBound = 0;        uint rightBound = getSize(self);        uint currentFrom = place.sub(1);        uint currentSum = sumFromPlaceToLast(self, place);        if (currentSum == 0) {            return 0;        }        while(leftBound.add(1) < rightBound) {            if (_middle(leftBound, rightBound) <= currentFrom) {                vertex = _right(vertex);                leftBound = _middle(leftBound, rightBound);            } else {                uint rightSum = self.tree[_right(vertex).<mask0>];                uint leftSum = currentSum.sub(rightSum);                if (Random.random(randomGenerator, currentSum) < leftSum) {                    vertex = _left(vertex);                    rightBound = _middle(leftBound, rightBound);                    currentSum = leftSum;                } else {                    vertex = _right(vertex);                    leftBound = _middle(leftBound, rightBound);                    currentFrom = leftBound;                    currentSum = rightSum;                }            }        }        return leftBound.add(1);    }"