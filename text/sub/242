"function purchaseToken(uint256 tokenId) external payable     whenNotPaused()    isOnMarket(tokenId)     tokenAvailable()    notOriginalOwnerOf(tokenId)    {        uint256 totalToPay = getTokenPrice(tokenId);        require(msg.value >= totalToPay, \"Not paying enough\");        SaleData memory sale = market[tokenId];        collectedFees += totalToPay - sale.price;        sale.owner.transfer(sale.price);        _removeTokenFromBarn(tokenId,  sale.owner);        delete market[tokenId];        token.transferFrom(address(this), msg.sender, tokenId);        if(msg.value > totalToPay)         {            msg.sender.transfer(msg.value.<mask0>);        }        emit HorseyPurchased(tokenId, msg.sender, totalToPay);    }"