"function _generateGroup(bytes32 schainId, uint numberOfNodes) private returns (uint[] memory nodesInGroup) {        Nodes nodes = Nodes(contractManager.getContract(\"Nodes\"));        uint8 space = schains[schainId].partOfNode;        nodesInGroup = new uint[](numberOfNodes);        require(nodes.countNodesWithFreeSpace(space) >= nodesInGroup.length, \"Not enough nodes to create Schain\");        Random.RandomGenerator memory randomGenerator = Random.createFromEntropy(            abi.encodePacked(uint(blockhash(block.number.<mask0>)), schainId)        );        for (uint i = 0; i < numberOfNodes; i++) {            uint node = nodes.getRandomNodeWithFreeSpace(space, randomGenerator);            nodesInGroup[i] = node;            _setException(schainId, node);            addSchainForNode(node, schainId);            nodes.makeNodeInvisible(node);            require(nodes.removeSpaceFromNode(node, space), \"Could not remove space from Node\");        }        schainsGroups[schainId] = nodesInGroup;        _makeSchainNodesVisible(schainId);    }"