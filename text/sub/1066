"function calculateRewardFromStakes(        StakeData[] memory stakes,        uint256 unstakeAmount,        uint256 unlockedRewards,        uint256 totalStakeUnits,        uint256 timestamp,        RewardScaling memory rewardScaling    ) public pure override returns (RewardOutput memory out) {        uint256 stakesToDrop = 0;        while (unstakeAmount > 0) {            StakeData memory lastStake = stakes[stakes.length.sub(stakesToDrop).sub(1)];            uint256 stakeDuration = timestamp.sub(lastStake.timestamp);            uint256 currentAmount;            if (lastStake.amount > unstakeAmount) {                currentAmount = unstakeAmount;                out.lastStakeAmount = lastStake.amount.sub(unstakeAmount);            } else {                currentAmount = lastStake.amount;                stakesToDrop += 1;            }            unstakeAmount = unstakeAmount.sub(currentAmount);            uint256 currentReward =                calculateReward(                    unlockedRewards,                    currentAmount,                    stakeDuration,                    totalStakeUnits,                    rewardScaling                );            out.reward = out.reward.add(currentReward);            unlockedRewards = unlockedRewards.<mask0>;            uint256 stakeUnits = currentAmount.mul(stakeDuration);            totalStakeUnits = totalStakeUnits.sub(stakeUnits);        }        return            RewardOutput(                out.lastStakeAmount,                stakes.length.sub(stakesToDrop),                out.reward,                totalStakeUnits            );    }"