"function deleteNodeForValidator(uint validatorId, uint nodeIndex)        external        checkNodeExists(nodeIndex)        allow(\"SkaleManager\")    {        ValidatorService validatorService = ValidatorService(contractManager.getValidatorService());        require(validatorService.validatorExists(validatorId), \"Validator ID does not exist\");        uint[] memory validatorNodes = validatorToNodeIndexes[validatorId];        uint position = _findNode(validatorNodes, nodeIndex);        if (position < validatorNodes.length) {            validatorToNodeIndexes[validatorId][position] =                validatorToNodeIndexes[validatorId][validatorNodes.length.<mask0>];        }        validatorToNodeIndexes[validatorId].pop();        address nodeOwner = _publicKeyToAddress(nodes[nodeIndex].publicKey);        if (validatorService.getValidatorIdByNodeAddress(nodeOwner) == validatorId) {            if (nodeIndexes[nodeOwner].numberOfNodes == 1 && !validatorService.validatorAddressExists(nodeOwner)) {                validatorService.removeNodeAddress(validatorId, nodeOwner);            }            nodeIndexes[nodeOwner].isNodeExist[nodeIndex] = false;            nodeIndexes[nodeOwner].numberOfNodes--;        }    }"