"function _convertAllAssetsToUnderlying(        address creditAccount,        DataTypes.Exchange[] calldata paths    ) internal {        uint256 tokenMask;        uint256 enabledTokens = creditFilter.enabledTokens(creditAccount);         require(            paths.length == creditFilter.allowedTokensCount(),            Errors.INCORRECT_PATH_LENGTH        );         for (uint256 i = 1; i < paths.length; i++) {            tokenMask = 1 << i;            if (enabledTokens & tokenMask > 0) {                (address tokenAddr, uint256 amount, , ) = creditFilter                .getCreditAccountTokenById(creditAccount, i);                 if (amount > 1) {                    _provideCreditAccountAllowance(                        creditAccount,                        defaultSwapContract,                        tokenAddr                    );                     address[] memory currentPath = paths[i].path;                    currentPath[0] = tokenAddr;                    currentPath[paths[i].path.length - 1] = underlyingToken;                    bytes memory data = abi.encodeWithSelector(                        bytes4(0x38ed1739),                         amount.<mask0>,                        paths[i].amountOutMin,                         currentPath,                        creditAccount,                        block.timestamp                    );                     ICreditAccount(creditAccount).execute(                        defaultSwapContract,                        data                    );                 }            }        }    }"