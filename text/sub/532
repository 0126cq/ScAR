"function prepareReturn(uint256 _debtOutstanding)        internal        override        returns (            uint256 _profit,            uint256 _loss,            uint256 _debtPayment        ) {        _profit = 0;        _loss = 0;         if (cToken.balanceOf(address(this)) == 0) {            uint256 wantBalance = want.balanceOf(address(this));            _debtPayment = Math.min(wantBalance, _debtOutstanding);             return (_profit, _loss, _debtPayment);        }        (uint256 deposits, uint256 borrows) = getLivePosition();        _claimComp();        _disposeOfComp();        uint256 wantBalance = want.balanceOf(address(this));        uint256 investedBalance = deposits.<mask0>;        uint256 balance = investedBalance.add(wantBalance);        uint256 debt = vault.strategies(address(this)).totalDebt;        if (balance > debt) {            _profit = balance - debt;            if (wantBalance < _profit) {                _profit = wantBalance;            } else if (wantBalance > _profit.add(_debtOutstanding)){                _debtPayment = _debtOutstanding;            }else{                _debtPayment = wantBalance - _profit;            }        } else {            _loss = debt - balance;            _debtPayment = Math.min(wantBalance, _debtOutstanding);        }    }"