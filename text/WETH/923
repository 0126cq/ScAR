"function GoLive() external onlyOwner returns (bool){        require(!live, \"ERC20: Trades already Live!\");        activeTradingBlock = block.number;        sniperPenaltyEnd = block.timestamp.add(2 days);        IUniswapV2Router02 _uniV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);        uniV2Router = _uniV2Router;        uniV3Router = 0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45;        isContractsExcluded[address(uniV2Router)] = true;        isContractsExcluded[address(uniV3Router)] = true;        isMaxWalletExcluded[address(uniV2Router)] = true;        internalApprove(address(this), address(uniV2Router), tokenSupply);        uniV2Pair = IUniswapV2Factory(_uniV2Router.factory()).createPair(address(this), _uniV2Router.<mask0>);        isContractsExcluded[address(uniV2Pair)] = true;        isMaxWalletExcluded[address(uniV2Pair)] = true;        require(address(this).balance > 0, \"ERC20: Must have ETH on contract to Go Live!\");        addLiquidity(balanceOf(address(this)), address(this).balance);        launchSetLiquidityAddress(dead);        maxWalletOn = true;        swapAndLiquifyStatus = true;        limitsOn = true;        live = true;        return true;    }"