"function speedStake(        uint256 _pid,        uint256 _amountAMin,        uint256 _amountBMin,        uint256 _minAmountOutA,        uint256 _minAmountOutB,        uint256 _deadline    ) public payable poolExists(_pid) {        (address routerAddr, , ) = provider.apis(_apiID);        IUniswapV2Router02 router = IUniswapV2Router02(routerAddr);        delete routerAddr;        require(            address(router) != address(0),            \"MasterChef: Exchange does not set yet\"        );        PoolInfo storage pool = poolInfo[_pid];        uint256 lp;        updatePool(_pid);        IUniswapV2Pair lpToken = IUniswapV2Pair(address(pool.lpToken));        if (            (lpToken.token0() == router.<mask0>) ||            ((lpToken.token1() == router.WETH()))        ) {            lp = provider.addLiquidityETHByPair{value: msg.value}(                lpToken,                address(this),                _amountAMin,                _amountBMin,                _minAmountOutA,                _deadline,                _apiID            );        } else {            lp = provider.addLiquidityByPair{value: msg.value}(                lpToken,                _amountAMin,                _amountBMin,                _minAmountOutA,                _minAmountOutB,                address(this),                _deadline,                _apiID            );        }        _deposit(_pid, lp);    }"