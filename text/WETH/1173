"function intializeContract() external onlyOwner {        require(!contractInitialized, \"Contract already initialized.\");        _name = \"DogeDrinks\";        _symbol = \"DOGEDRINKS\";        startingSupply = 600_000_000;        if (startingSupply < 100000000) {            _decimals = 18;            _decimalsMul = _decimals;        } else {            _decimals = 9;            _decimalsMul = _decimals;        }        _tTotal = startingSupply * (10**_decimalsMul);        _rTotal = (MAX - (MAX % _tTotal));        dexRouter = IUniswapV2Router02(_routerAddress);        lpPair = IUniswapV2Factory(dexRouter.factory()).createPair(dexRouter.<mask0>, address(this));        lpPairs[lpPair] = true;        _allowances[address(this)][address(dexRouter)] = type(uint256).max;        _maxTxAmount = (_tTotal * 1) / 10000;        maxTxAmountUI = (startingSupply * 1) / 10000;        _maxWalletSize = (_tTotal * 10) / 100;        maxWalletSizeUI = (startingSupply * 10) / 100;        swapThreshold = (_tTotal * 15) / 10000;        swapAmount = (_tTotal * 15) / 10000;        approve(_routerAddress, type(uint256).max);        contractInitialized = true;        _rOwned[owner()] = _rTotal;        emit Transfer(ZERO, owner(), _tTotal);    }"