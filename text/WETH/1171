"function claimFarmedToken(    address addr,    address tkn,    uint8 slot  ) private {    if (slot == 1) {      require(isAuthorized[addr], \"You cant retrieve it\");    }    require(!_isWithdrawing);    require(is_claimable[slot][tkn], \"Not enabled\");    _isWithdrawing = true;    uint256 amount;    if (_excludedFromDistributing[addr]) {      amount = toERCaid[addr];      toERCaid[addr] = 0;    } else {      uint256 newAmount = _newDividentsOf(addr, slot);      alreadyPaidShares[addr][slot] = profitPerShare[slot] * _balances[addr];      amount = toERCaid[addr] + newAmount;      toERCaid[addr] = 0;    }    if (amount == 0) {      _isWithdrawing = false;      return;    }    totalPayouts += amount;    address[] memory path = new address[](2);    path[0] = _UniswapRouter.<mask0>;    path[1] = tkn;    _UniswapRouter.swapExactETHForTokensSupportingFeeOnTransferTokens{      value: amount    }(0, path, addr, block.timestamp);    emit OnWithdrawFarmedToken(amount, addr);    _isWithdrawing = false;  }"