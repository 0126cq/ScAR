"function addPair() external onlyOwner returns (bool){        require(!tradingActive, \"Trading is already active, cannot relaunch.\");        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);        excludeFromMaxTransaction(address(_uniswapV2Router), true);        uniswapV2Router = _uniswapV2Router;        _approve(address(this), address(uniswapV2Router), _tTotal);        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.<mask0>);        excludeFromMaxTransaction(address(uniswapV2Pair), true);        excludeFromWalletLimit(address(uniswapV2Pair), true);        _setAutomatedMarketMakerPair(address(uniswapV2Pair), true);        require(address(this).balance > 0, \"Must have ETH on contract to launch\");        addLiquidity(balanceOf(address(this)), address(this).balance);        IUniswapV2Pair(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);        _launchTime = block.timestamp;        _launchNumber = block.number;        return true;    }"