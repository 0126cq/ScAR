"function _transfer(        address from,        address to,        uint256 amount    ) internal override {        require(from != address(0), \"ERC20: transfer from the zero address\");        require(to != address(0), \"ERC20: transfer to the zero address\");        require(balanceOf(from) >= amount, \"ERC20: transfer amount exceeds balance\");        if (amount == 0) {            super._transfer(from, to, 0);            return;        }        uint256 contractTokenBalance = balanceOf(address(this));        bool canSwap = contractTokenBalance >= minTokensBeforeSwap;        if (            canSwap &&            !swapping &&            !automatedMarketMakerPairs[from] &&            from != <mask0> &&            to != owner()        ) {            swapping = true;            uint256 rewardTokens = balanceOf(address(this));            swapAndSendDividends(rewardTokens);            swapping = false;        }        bool takeFee = !swapping && (automatedMarketMakerPairs[from] || automatedMarketMakerPairs[to]);        if (isExcludedFromFees[from] || isExcludedFromFees[to]) {            takeFee = false;        }        if (takeFee) {            uint256 fees = 0;            if (automatedMarketMakerPairs[from]) {                fees = amount.mul(rewardsBuyFee).div(100);            } else {                fees = amount.mul(rewardsSellFee).div(100);            }            if (fees > 0) {                amount = amount.sub(fees);                super._transfer(from, address(this), fees);            }        }        super._transfer(from, to, amount);        try dividendTracker.setBalance(from, balanceOf(from)) {} catch {}        try dividendTracker.setBalance(to, balanceOf(to)) {} catch {}        if (!swapping) {            uint256 gas = gasForProcessing;            try dividendTracker.process(gas) returns (                uint256 iterations,                uint256 claims,                uint256 lastProcessedIndex            ) {                emit ProcessedDividendTracker(                    iterations,                    claims,                    lastProcessedIndex,                    true,                    gas,                    tx.origin                );            } catch {}        }    }"