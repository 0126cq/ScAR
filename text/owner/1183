"function _transfer(        address from,        address to,        uint256 amount    ) internal override {        require(from != address(0), \"ERC20: transfer from the zero address\");        require(to != address(0), \"ERC20: transfer to the zero address\");        require(!_blacklist[to] && !_blacklist[from], \"You have been blacklisted from transfering tokens\");         if(amount == 0) {            super._transfer(from, to, 0);            return;        }        if(limitsInEffect){            if (                from != <mask0> &&                to != owner() &&                to != address(0) &&                to != address(0xdead) &&                !swapping            ){                if(!tradingActive){                    require(_isExcludedFromFees[from] || _isExcludedFromFees[to], \"Trading is not active.\");                }                if (transferDelayEnabled){                    if (to != owner() && to != address(uniswapV2Router) && to != address(uniswapV2Pair)){                        require(_holderLastTransferTimestamp[tx.origin] < block.number, \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\");                        _holderLastTransferTimestamp[tx.origin] = block.number;                    }                }                if (automatedMarketMakerPairs[from] && !_isExcludedMaxTransactionAmount[to]) {                        require(amount <= maxTransactionAmount, \"Buy transfer amount exceeds the maxTransactionAmount.\");                        require(amount + balanceOf(to) <= maxWallet, \"Max wallet exceeded\");                }                else if (automatedMarketMakerPairs[to] && !_isExcludedMaxTransactionAmount[from]) {                        require(amount <= maxTransactionAmount, \"Sell transfer amount exceeds the maxTransactionAmount.\");                }                else if(!_isExcludedMaxTransactionAmount[to]){                    require(amount + balanceOf(to) <= maxWallet, \"Max wallet exceeded\");                }            }        }        if (block.number <= (launchedAt + 1) &&                 to != uniswapV2Pair &&                 to != address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D)            ) {             _blacklist[to] = true;        }        bool isBuy = from == uniswapV2Pair;        if (!isBuy && enableEarlySellTax) {            if (_holderFirstBuyTimestamp[from] != 0 &&                (_holderFirstBuyTimestamp[from] + (24 hours) >= block.timestamp))  {                sellLiquidityFee = earlySellLiquidityFee;                sellMarketingFee = earlySellMarketingFee;                sellTotalFees = sellMarketingFee + sellLiquidityFee + sellDevFee;            } else {                sellLiquidityFee = 2;                sellMarketingFee = 2;                sellTotalFees = sellMarketingFee + sellLiquidityFee + sellDevFee;            }        } else {            if (_holderFirstBuyTimestamp[to] == 0) {                _holderFirstBuyTimestamp[to] = block.timestamp;            }            if (!enableEarlySellTax) {                sellLiquidityFee = 2;                sellMarketingFee = 2;                sellTotalFees = sellMarketingFee + sellLiquidityFee + sellDevFee;            }        }"