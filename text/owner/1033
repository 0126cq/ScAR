"function createPerpetual(Params memory params, ConfigStore.ConfigSettings memory configSettings)        public        nonReentrant()        returns (address)    {        require(bytes(params.syntheticName).length != 0, \"Missing synthetic name\");        require(bytes(params.syntheticSymbol).length != 0, \"Missing synthetic symbol\");        ConfigStore configStore = new ConfigStore(configSettings, timerAddress);        configStore.transferOwnership(msg.sender);        emit CreatedConfigStore(address(configStore), configStore.<mask0>);        TokenFactory tf = TokenFactory(tokenFactoryAddress);        uint8 syntheticDecimals = _getSyntheticDecimals(params.collateralAddress);        ExpandedIERC20 tokenCurrency = tf.createToken(params.syntheticName, params.syntheticSymbol, syntheticDecimals);        address derivative = PerpetualLib.deploy(_convertParams(params, tokenCurrency, address(configStore)));        tokenCurrency.addMinter(derivative);        tokenCurrency.addBurner(derivative);        tokenCurrency.resetOwner(derivative);        _registerContract(new address[](0), derivative);        emit CreatedPerpetual(derivative, msg.sender);        return derivative;    }"