"function _transfer(        address from,        address to,        uint256 amount    ) internal override {        require(from != address(0), \"ERC20: transfer from the zero address\");        require(to != address(0), \"ERC20: transfer to the zero address\");         if(amount == 0) {            super._transfer(from, to, 0);            return;        }        if(!tradingActive){            require(_isExcludedFromFees[from] || _isExcludedFromFees[to], \"Trading is not active.\");        }        if(limitsInEffect){            if (                from != <mask0> &&                to != owner() &&                to != address(0) &&                to != address(0xdead) &&                !swapping &&                !_isExcludedFromFees[to] &&                !_isExcludedFromFees[from]            ){                if (transferDelayEnabled){                    if (to != address(dexRouter) && to != address(lpPair)){                        require(_holderLastTransferBlock[tx.origin] < block.number - 1 && _holderLastTransferBlock[to] < block.number - 1, \"_transfer:: Transfer Delay enabled.  Try again later.\");                        _holderLastTransferBlock[tx.origin] = block.number;                        _holderLastTransferBlock[to] = block.number;                    }                }                if (automatedMarketMakerPairs[from] && !_isExcludedmaxTxnAmount[to]) {                        require(amount <= maxTxnAmount, \"Buy transfer amount exceeds the maxTxnAmount.\");                        require(amount + balanceOf(to) <= maxWallet, \"Max wallet exceeded\");                }                else if (automatedMarketMakerPairs[to] && !_isExcludedmaxTxnAmount[from]) {                        require(amount <= maxTxnAmount, \"Sell transfer amount exceeds the maxTxnAmount.\");                }                else if (!_isExcludedmaxTxnAmount[to]){                    require(amount + balanceOf(to) <= maxWallet, \"Max wallet exceeded\");                }            }        }"