"function getVesting(address vesting) public view returns(VestingData memory vestingData) {        if (vesting == address(0)) return vestingData;        InstaVestingInferface VestingContract = InstaVestingInferface(vesting);        uint256 vestingBegin = uint256(VestingContract.vestingBegin());        uint256 vestingEnd = uint256(VestingContract.vestingEnd());        uint256 vestingCliff = uint256(VestingContract.vestingCliff());        uint256 vestingAmount = VestingContract.vestingAmount();        uint256 lastUpdate = uint256(VestingContract.lastUpdate());        uint256 terminatedTime = uint256(VestingContract.terminateTime());        uint256 claimedAmount;        uint256 claimableAmount;        uint256 vestedAmount;        uint256 unvestedAmount;        if (block.timestamp > vestingCliff) {            uint256 time = terminatedTime == 0 ? block.timestamp : terminatedTime;            if (time > vestingEnd) {                vestedAmount = vestingAmount;                if (lastUpdate > vestingEnd) {                    claimableAmount = 0;                    claimedAmount = vestedAmount;                } else {                    claimableAmount = vestingAmount.mul(time - lastUpdate).div(vestingEnd - vestingBegin);                    claimedAmount = vestedAmount.mul(time - vestingBegin).div(vestingEnd - vestingBegin);                }            } else {                vestedAmount = vestingAmount.mul(time - vestingBegin).div(vestingEnd - vestingBegin);                claimableAmount = vestingAmount.mul(time - lastUpdate).div(vestingEnd - vestingBegin);                claimedAmount = vestedAmount.mul(time - vestingBegin).div(vestingEnd - vestingBegin);            }            unvestedAmount = vestingAmount.sub(vestedAmount);        }        vestingData = VestingData({            recipient: VestingContract.recipient(),            owner: VestingContract.<mask0>,            vesting: vesting,            vestingAmount: vestingAmount,            vestingBegin: vestingBegin,            vestingCliff: vestingCliff,            vestingEnd: vestingEnd,            lastClaimed: lastUpdate,            terminatedTime: terminatedTime,            vestedAmount: vestedAmount,            unvestedAmount: unvestedAmount,            claimedAmount: claimedAmount,            claimableAmount: claimableAmount        });    }"