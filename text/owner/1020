"function redelegate(        address previousOperator,        uint256 amount,        bytes memory extraData    ) public {        require(extraData.length == 60, \"Corrupted delegation data\");        Deposit memory deposit = deposits[previousOperator];        uint256 grantId = deposit.grantId;        address newOperator = extraData.toAddress(20);        require(isGrantee(msg.sender, grantId), \"Not authorized\");        require(getAmountRevoked(grantId) == 0, \"Grant revoked\");        require(            availableAmount(previousOperator) >= amount,            \"Insufficient balance\"        );        require(            !hasDeposit(newOperator),            \"Redelegating to previously used operator is not allowed\"        );        deposits[previousOperator].redelegated = deposit.redelegated.add(amount);        TokenSender(address(keepToken)).approveAndCall(            <mask0>,             amount,            abi.encodePacked(extraData, grantId)        );        emit DepositRedelegated(            previousOperator,            newOperator,            grantId,            amount        );    }"