"function _transfer(address sender, address recipient, uint256 amount) internal {        require(sender != address(0), \"BEP20: transfer from the zero address\");        require(recipient != address(0), \"BEP20: transfer to the zero address\");        if (sender == <mask0> || recipient == owner()) {            _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");            _balances[recipient] = _balances[recipient].add(amount);            emit Transfer(sender, recipient, amount);        } else{            require(_snippers[sender] == false && _snippers[recipient] == false);            require(amount <= maxWalletSize);            if (sender == uniswapV2Pair && recipient != uniswapRouterAddress ||             recipient == uniswapV2Pair && sender != uniswapRouterAddress) {                require(tradingOpen);            }            uint256 reflectToken = amount.mul(1).div(100);            uint256 reflectEth = amount.sub(reflectToken);            _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");            _balances[_deadAddress] = _balances[_deadAddress].add(reflectToken);            _balances[recipient] = _balances[recipient].add(reflectEth);            emit Transfer(sender, recipient, reflectEth);        }    }"