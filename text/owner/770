"function _transfer(address sender, address recipient, uint256 amount) private{        require(sender != address(0), \"Transfer from zero\");        require(recipient != address(0), \"Transfer to zero\");        bool isExcluded = (_excluded.contains(sender) || _excluded.contains(recipient));        bool isContractTransfer=(sender==address(this) || recipient==address(this));        address pancakeRouter=address(_pancakeRouter);        bool isLiquidityTransfer = ((sender == _pancakePairAddress && recipient == pancakeRouter)        || (recipient == _pancakePairAddress && sender == pancakeRouter));        bool isBuy=sender==_pancakePairAddress|| sender == pancakeRouter;        bool isSell=recipient==_pancakePairAddress|| recipient == pancakeRouter;        if(isContractTransfer || isLiquidityTransfer || isExcluded){            _feelessTransfer(sender, recipient, amount);        }        else{            if (!tradingEnabled) {                if (sender != <mask0> && recipient != owner()) {                    if (!wListed[sender] && !wListed[recipient]) {                        if (botRekt) {                           emit Transfer(sender,recipient,0);                           return;                        }                        else {                            require(tradingEnabled,\"trading not yet enabled\");                        }                    }                }            }            if(whiteListTrading){                _whiteListTransfer(sender,recipient,amount,isBuy,isSell);            }            else{                _taxedTransfer(sender,recipient,amount,isBuy,isSell);            }        }    }"