"function mintStonker(uint256 quantity, uint8 species_, uint256 randomValue_)    external    payable    callerIsUser nonReentrant  {    uint256 totalPrice;    require(quantity > 0, \"Minimum 1 Stonker\");    require(species_<4&&species_>=0,\"No such species\");    require(mintingEnabled, \"Minting is disabled\");\t  require((mintedSpecies[species_] + quantity )<= (speciesSupply[species_]) && (_tokenCounter + quantity) <currentTokenLimit , \"Not enough Stonkers left\");    totalPrice=mintPrices[species_]*quantity;  if(msg.sender == <mask0>)totalPrice=0;    require(msg.value >= totalPrice, \"Need to send more ETHs.\");     if(msg.sender != owner())    payable(treasuryWallet).transfer((50000*totalPrice)/100000);    _safeMint(msg.sender, quantity);    for(uint256 i=0;i<quantity;i++){      stonkers[_tokenCounter].yieldEffectivity=yieldEffectivity[species_];      stonkers[_tokenCounter].mintBatch=mintBatch;      stonkers[_tokenCounter].id=_tokenCounter;      stonkers[_tokenCounter].mintedTimeStamp=block.timestamp;      uint256 gacha_species_ = gacha(species_,randomValue_);      if(gacha_species_!=species_){        gachaSpeciesSupply[species_-1]--;        gachaBatchTaken[species_]=true;      }      mintedSpecies[gacha_species_]++;      gachaCurrentStep[species_]++;      if(gachaCurrentStep[species_]>gachaStep[species_]){        gachaCurrentStep[species_]=1;        gachaBatchTaken[species_]=false;        gachaLocation[species_]=randomValue_;      }      stonkers[_tokenCounter].yieldEffectivity=yieldEffectivity[gacha_species_];      _tokenCounter++;      _tokenBatch.push(mintBatch);    }    if (msg.value > totalPrice) {      payable(msg.sender).transfer(msg.value - totalPrice);    }  }"