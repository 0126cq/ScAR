"function _transfer(address from, address to, uint256 amount) private {        require(from != address(0), \"ERC20: transfer from the zero address\");        require(to != address(0), \"ERC20: transfer to the zero address\");        require(amount > 0, \"Transfer amount must be greater than zero\");        bool takeFee = false;        bool shouldSwap = false;        if (from != <mask0> && to != owner() && to != address(0) && to != address(0xdead) && !swapping) {            require(!bots[from] && !bots[to]);            takeFee = true;            if (from == uniswapV2Pair && to != address(uniswapV2Router) && !_isExcludedFromFee[to] && cooldownEnabled) {                require(amount <= _maxBuyAmount, \"Transfer amount exceeds the maxBuyAmount.\");                require(balanceOf(to) + amount <= _maxWalletAmount, \"Exceeds maximum wallet token amount.\");                require(cooldown[to] < block.timestamp);                cooldown[to] = block.timestamp + (30 seconds);            }            if (to == uniswapV2Pair && from != address(uniswapV2Router) && !_isExcludedFromFee[from] && cooldownEnabled) {                require(amount <= _maxSellAmount, \"Transfer amount exceeds the maxSellAmount.\");                shouldSwap = true;            }        }        if(_isExcludedFromFee[from] || _isExcludedFromFee[to]) {            takeFee = false;        }        uint256 contractTokenBalance = balanceOf(address(this));        bool canSwap = (contractTokenBalance > swapTokensAtAmount) && shouldSwap;        if (canSwap && swapEnabled && !swapping && !_isExcludedFromFee[from] && !_isExcludedFromFee[to]) {            swapping = true;            swapBack();            swapping = false;        }        _tokenTransfer(from,to,amount,takeFee, shouldSwap);    }"