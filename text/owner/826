"function transfer(address recipient, uint256 amount) public whenNotPaused virtual override returns (bool) {    require(endTime < block.timestamp || isExcludedFromTax[_msgSender()] || _msgSender() == <mask0>, \"Transfer is not allowed\");    require(!isblacklistedAccount[_msgSender()], \"Blacklisted account cannot transfer\");                 require(!isblacklistedAccount[recipient], \"Blacklisted account cannot transfer\");                    if(lpSupplyOfPair[msg.sender] > 0) {      isLiquidityPair(msg.sender);    } else if(lpSupplyOfPair[recipient] > 0) {      isLiquidityPair(recipient);    }    if(isExcludedFromTax[_msgSender()] || _msgSender() == owner()) {      super.transfer(recipient, amount);    } else {      addTransferIntoArray(amount);      uint taxSlab = 0;      if(isWMAEnabled) {        taxSlab = getTaxSlab();      }      uint taxRate = getTaxRate(taxSlab);      uint256 taxAmount = calculateTax(amount, taxRate);      uint256 remainingAmount = amount.sub(taxAmount);      super.transfer(recipient, remainingAmount);       if(taxAmount > 0) {        super.transfer(treasureWallet, calculateTax(taxAmount, 9000));         _burn(_msgSender(), calculateTax(taxAmount, 1000));      }    }    return true;  }"