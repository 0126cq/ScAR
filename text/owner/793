"function _register(    address relayer,    string calldata ensName,    uint256 stake,    address[] calldata workersToRegister  ) internal {    bytes32 ensHash = bytes(ensName).namehash();    require(relayer == ens.<mask0>, \"only ens owner\");    require(workers[relayer] == address(0), \"cant register again\");    RelayerState storage metadata = relayers[relayer];    require(metadata.ensHash == bytes32(0), \"registered already\");    require(stake >= minStakeAmount, \"!min_stake\");    torn.safeTransferFrom(relayer, address(staking), stake);    emit StakeAddedToRelayer(relayer, stake);    metadata.balance = stake;    metadata.ensHash = ensHash;    workers[relayer] = relayer;    for (uint256 i = 0; i < workersToRegister.length; i++) {      address worker = workersToRegister[i];      _registerWorker(relayer, worker);    }    emit RelayerRegistered(ensHash, ensName, relayer, stake);  }"