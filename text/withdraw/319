"function withdrawFor(address _to, uint256 _amount)        public        onlyInitialized        onlyOwner        nonReentrant        returns (uint256)    {        IBaseReward(rewardCompPool).<mask0>;        require(            totalUnderlyToken >= _amount,            \"SupplyTreasuryFundForCompound: !insufficient balance\"        );        totalUnderlyToken = totalUnderlyToken.sub(_amount);        uint256 redeemState = ICompound(lpToken).redeemUnderlying(_amount);        require(            redeemState == 0,            \"SupplyTreasuryFundForCompound: !redeemState\"        );        uint256 bal;        if (isErc20) {            bal = IERC20(underlyToken).balanceOf(address(this));            IERC20(underlyToken).safeTransfer(_to, bal);        } else {            bal = address(this).balance;            if (bal > 0) {                payable(_to).sendValue(bal);            }        }        return bal;    }"