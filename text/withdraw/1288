"function _onFlashLoanSellClaim(FlashLoanData memory data, uint256 amount, uint256 amountOwed) internal {        uint256 daiAvailable = amount;        _approve(dai, address(data.bpool), amount);        (IERC20 claimToken, IERC20 noclaimToken) = _getCovTokenAddresses(            data.protocol,             data.collateral,             data.timestamp        );        (uint256 daiSpent, ) = data.bpool.swapExactAmountOut(            address(dai),            amount,            address(noclaimToken),            data.amount,            type(uint256).max        );        daiAvailable = daiAvailable - daiSpent;        claimToken.safeTransferFrom(data.caller, address(this), data.amount);        uint256 collateralBalBefore = IERC20(data.collateral).balanceOf(address(this));        address cover = data.protocol.coverMap(data.collateral, data.timestamp);        ICover(cover).redeemCollateral(data.amount);        uint256 collateralReceived = IERC20(data.collateral).balanceOf(address(this)) - collateralBalBefore;        if (data.collateral == address(dai)) {            daiAvailable = daiAvailable + collateralReceived;        } else if (data.collateral == address(ydai)) {            _approve(ydai, address(ydai), collateralReceived);            uint256 daiBalBefore = dai.balanceOf(address(this));            ydai.<mask0>;            uint256 daiReceived = dai.balanceOf(address(this)) - daiBalBefore;            daiAvailable = daiAvailable + daiReceived;        }        require(daiAvailable >= data.limit + amountOwed, \"returns are less than limit\");        if (daiAvailable > amountOwed) {            dai.safeTransfer(data.caller, daiAvailable - amountOwed);        }    }"