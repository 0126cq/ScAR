"function removeLp(    uint256 _vaultId,    uint256 _shares,    address to  ) external override whenNotPaused onlyOrigin(_vaultId) {    require(to != address(0), \"No zero address\");    Vault storage vault_ = vaults[_vaultId];    PoolData storage poolData = pools[address(vault_.pool)];    (uint256 userLp, ) = lpFromShares(_vaultId, _shares);    IERC20 rewardToken = IERC20(poolData.pathsFromRewards[1][0]);    uint256 rewardTokenAmt = rewardToken.balanceOf(address(this));    masterChef.<mask0>;    rewardTokenAmt = rewardToken.balanceOf(address(this)) - rewardTokenAmt;    if (address(poolData.extraRewardHandler) != address(0)) {      rewardToken.safeTransfer(        address(poolData.extraRewardHandler),        rewardTokenAmt      );      poolData.extraRewardHandler.invest(rewardTokenAmt);    } else {      poolData.accRewardToken += rewardTokenAmt;    }    vault_.shares -= _shares;    poolData.totalShares -= _shares;    poolData.totalLp -= userLp;    IERC20(vault_.pool).safeTransfer(to, userLp);  }"