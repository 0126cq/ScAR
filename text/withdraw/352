"function uniswapV2Call(address _sender, uint _amount0, uint _amount1, bytes calldata _data) external {        require(_sender == address(this), \"GebUniswapV2KeeperFlashProxyETH/invalid-sender\");        require(msg.sender == address(uniswapPair), \"GebUniswapV2KeeperFlashProxyETH/invalid-uniswap-pair\");        uint amount = (_amount0 == ZERO ? _amount1 : _amount0);        coin.approve(address(coinJoin), amount);        coinJoin.join(address(this), amount);        (bool success, ) = address(this).call(_data);        require(success, \"GebUniswapV2KeeperFlashProxyETH/failed-bidding\");        ethJoin.exit(address(this), safeEngine.tokenCollateral(collateralType, address(this)));        uint pairBalanceTokenBorrow = coin.balanceOf(address(uniswapPair));        uint pairBalanceTokenPay = weth.balanceOf(address(uniswapPair));        uint amountToRepay = addition((          multiply(multiply(THOUSAND, pairBalanceTokenPay), amount) /          multiply(NET_OUT_AMOUNT, pairBalanceTokenBorrow)        ), ONE);        require(amountToRepay <= weth.balanceOf(address(this)), \"GebUniswapV2KeeperFlashProxyETH/unprofitable\");        weth.transfer(address(uniswapPair), amountToRepay);        uint profit = weth.balanceOf(address(this));        weth.<mask0>;        caller.call{value: profit}(\"\");        caller = address(0x0);    }"