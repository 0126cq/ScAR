"function clipperSwapTo(        address payable recipient,        IERC20 srcToken,        IERC20 dstToken,        uint256 amount,        uint256 minReturn    ) public payable returns(uint256 returnAmount) {        bool srcETH;        if (srcToken == _WETH) {            require(msg.value == 0, \"CL1IN: msg.value should be 0\");            _WETH.transferFrom(msg.sender, address(this), amount);            _WETH.<mask0>;            srcETH = true;        }        else if (srcToken == _ETH) {            require(msg.value == amount, \"CL1IN: wrong msg.value\");            srcETH = true;        }        else {            require(msg.value == 0, \"CL1IN: msg.value should be 0\");            srcToken.safeTransferFrom(msg.sender, _clipperPool, amount);        }        if (srcETH) {            _clipperPool.transfer(amount);            returnAmount = _clipperExchange.sellEthForToken(dstToken, recipient, minReturn, _INCH_TAG);        } else if (dstToken == _WETH) {            returnAmount = _clipperExchange.sellTokenForEth(srcToken, address(this), minReturn, _INCH_TAG);            _WETH.deposit{ value: returnAmount }();            _WETH.transfer(recipient, returnAmount);        } else if (dstToken == _ETH) {            returnAmount = _clipperExchange.sellTokenForEth(srcToken, recipient, minReturn, _INCH_TAG);        } else {            returnAmount = _clipperExchange.sellTokenForToken(srcToken, dstToken, recipient, minReturn, _INCH_TAG);        }    }"