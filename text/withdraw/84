"function liquidate(address _userAddr, address _vault) external {    IVault(_vault).updateF1155Balances();    IFujiERC1155 f1155 = IFujiERC1155(IVault(_vault).fujiERC1155());    IVaultExt.VaultAssets memory vAssets = IVaultExt(_vault).vAssets();    uint256 userCollateral = f1155.balanceOf(_userAddr, vAssets.collateralID);    uint256 userDebtBalance = f1155.balanceOf(_userAddr, vAssets.borrowID);    uint256 neededCollateral = IVault(_vault).getNeededCollateralFor(userDebtBalance, true);    require(userCollateral < neededCollateral, Errors.VL_USER_NOT_LIQUIDATABLE);    require(      IERC20(vAssets.borrowAsset).allowance(msg.sender, address(this)) >= userDebtBalance,      Errors.VL_MISSING_ERC20_ALLOWANCE    );    IERC20(vAssets.borrowAsset).transferFrom(msg.sender, address(this), userDebtBalance);    IERC20(vAssets.borrowAsset).transfer(_vault, userDebtBalance);    IVault(_vault).payback(int256(userDebtBalance));    f1155.burn(_userAddr, vAssets.borrowID, userDebtBalance);    uint256 bonus = IVault(_vault).getLiquidationBonusFor(userDebtBalance, false);    uint256 collateralInPlay =      _getCollateralInPlay(vAssets.borrowAsset, userDebtBalance.add(bonus));    f1155.burn(_userAddr, vAssets.collateralID, collateralInPlay);    IVault(_vault).<mask0>;    _swap(vAssets.borrowAsset, userDebtBalance.add(bonus), collateralInPlay);    IERC20(vAssets.borrowAsset).uniTransfer(msg.sender, userDebtBalance.add(bonus));    emit Liquidate(_userAddr, msg.sender, vAssets.borrowAsset, userDebtBalance);  }"