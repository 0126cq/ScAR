"function _withdrawFundsTo(address _recipient, uint256 _amount) internal returns (uint256, uint256) {    uint256 _bufferedAmount = Math.min(_amount, token.balanceOf(address(this)));    if (_recipient != address(this)) {      token.safeTransfer(_recipient, _bufferedAmount);    }    uint256 _totalWithdrawn = _bufferedAmount;    uint256 _totalDecreasedValue = _bufferedAmount;    uint256 _remainingAmount = _amount.sub(_bufferedAmount);    if (_remainingAmount > 0) {      Vault.Data storage _activeVault = _vaults.last();      (uint256 _withdrawAmount, uint256 _decreasedValue) = _activeVault.<mask0>;      _totalWithdrawn = _totalWithdrawn.add(_withdrawAmount);      _totalDecreasedValue = _totalDecreasedValue.add(_decreasedValue);    }    totalDeposited = totalDeposited.sub(_totalDecreasedValue);    return (_totalWithdrawn, _totalDecreasedValue);  }"