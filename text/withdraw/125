"function _fillQuote(        address _fromTokenAddress,        address _toTokenAddress,        uint256 _amount,        address _swapTarget,        bytes memory _swapCallData    ) internal returns (uint256 amountBought) {        if (_fromTokenAddress == _toTokenAddress) return _amount;        if (            _fromTokenAddress == wethTokenAddress &&            _toTokenAddress == address(0)        ) {            IWETH(wethTokenAddress).<mask0>;            return _amount;        } else if (            _fromTokenAddress == address(0) &&            _toTokenAddress == wethTokenAddress        ) {            IWETH(wethTokenAddress).deposit{value: _amount}();            return _amount;        }        uint256 valueToSend;        if (_fromTokenAddress == address(0)) valueToSend = _amount;        else _approveToken(_fromTokenAddress, _swapTarget, _amount);        uint256 iniBal = _getBalance(_toTokenAddress);        require(approvedTargets[_swapTarget], \"Target not Authorized\");        (bool success, ) = _swapTarget.call{value: valueToSend}(_swapCallData);        require(success, \"Error Swapping Tokens\");        uint256 finalBal = _getBalance(_toTokenAddress);        amountBought = finalBal - iniBal;        require(amountBought > 0, \"Swapped To Invalid Intermediate\");    }"