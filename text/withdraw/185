"function prepareReturn(uint256 _debtOutstanding)        internal        override        returns (            uint256 _profit,            uint256 _loss,            uint256 _debtPayment        )    {        if (sellCounter == 0) IFarming(farmingContract).massHarvest();        uint256 _emissionTokenBalance = emissionToken.balanceOf(address(this));        if (_emissionTokenBalance > 0) {            uint256 _toSell =                _emissionTokenBalance.div(sellsPerEpoch.sub(sellCounter));            if (_toSell > 0) {                if (sellOnSushi) {                    _sellMostlyOnSushi(_toSell);                } else {                    _sellMostlyOnUni(_toSell);                }                sellCounter = sellCounter.add(1);                if (sellCounter == sellsPerEpoch) sellCounter = 0;            }        }        if (_debtOutstanding > 0) {            if (balanceOfStaked() > 0) {                IStaking(staking).<mask0>;            }            uint256 _withdrawnBal = balanceOfWant();            _debtPayment = Math.min(_debtOutstanding, _withdrawnBal);        }        uint256 assets = estimatedTotalAssets();        uint256 debt = vault.strategies(address(this)).totalDebt;        if (assets > debt) {            _profit = assets.sub(debt);            uint256 _wantBal = balanceOfWant();            if (_profit.add(_debtPayment) > _wantBal) {                liquidateAllPositions();            }        }        else {            _loss = debt.sub(assets);        }    }"