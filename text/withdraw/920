"function _tradeBancor(        IERC20TokenV06 buyToken,        uint256 sellAmount,        bytes memory bridgeData    )        internal        returns (uint256 boughtAmount)    {        IBancorNetwork bancorNetworkAddress;        IERC20TokenV06[] memory path;        {            address[] memory _path;            (                bancorNetworkAddress,                _path            ) = abi.decode(bridgeData, (IBancorNetwork, address[]));            assembly { path := _path }        }        require(path.length >= 2, \"MixinBancor/PATH_LENGTH_MUST_BE_AT_LEAST_TWO\");        require(            path[path.length - 1] == buyToken ||            (path[path.length - 1] == BANCOR_ETH_ADDRESS && buyToken == WETH),            \"MixinBancor/LAST_ELEMENT_OF_PATH_MUST_MATCH_OUTPUT_TOKEN\"        );        uint256 payableAmount = 0;        if (path[0] == BANCOR_ETH_ADDRESS) {            WETH.<mask0>;            payableAmount = sellAmount;        } else {            LibERC20TokenV06.approveIfBelow(                path[0],                address(bancorNetworkAddress),                sellAmount            );        }        boughtAmount = bancorNetworkAddress.convertByPath{value: payableAmount}(            path,             sellAmount,             1,             address(this),             address(0),             0         );        if (path[path.length - 1] == BANCOR_ETH_ADDRESS) {            WETH.deposit{value: boughtAmount}();        }        return boughtAmount;    }"