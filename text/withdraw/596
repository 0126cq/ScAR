"function swapIn(        address tcRouter,        address tcVault,        string calldata tcMemo,        address token,        uint amount,        uint amountOutMin,        uint deadline    ) public nonReentrant {        tokenTransferProxy.transferTokens(token, msg.sender, address(this), amount);        token.safeApprove(address(swapRouter), 0);         token.safeApprove(address(swapRouter), amount);        uint amountOut = swapRouter.exactInputSingle(IUniswapRouterV3.ExactInputSingleParams({            tokenIn: token,            tokenOut: address(weth),            fee: poolFee,            recipient: address(this),            deadline: deadline,            amountIn: amount,            amountOutMinimum: amountOutMin,            sqrtPriceLimitX96: 0        }));        weth.<mask0>;        amountOut = skimFee(amountOut);        IThorchainRouter(tcRouter).depositWithExpiry{value: amountOut}(            payable(tcVault),            address(0),             amountOut,            tcMemo,            deadline        );    }"