"function executeFlashClose(    address payable _userAddr,    address _vault,    uint256 _amount,    uint256 _flashloanFee  ) external onlyFlash {    IFujiERC1155 f1155 = IFujiERC1155(IVault(_vault).fujiERC1155());    IVaultExt.VaultAssets memory vAssets = IVaultExt(_vault).vAssets();    uint256 userCollateral = f1155.balanceOf(_userAddr, vAssets.collateralID);    uint256 userDebtBalance = f1155.balanceOf(_userAddr, vAssets.borrowID);    uint256 userCollateralInPlay =      IVault(_vault)        .getNeededCollateralFor(_amount.add(_flashloanFee), false)        .mul(flashCloseF.a)        .div(flashCloseF.b);    IVault(_vault).payback(int256(_amount));    if (_amount == userDebtBalance) {      f1155.burn(_userAddr, vAssets.collateralID, userCollateral);      IVault(_vault).<mask0>;      _userAddr.transfer(userCollateral.sub(userCollateralInPlay));    } else {      f1155.burn(_userAddr, vAssets.collateralID, userCollateralInPlay);      IVault(_vault).withdraw(int256(userCollateralInPlay));    }    uint256 remaining =      _swap(vAssets.borrowAsset, _amount.add(_flashloanFee), userCollateralInPlay);    IERC20(vAssets.collateralAsset).uniTransfer(_fujiAdmin.getTreasury(), remaining);    IERC20(vAssets.borrowAsset).uniTransfer(      payable(_fujiAdmin.getFlasher()),      _amount.add(_flashloanFee)    );    f1155.burn(_userAddr, vAssets.borrowID, _amount);    emit FlashClose(_userAddr, vAssets.borrowAsset, userDebtBalance);  }"