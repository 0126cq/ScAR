"function buyAndSwap1155(    uint256 vaultId,     uint256[] calldata idsIn,     uint256[] calldata amounts,     uint256[] calldata specificIds,     address[] calldata path,    address to  ) external payable nonReentrant {    require(to != address(0) && to != address(this));    uint256 length = idsIn.length;    require(length != 0);    WETH.deposit{value: msg.value}();    uint256 count;    for (uint256 i; i < length; ++i) {        uint256 amount = amounts[i];        require(amount > 0, \"Transferring < 1\");        count += amount;    }    INFTXVault vault = INFTXVault(nftxFactory.vault(vaultId));    uint256 redeemFees = (vault.targetSwapFee() * specificIds.length) + (        vault.randomSwapFee() * (count - specificIds.length)    );    uint256[] memory swapAmounts = _buyVaultToken(redeemFees, msg.value, path);    _swap1155(vaultId, idsIn, amounts, specificIds, to);    emit Swap(count, swapAmounts[0], to);    uint256 remaining = WETH.balanceOf(address(this));    WETH.<mask0>;    (bool success, ) = payable(to).call{value: remaining}(\"\");    require(success, \"Address: unable to send value, recipient may have reverted\");  }"