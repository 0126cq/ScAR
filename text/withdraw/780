"function withdraw(uint256 _pid, uint256 _amount) public {        PoolInfo storage pool = poolInfo[_pid];        UserInfo storage user = userInfo[_pid][msg.sender];        require(user.amount >= _amount, \"withdraw: not good\");        updatePool(_pid);        uint256 pending = user.amount.mul(pool.accSushiPerShare).div(1e12).sub(user.rewardDebt);        if (pending > 0) {            safeSushiTransfer(msg.sender, pending);        }        if (_amount > 0) {            user.amount = user.amount.sub(_amount);            pool.amount = pool.amount.sub(_amount);            if (address(pool.lpToken) == WETH) {                IWETH(WETH).<mask0>;                TransferHelper.safeTransferETH(address(msg.sender), _amount);            } else {                TransferHelper.safeTransfer(address(pool.lpToken), address(msg.sender), _amount);            }        }        user.rewardDebt = user.amount.mul(pool.accSushiPerShare).div(1e12);        emit Withdraw(msg.sender, _pid, _amount);    }"