"function vaultWithdraw(      address _vaultAddress,      uint shares,      address payable _to,      uint256 _nonce,      bytes memory _signature    )        public        nonReentrant        discountChiGasSaver    {      _checkReplayAttack(_nonce);      address depositTokenAddress = yVaultToDepositTokenAddress[_vaultAddress];      require(depositTokenAddress != address(0), \"Vault not supported\");      address signer = getVaultWithdrawalSigner(_vaultAddress, _to, _nonce, _signature);      require(signer != address(0), \"Invalid signature\");      require(isWhitelistAdmin(signer), \"signer is not an admin\");      uint256 depositTokenBalanceBeforeWithdrawal = ERC20Wrapper.balanceOf(depositTokenAddress, address(this));      IVault(_vaultAddress).<mask0>;      uint256 depositTokenWithdrawn = ERC20Wrapper.balanceOf(depositTokenAddress, address(this)).sub(depositTokenBalanceBeforeWithdrawal);      require(depositTokenWithdrawn > 0, \"No token withdrawn\");      ERC20Wrapper.transfer(          depositTokenAddress,          _to,          depositTokenWithdrawn      );    }"