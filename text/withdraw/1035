"function middleToRight(IRouter route,address input,address output,address to) internal returns(uint) {        uint oldUserBalance=balance(output,to);        if(input==output) {            if(input!=address(0)){                IERC20(input).transfer(to,IERC20(input).balanceOf(address(this)));            } else {                payable(to).transfer(address(this).balance);            }        } else {            address weth=route.WETH();            address wapperInput=(input==address(0)?weth:input);            address wapperOutput=(output==address(0)?weth:output);            IPair pair=route.factory().getPair(wapperInput,wapperOutput);            if(input==address(0)) {                IWETH(weth).deposit{value: address(this).balance}();            }            IERC20(wapperInput).transfer(address(pair),IERC20(wapperInput).balanceOf(address(this)));            if(output!=address(0)) {                swap(route,pair,wapperInput,wapperOutput,to);            } else {                swap(route,pair,wapperInput,wapperOutput,address(this));                IWETH(weth).<mask0>;            }            if(address(this).balance>0) {                payable(to).transfer(address(this).balance);            }        }        uint newUserBalance=balance(output,to);        emit AmountOut(to,output,newUserBalance-oldUserBalance);        return newUserBalance-oldUserBalance;    }"