"function _claim(    uint256 _amount,    uint256 _minOut,    ClaimOption _option  ) internal returns (uint256) {    if (_amount == 0) return _amount;    IAladdinCRV.WithdrawOption _withdrawOption;    if (_option == ClaimOption.Claim) {      require(_amount >= _minOut, \"AladdinConvexVault: insufficient output\");      IERC20Upgradeable(aladdinCRV).safeTransfer(msg.sender, _amount);      return _amount;    } else if (_option == ClaimOption.ClaimAsCvxCRV) {      _withdrawOption = IAladdinCRV.WithdrawOption.Withdraw;    } else if (_option == ClaimOption.ClaimAsCRV) {      _withdrawOption = IAladdinCRV.WithdrawOption.WithdrawAsCRV;    } else if (_option == ClaimOption.ClaimAsCVX) {      _withdrawOption = IAladdinCRV.WithdrawOption.WithdrawAsCVX;    } else if (_option == ClaimOption.ClaimAsETH) {      _withdrawOption = IAladdinCRV.WithdrawOption.WithdrawAsETH;    } else {      revert(\"AladdinConvexVault: invalid claim option\");    }    return IAladdinCRV(aladdinCRV).<mask0>;  }"