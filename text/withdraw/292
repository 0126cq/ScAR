"function withdraw(uint256 _pid, uint256 _amount)        public        nonReentrant        returns (bool)    {        PoolInfo storage pool = poolInfo[_pid];        uint256 depositAmount = IVirtualBalanceWrapper(pool.virtualBalance)            .balanceOf(msg.sender);        require(_amount <= depositAmount, \"SupplyBooster: !depositAmount\");        IBaseReward(pool.rewardInterestPool).<mask0>;        ISupplyTreasuryFund(pool.supplyTreasuryFund).withdrawFor(            msg.sender,            _amount        );        if (extraReward != address(0)) {            ISupplyPoolExtraReward(extraReward).beforeWithdraw(                _pid,                msg.sender            );        }        IVirtualBalanceWrapper(pool.virtualBalance).withdrawFor(            msg.sender,            _amount        );        if (extraReward != address(0)) {            ISupplyPoolExtraReward(extraReward).afterWithdraw(_pid, msg.sender);        }        emit Withdrawn(msg.sender, _pid, _amount);        return true;    }"