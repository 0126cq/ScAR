"function satisfyAdapterWithdrawals(address _ibAlluo) public whenNotPaused {        WithdrawalSystem storage withdrawalSystem = ibAlluoToWithdrawalSystems[            _ibAlluo        ];        uint256 lastWithdrawalRequest = withdrawalSystem.lastWithdrawalRequest;        uint256 lastSatisfiedWithdrawal = withdrawalSystem            .lastSatisfiedWithdrawal;        if (lastWithdrawalRequest != lastSatisfiedWithdrawal) {            uint256 inAdapter = getAdapterAmount(_ibAlluo);            uint256 adapterId = ibAlluoToAdapterId.get(_ibAlluo);            address adapter = adapterIdsToAdapterInfo[adapterId].adapterAddress;            while (lastSatisfiedWithdrawal != lastWithdrawalRequest) {                Withdrawal memory withdrawal = withdrawalSystem.withdrawals[                    lastSatisfiedWithdrawal + 1                ];                if (withdrawal.amount <= inAdapter) {                    IHandlerAdapter(adapter).<mask0>;                    inAdapter -= withdrawal.amount;                    withdrawalSystem.totalWithdrawalAmount -= withdrawal.amount;                    withdrawalSystem.lastSatisfiedWithdrawal++;                    lastSatisfiedWithdrawal++;                    if (withdrawalSystem.resolverTrigger) {                        withdrawalSystem.resolverTrigger = false;                    }                    emit WithdrawalSatisfied(                        _ibAlluo,                        withdrawal.user,                        withdrawal.token,                        withdrawal.amount,                        lastSatisfiedWithdrawal,                        block.timestamp                    );                } else {                    break;                }            }        }    }"