"function redeemAuctionParticipant(    address _tokenAddress,    address _seller,    uint256 _sellerNonce  ) external nonReentrant {    AuctionListing storage auctionListing = auctionListings[_tokenAddress][_seller][_sellerNonce];    require(block.timestamp >= auctionListing.auctionEndTime);    require(auctionListing.auctionEndTime>0);    uint256 _auctionReserve = auctionReserve[_seller][_sellerNonce];    uint256 fraktionsIndex = FraktalNFT(_tokenAddress).fraktionsIndex();    if(_auctionReserve>=auctionListing.reservePrice){      uint256 auctionFraks = auctionListing.numberOfShares;      uint256 _participantContribution = participantContribution[_seller][_sellerNonce][_msgSender()];      uint256 eligibleFrak = (_participantContribution * auctionFraks) / _auctionReserve;      participantContribution[_seller][_sellerNonce][_msgSender()] = 0;      emit Volume(_msgSender(),_participantContribution);      FraktalNFT(_tokenAddress).safeTransferFrom(      address(this),      _msgSender(),      fraktionsIndex,      eligibleFrak,      \"\"      );    }    else{      uint256 _contributed = participantContribution[_seller][_sellerNonce][_msgSender()];      participantContribution[_seller][_sellerNonce][_msgSender()] = 0;      (bool sent,) = _msgSender().<mask0>;      require(sent);    }  }"