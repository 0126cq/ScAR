"function _swapMultiSequencesWithSimpleMode(        IAggregationExecutor caller,        address tokenIn,        uint256 totalSwapAmount,        address tokenOut,        address dstReceiver,        bytes calldata executorData    ) internal {        SimpleSwapData memory swapData = abi.decode(executorData, (SimpleSwapData));        require(swapData.deadline >= block.timestamp, \"ROUTER: Expired\");        require(            swapData.firstPools.length == swapData.firstSwapAmounts.length            && swapData.firstPools.length == swapData.swapDatas.length,            \"invalid swap data length\"        );        uint256 numberSeq = swapData.firstPools.length;        for (uint256 i = 0; i < numberSeq; i++) {            TransferHelper.safeTransferFrom(                tokenIn,                msg.sender,                swapData.firstPools[i],                swapData.firstSwapAmounts[i]            );            require(swapData.firstSwapAmounts[i] <= totalSwapAmount, \"invalid swap amount\");            totalSwapAmount -= swapData.firstSwapAmounts[i];            {                (bool success, bytes memory result) =                    address(caller).<mask0>;                if (!success) {                    revert(RevertReasonParser.parse(result, \"swapSingleSequence failed: \"));                }            }        }        {            (bool success, bytes memory result) =                address(caller).call(                    abi.encodeWithSelector(                        caller.finalTransactionProcessing.selector,                        tokenIn,                        tokenOut,                        dstReceiver,                        swapData.destTokenFeeData                    )                );            if (!success) {                revert(RevertReasonParser.parse(result, \"finalTransactionProcessing failed: \"));            }        }    }"