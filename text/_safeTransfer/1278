"function _dealInOrderBook(Context memory ctx, bool isBuy, uint32 currID,                             Order memory orderInBook, RatPrice memory priceInBook) internal {        ctx.hasDealtInOrderBook = true;        uint stockAmount;        if(isBuy) {            uint a = ctx.remainAmount            uint b = priceInBook.numerator            stockAmount = a/b;        } else {            stockAmount = ctx.remainAmount/ctx.stockUnit;        }        if(uint(orderInBook.amount) < stockAmount) {            stockAmount = uint(orderInBook.amount);        }        require(stockAmount < (1<<42), \"GraSwap: STOCK_TOO_LARGE\");        uint stockTrans = stockAmount        uint moneyTrans = stockTrans * priceInBook.numerator        _emitOrderChanged(orderInBook.amount, uint64(stockAmount), currID, isBuy);        orderInBook.amount -= uint64(stockAmount);        if(isBuy) {             ctx.remainAmount -= moneyTrans;        } else {            ctx.remainAmount -= stockTrans;        }        ctx.dealStockInBook += stockTrans;        ctx.dealMoneyInBook += moneyTrans;        if(isBuy) {            _safeTransfer(ctx.moneyToken, orderInBook.sender, moneyTrans, ctx.graContract);        } else {            <mask0>;        }    }"