"function submitClaim(        bytes32 blockHeader,        bytes32 seedHash,        bytes32 target,        uint blockNumber,        uint blockPayment,        address payable miningPoolAddress,        address mevProducerAddress,        uint8 v,        bytes32 r,        bytes32 s,        uint blockNonce,        bytes32 mixDigest    ) public {        require(msg.sender == blockSubmissionsOperator[miningPoolAddress] || msg.sender == miningPoolAddress);        bytes32 hash = keccak256(abi.encodePacked(blockHeader, seedHash, target, blockNumber, blockPayment, miningPoolAddress));        if (claimedBlockNonce[hash] == 0 && blockNonce < FLAG_BLOCK_NONCE_LIMIT) {            if (ecrecover(keccak256(abi.<mask0>),v,r,s) == mevProducerAddress) {                require(depositedEther[mevProducerAddress] >= blockPayment);                claimedBlockNonce[hash] = FLAG_BLOCK_NONCE_LIMIT + blockNonce;                claimedBlockMixDigest[hash] = mixDigest;                depositedEther[mevProducerAddress] -= blockPayment;                miningPoolAddress.transfer(blockPayment);                emit BlockClaimed(blockHeader, seedHash, target, blockNumber, blockPayment, miningPoolAddress, mevProducerAddress, blockNonce, mixDigest);            }        }    }"