"function collectInterest(\t\taddress[] calldata _stakingContracts,\t\tbool _forceAndWaiverRewards\t) external {\t\tuint256 initialGas = gasleft();\t\tuint256 gdUBI;\t\tuint256 interestInCdai;\t\taddress reserveAddress;\t\t{\t\t\tcERC20 iToken = cERC20(nameService.getAddress(\"CDAI\"));\t\t\tERC20 daiToken = ERC20(nameService.getAddress(\"DAI\"));\t\t\treserveAddress = nameService.getAddress(\"RESERVE\");\t\t\tuint256 currentBalance = daiToken.balanceOf(reserveAddress);\t\t\tuint256 startingCDAIBalance = iToken.balanceOf(reserveAddress);\t\t\tfor (uint256 i = _stakingContracts.length - 1; i >= 0; i--) {\t\t\t\tif (_stakingContracts[i] != address(0x0)) {\t\t\t\t\tIGoodStaking(_stakingContracts[i]).collectUBIInterest(reserveAddress);\t\t\t\t}\t\t\t\tif (i == 0) break; \t\t\t}\t\t\tuint256 daiToConvert = daiToken.balanceOf(reserveAddress) -\t\t\t\tcurrentBalance;\t\t\t(gdUBI, interestInCdai) = GoodReserveCDai(reserveAddress).mintUBI(\t\t\t\tdaiToConvert,\t\t\t\tstartingCDAIBalance,\t\t\t\tiToken\t\t\t);\t\t\tIGoodDollar token = IGoodDollar(nameService.getAddress(\"GOODDOLLAR\"));\t\t\tif (gdUBI > 0) {\t\t\t\trequire(\t\t\t\t\ttoken.transferAndCall(\t\t\t\t\t\tnameService.getAddress(\"BRIDGE_CONTRACT\"),\t\t\t\t\t\tgdUBI,\t\t\t\t\t\tabi.<mask0>\t\t\t\t\t),\t\t\t\t\t\"ubi bridge transfer failed\"\t\t\t\t);\t\t\t}\t\t}\t\tuint256 gdRewardToMint;\t\tif (_forceAndWaiverRewards == false) {\t\t\tuint256 totalUsedGas = ((initialGas - gasleft() + gdMintGasCost) * 110) /\t\t\t\t100; \t\t\tgdRewardToMint = getGasPriceInGD(totalUsedGas);\t\t\tGoodReserveCDai(reserveAddress).mintRewardFromRR(\t\t\t\tnameService.getAddress(\"CDAI\"),\t\t\t\tmsg.sender,\t\t\t\tgdRewardToMint\t\t\t);\t\t\tuint256 gasPriceIncDAI = getGasPriceIncDAIorDAI(\t\t\t\tinitialGas - gasleft(),\t\t\t\tfalse\t\t\t);\t\t\tif (\t\t\t\tblock.timestamp >= lastCollectedInterest + collectInterestTimeThreshold\t\t\t) {\t\t\t\trequire(\t\t\t\t\tinterestInCdai >= gasPriceIncDAI,\t\t\t\t\t\"Collected interest value should be larger than spent gas costs\"\t\t\t\t); \t\t\t} else {\t\t\t\trequire(\t\t\t\t\tinterestInCdai >= interestMultiplier * gasPriceIncDAI,\t\t\t\t\t\"Collected interest value should be interestMultiplier x gas costs\"\t\t\t\t);\t\t\t}\t\t}\t\temit FundsTransferred(\t\t\tmsg.sender,\t\t\treserveAddress,\t\t\t_stakingContracts,\t\t\tinterestInCdai,\t\t\tgdUBI,\t\t\tgdRewardToMint\t\t);\t\tlastCollectedInterest = block.timestamp;\t\tlastCollectedInterestBlock = block.number;\t}"