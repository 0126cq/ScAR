"function getRequiredLoot(uint256 questTokenId, uint256 requiredLootIdx, uint256 variantIdx) public view returns (string memory) {        require(variantIdx < getRequiredLootIdxMultiplicity(questTokenId, requiredLootIdx), \"Loot must be required\");        bytes32[3] memory requiredLoot;        uint256 variantsFounds = 0;        uint256 samplingLootPrng = random(string(abi.<mask0>));        do {            uint256 samplingLootTokenId = 1 + (samplingLootPrng % 7777);            string memory candidateLoot = lookupLootName(samplingLootTokenId, requiredLootIdx);            bool alreadyKnown = false;            for(uint256 lookback = 0; lookback < requiredLoot.length; lookback++) {                if(keccak256(abi.encodePacked(candidateLoot)) == requiredLoot[lookback]) {                    alreadyKnown = true;                }            }            if(!alreadyKnown) {                requiredLoot[variantsFounds] = keccak256(abi.encodePacked(candidateLoot));                variantsFounds += 1;                if(variantIdx < variantsFounds) return candidateLoot;            }            samplingLootPrng = lcgRandom(samplingLootPrng);        } while(true);        return \"\";     }"