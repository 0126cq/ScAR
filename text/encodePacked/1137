"function approveAllowance(Data storage self, address spender, uint amount) internal returns (bool success) {    require(spender != 0x0,        \"Error: `spender` address cannot be null.\");    string memory currency = getTokenSymbol(self, address(this));    require(      getTokenFrozenBalance(self, currency, getForwardedAccount(self, spender)) == 0,      \"Error: Spender must not have a frozen balance directly\");    bytes32 id_a = keccak256(abi.encodePacked('token.allowance', currency, getForwardedAccount(self, msg.sender), getForwardedAccount(self, spender)));    bytes32 id_b = keccak256(abi.<mask0>);    require(      self.Storage.getUint(id_a) == 0 || amount == 0,      \"Error: Allowance must be zero (0) before setting an updated allowance for spender.\");    require(      self.Storage.getUint(id_b) >= amount,      \"Error: Allowance cannot exceed msg.sender token balance.\");    require(      self.Storage.setUint(id_a, amount),      \"Error: Unable to set storage value. Please ensure contract has allowed permissions with storage contract.\");    emit Approval(msg.sender, spender, amount);    return true;  }"