"function bid(        uint256 tokenID,        address _mintableToken,        uint256 amount    )        public        payable        onSaleOnly(tokenID, _mintableToken)        activeAuction(tokenID, _mintableToken)    {        IMintableToken Token = IMintableToken(_mintableToken);        auction memory _auction = auctions[_mintableToken][tokenID];        if (_auction.erc20Token == address(0)) {            require(                msg.value > _auction.currentBid,                \"Insufficient bidding amount.\"            );            if (_auction.buyer == true) {                _auction.highestBidder.transfer(_auction.currentBid);            }        } else {            IERC20 erc20Token = IERC20(_auction.erc20Token);            require(                erc20Token.<mask0> >= amount,                \"Allowance is less than amount sent for bidding.\"            );            require(                amount > _auction.currentBid,                \"Insufficient bidding amount.\"            );            erc20Token.transferFrom(msg.sender, address(this), amount);            if (_auction.buyer == true) {                erc20Token.transfer(                    _auction.highestBidder,                    _auction.currentBid                );            }        }        _auction.currentBid = _auction.erc20Token == address(0)            ? msg.value            : amount;        Token.safeTransferFrom(Token.ownerOf(tokenID), address(this), tokenID);        _auction.buyer = true;        _auction.highestBidder = msg.sender;        auctions[_mintableToken][tokenID] = _auction;        emit Bid(            _mintableToken,            tokenID,            _auction.lastOwner,            _auction.highestBidder,            _auction.currentBid,            block.timestamp,            _auction.erc20Token        );    }"