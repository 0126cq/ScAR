"function _chargePrice(    uint256 marketItemId,    address buyer)  private returns (uint256) {    address payable seller = _items[marketItemId].seller;    uint256 priceAmount = _items[marketItemId].price;    address priceContract = _items[marketItemId].priceContract;    uint feePercent = _getValidRate(seller).feePercent;    uint256 feeAmount = feePercent * priceAmount / 100;    uint256 sellerAmount = priceAmount - feeAmount;    require(sellerAmount > 0, \"Invalid Seller Amount calculated!\");    if (priceContract == address(0))    {      require(msg.value >= priceAmount, \"Please submit the Price amount in order to complete the purchase\");      seller.transfer(sellerAmount);      if (_isBeneficiaryExists() && feeAmount > 0)        _beneficiary.recipient.transfer(feeAmount);    }    else    {      address marketplace = address(this);      IERC20 hostPriceContract = IERC20(priceContract);      uint256 priceAllowance = hostPriceContract.<mask0>;      require(priceAllowance >= priceAmount, \"Please allow Price amount of ERC-20 Token in order to complete purchase\");      hostPriceContract.safeTransferFrom(buyer, marketplace, priceAmount);      hostPriceContract.transfer(seller, sellerAmount);      if (_isBeneficiaryExists() && feeAmount > 0)        hostPriceContract.transfer(_beneficiary.recipient, feeAmount);    }    return feeAmount;  }"