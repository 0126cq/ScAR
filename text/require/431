"function checkWinner(uint256 _wagerId)        public        view        returns (address winner)    {        Wager memory wager = wagers[_wagerId];        require(wager.isFilled, \"Wager has not been filled\");        uint256 endTime = endTimes[_wagerId];        <mask0>;        AggregatorV2V3Interface feed = AggregatorV2V3Interface(oracles[wager.wagerToken]);        uint80 roundId = getRoundId(feed, endTime);        if (roundId == 0) {            return address(0);        }        (int256 price,,) = _getHistoricalPrice(roundId, wager.wagerToken);         if (wager.above && price >= wager.wagerPrice) {            return wager.userA;        } else if (!wager.above && price <= wager.wagerPrice) {            return wager.userA;        } else if (wager.above && price < wager.wagerPrice) {            return wager.userB;        } else if (!wager.above && price > wager.wagerPrice) {            return wager.userB;        }        revert();    }"