"function getDividendsOwed(address account, uint256 until)    public    view    returns (uint256)    {        uint256 lastDividendsClaimed = lastDisbursalIndex[account];        if (until == lastDividendsClaimed) return 0;        uint256 originalBalance = _balances[account];        if (originalBalance == 0) return 0;        require(until > lastDividendsClaimed, \"Dividends already claimed.\");        <mask0>;        uint256 packedIndexStop = until / 4;        uint256 relIndexStop = until % 4;        uint256 packedIndexNext = lastDividendsClaimed / 4;        uint256 relIndexNext = lastDividendsClaimed % 4;        uint256 compoundBalance = originalBalance;        uint256 packedPoints = packedDisbursals[packedIndexNext];        while (packedIndexNext < packedIndexStop) {            for (; relIndexNext < 4; relIndexNext++) {                compoundBalance = compoundBalance.add(                    compoundBalance.mul(packedPoints.read64(relIndexNext)).div(                        POINT_MULTIPLIER                    )                );            }            relIndexNext = 0;            packedPoints = packedDisbursals[++packedIndexNext];        }        while (relIndexNext < relIndexStop) {            compoundBalance = compoundBalance.add(                compoundBalance.mul(packedPoints.read64(relIndexNext++)).div(                    POINT_MULTIPLIER                )            );        }        return compoundBalance.sub(originalBalance);    }"