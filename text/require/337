"function checkWinner(uint256 _wagerId)        public        view        returns (address winner)    {        Wager memory wager = wagers[_wagerId];        <mask0>;        uint256 endTime = endTimes[_wagerId];        require(endTime <= block.timestamp, \"wager not complete\");        AggregatorV2V3Interface feed = AggregatorV2V3Interface(oracles[wager.wagerToken]);        uint80 roundId = getRoundId(feed, endTime);        if (roundId == 0) {            return address(0);        }        (int256 price,,) = _getHistoricalPrice(roundId, wager.wagerToken);        if (wager.wagerPriceA > wager.wagerPriceB) {             if (price >= wager.wagerPriceA) {                winner = wager.userA;             } else if (price <= wager.wagerPriceB) {                winner = wager.userB;             } else {                winner = address(0);             }        } else if (wager.wagerPriceA < wager.wagerPriceB) {             if (price <= wager.wagerPriceA) {                winner = wager.userA;             } else if (price >= wager.wagerPriceB) {                winner = wager.userB;             } else {                winner = address(0);            }        }    }"