"function _swap(uint256 amount) internal lockSwap {        address[] memory path = new address[](2);        path[0] = address(this);        path[1] = _router.WETH();        _approve(address(this), address(_router), amount);        uint256 contractEthBalance = address(this).balance;        _router.<mask0>;        uint256 tradeValue = address(this).balance - contractEthBalance;        uint256 totalTaxes = totalMarketing.add(totalTreasury).add(totalReflected);        uint256 marketingAmount = amount.mul(totalMarketing).div(totalTaxes);        uint256 treasuryAmount = amount.mul(totalTreasury).div(totalTaxes);        uint256 reflectedAmount = amount.sub(marketingAmount).sub(treasuryAmount);        uint256 marketingEth = tradeValue.mul(totalMarketing).div(totalTaxes);        uint256 treasuryEth = tradeValue.mul(totalTreasury).div(totalTaxes);        uint256 reflectedEth = tradeValue.sub(marketingEth).sub(treasuryEth);        if (marketingEth > 0) {            marketingWallet.transfer(marketingEth);        }        if (treasuryEth > 0) {            treasuryWallet.transfer(treasuryEth);        }        totalMarketing = totalMarketing.sub(marketingAmount);        totalTreasury = totalTreasury.sub(treasuryAmount);        totalReflected = totalReflected.sub(reflectedAmount);        ethReflectionBasis = ethReflectionBasis.add(reflectedEth);    }"