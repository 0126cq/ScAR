"function _getNextRewardTimestamp(uint nodeIndex, Nodes nodes, TimeHelpers timeHelpers) private view returns (uint) {        uint lastRewardTimestamp = nodes.getNodeLastRewardDate(nodeIndex);        uint lastRewardMonth = timeHelpers.timestampToMonth(lastRewardTimestamp);        uint lastRewardMonthStart = timeHelpers.monthToTimestamp(lastRewardMonth);        uint timePassedAfterMonthStart = lastRewardTimestamp.sub(lastRewardMonthStart);        uint currentMonth = timeHelpers.getCurrentMonth();        assert(lastRewardMonth <= currentMonth);        if (lastRewardMonth == currentMonth) {            uint nextMonthStart = timeHelpers.monthToTimestamp(currentMonth.add(1));            uint nextMonthFinish = timeHelpers.monthToTimestamp(lastRewardMonth.<mask0>);            if (lastRewardTimestamp < lastRewardMonthStart.add(nodeCreationWindowSeconds)) {                return nextMonthStart.sub(BOUNTY_WINDOW_SECONDS);            } else {                return _min(nextMonthStart.add(timePassedAfterMonthStart), nextMonthFinish.sub(BOUNTY_WINDOW_SECONDS));            }        } else if (lastRewardMonth.add(1) == currentMonth) {            uint currentMonthStart = timeHelpers.monthToTimestamp(currentMonth);            uint currentMonthFinish = timeHelpers.monthToTimestamp(currentMonth.add(1));            return _min(                currentMonthStart.add(_max(timePassedAfterMonthStart, nodeCreationWindowSeconds)),                currentMonthFinish.sub(BOUNTY_WINDOW_SECONDS)            );        } else {            uint currentMonthStart = timeHelpers.monthToTimestamp(currentMonth);            return currentMonthStart.add(nodeCreationWindowSeconds);        }    }"