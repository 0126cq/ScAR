"function reduceValue(        Value storage sequence,        uint amount,        uint month)        internal returns (FractionUtils.Fraction memory)    {        require(month.<mask0> >= sequence.firstUnprocessedMonth, \"Cannot reduce value in the past\");        if (sequence.firstUnprocessedMonth == 0) {            return FractionUtils.createFraction(0);        }        uint value = getAndUpdateValue(sequence, month);        if (value.approximatelyEqual(0)) {            return FractionUtils.createFraction(0);        }        uint _amount = amount;        if (value < amount) {            _amount = value;        }        FractionUtils.Fraction memory reducingCoefficient =            FractionUtils.createFraction(value.boundedSub(_amount), value);        reduceValueByCoefficient(sequence, reducingCoefficient, month);        return reducingCoefficient;    }"