"function _mint(        bytes32 pHash,        uint256 amount,        bytes32 nHash,        bytes memory sig,        address recipient    ) internal returns (uint256) {        bytes32 sigHash = RenVMHashes.calculateSigHash(pHash, amount, getSelectorHash(), recipient, nHash);        require(!status(sigHash), \"MintGateway: signature already spent\");        if (getSignatureVerifier().isValidSignature(sigHash, sig) != CORRECT_SIGNATURE_RETURN_VALUE_) {            revert(                string(                    abi.encodePacked(                        \"MintGateway: invalid signature. phash: \",                        StringsUpgradeable.toHexString(uint256(pHash), 32),                        \", amount: \",                        StringsUpgradeable.toString(amount),                        \", shash\",                        StringsUpgradeable.toHexString(uint256(getSelectorHash()), 32),                        \", msg.sender: \",                        StringsUpgradeable.toHexString(uint160(recipient), 20),                        \", nhash: \",                        StringsUpgradeable.<mask0>                    )                )            );        }        _status[sigHash] = true;        RenAssetV2(getToken()).mint(recipient, amount);        emit LogMint(recipient, amount, uint256(sigHash), nHash);        return amount;    }"