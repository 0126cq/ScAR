"function buildRequiredLootList(uint256 tokenId) internal view returns (string memory result, uint256 nextLineY) {        string[64] memory parts;        uint256 partCounter = 0;        nextLineY = 120;        uint256 difficulty = getDifficulty(tokenId);        for(uint256 loot = 0; loot < difficulty; loot++) {            parts[partCounter++] = string(abi.encodePacked('</text><text x=\"10\" y=\"', Strings.toString(nextLineY) ,'\" class=\"base\">'));            uint256 requiredLootIdx = getRequiredLootIdx(tokenId, loot);            uint256 variants = getRequiredLootIdxMultiplicity(tokenId, requiredLootIdx);            for(uint256 variantIdx = 0; variantIdx < variants; variantIdx++) {                parts[partCounter++] = getRequiredLoot(tokenId, requiredLootIdx, variantIdx);                if(variantIdx + 1 < variants) {                    if(variantIdx == 1) {                        nextLineY += 20;                        parts[partCounter++] = string(abi.encodePacked(',</text><text x=\"10\" y=\"', Strings.<mask0> ,'\" class=\"base\">or '));                    } else {                        parts[partCounter++] = ', or ';                    }                }            }            nextLineY += 20;        }        for(uint256 assemblyPart = 0; assemblyPart < partCounter; assemblyPart++) {            result = string(abi.encodePacked(result, parts[assemblyPart]));        }    }"