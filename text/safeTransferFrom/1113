"function depositToPool(        address _poolAddress,        address _token,        uint256 _amount,        uint256 _expectedMinimumReceived,        bytes memory convertData    ) public payable {        IHolyPoolV2 holyPool = IHolyPoolV2(_poolAddress);        IERC20 poolToken = IERC20(holyPool.getBaseAsset());        if (address(poolToken) == _token) {            if (depositFee == 0) {                IERC20(_token).safeTransferFrom(                    msg.sender,                    _poolAddress,                    _amount                );                holyPool.depositOnBehalfDirect(msg.sender, _amount);                return;            }            IERC20(_token).<mask0>;            resetAllowanceIfNeeded(poolToken, _poolAddress, _amount);            uint256 feeAmount = _amount.mul(depositFee).div(1e18);            holyPool.depositOnBehalf(msg.sender, _amount.sub(feeAmount));            return;        }        if (_token != ETH_TOKEN_ADDRESS) {            IERC20(_token).safeTransferFrom(                msg.sender,                address(exchangeProxyContract),                _amount            );        }        if (depositFee > 0) {            uint256 amountReceived =                IHolyWingV2(address(exchangeProxyContract)).executeSwapDirect{value: msg.value}(                    address(this),                    _token,                    address(poolToken),                    _amount,                    exchangeFee,                    convertData                );            require(                amountReceived >= _expectedMinimumReceived,                \"minimum swap amount not met\"            );            uint256 feeAmount = amountReceived.mul(depositFee).div(1e18);            amountReceived = amountReceived.sub(feeAmount);            resetAllowanceIfNeeded(poolToken, _poolAddress, _amount);            holyPool.depositOnBehalf(msg.sender, amountReceived);        } else {            uint256 amountReceived =                IHolyWingV2(address(exchangeProxyContract)).executeSwapDirect{value: msg.value}(                    _poolAddress,                    _token,                    address(poolToken),                    _amount,                    exchangeFee,                    convertData                );            require(                amountReceived >= _expectedMinimumReceived,                \"minimum swap amount not met\"            );            holyPool.depositOnBehalfDirect(msg.sender, amountReceived);        }    }"