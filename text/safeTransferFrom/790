"function settleEmergencyShutdown()        external        isEmergencyShutdown()        fees()        nonReentrant()        returns (FixedPoint.Unsigned memory amountWithdrawn)    {        if (emergencyShutdownPrice.isEqual(FixedPoint.fromUnscaledUint(0))) {            emergencyShutdownPrice = _getOracleEmergencyShutdownPrice();        }        FixedPoint.Unsigned memory tokensToRedeem = FixedPoint.Unsigned(tokenCurrency.balanceOf(msg.sender));        FixedPoint.Unsigned memory totalRedeemableCollateral =            _getFundingRateAppliedTokenDebt(tokensToRedeem).mul(emergencyShutdownPrice);        PositionData storage positionData = positions[msg.sender];        if (_getFeeAdjustedCollateral(positionData.rawCollateral).isGreaterThan(0)) {            FixedPoint.Unsigned memory tokenDebtValueInCollateral =                _getFundingRateAppliedTokenDebt(positionData.tokensOutstanding).mul(emergencyShutdownPrice);            FixedPoint.Unsigned memory positionCollateral = _getFeeAdjustedCollateral(positionData.rawCollateral);            FixedPoint.Unsigned memory positionRedeemableCollateral =                tokenDebtValueInCollateral.isLessThan(positionCollateral)                    ? positionCollateral.sub(tokenDebtValueInCollateral)                    : FixedPoint.Unsigned(0);            totalRedeemableCollateral = totalRedeemableCollateral.add(positionRedeemableCollateral);            delete positions[msg.sender];            emit EndedSponsorPosition(msg.sender);        }        FixedPoint.Unsigned memory payout =            FixedPoint.min(_getFeeAdjustedCollateral(rawTotalPositionCollateral), totalRedeemableCollateral);        amountWithdrawn = _removeCollateral(rawTotalPositionCollateral, payout);        totalTokensOutstanding = totalTokensOutstanding.sub(tokensToRedeem);        emit SettleEmergencyShutdown(msg.sender, amountWithdrawn.rawValue, tokensToRedeem.rawValue);        collateralCurrency.safeTransfer(msg.sender, amountWithdrawn.rawValue);        tokenCurrency.<mask0>;        tokenCurrency.burn(tokensToRedeem.rawValue);    }"