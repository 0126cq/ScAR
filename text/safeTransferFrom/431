"function _stakeLocked(        address staker_address,        address source_address,        uint256 liquidity,        uint256 secs,        uint256 start_timestamp    ) internal updateRewardAndBalance(staker_address, true) {        require(stakingPaused == false || valid_migrators[msg.sender] == true, \"Staking paused or in migration\");        require(greylist[staker_address] == false, \"Address has been greylisted\");        require(secs >= lock_time_min, \"Minimum stake time not met\");        require(secs <= lock_time_for_max_multiplier,\"Trying to lock for too long\");        TransferHelper.<mask0>;        uint256 lock_multiplier = lockMultiplier(secs);        bytes32 kek_id = keccak256(abi.encodePacked(staker_address, start_timestamp, liquidity, _locked_liquidity[staker_address]));        lockedStakes[staker_address].push(LockedStake(            kek_id,            start_timestamp,            liquidity,            start_timestamp + secs,            lock_multiplier        ));        _total_liquidity_locked += liquidity;        _locked_liquidity[staker_address] += liquidity;        _updateRewardAndBalance(staker_address, false);        emit StakeLocked(staker_address, liquidity, secs, kek_id, source_address);    }"