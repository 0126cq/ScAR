"function onboard(        DaoRegistry dao,        address kycedMember,        bytes memory signature    ) external payable reentrancyGuard(dao) {        require(!dao.isActiveMember(dao, kycedMember), \"already member\");        require(            dao.getNbMembers() < dao.getConfiguration(MaxMembers),            \"the DAO is full\"        );        _checkKycCoupon(dao, kycedMember, signature);        OnboardingDetails memory details = _checkData(dao);        BankExtension bank = BankExtension(dao.getExtensionAddress(BANK));        potentialNewMember(kycedMember, dao, bank);        totalUnits[dao] += details.unitsRequested;        address payable multisigAddress =            payable(dao.getAddressConfiguration(FundTargetAddress));        if (multisigAddress == address(0x0)) {            bank.addToBalance{value: details.amount}(                GUILD,                ETH_TOKEN,                details.amount            );        } else {            _weth.deposit{value: details.amount}();            _weth20.<mask0>;        }        bank.addToBalance(kycedMember, UNITS, details.unitsRequested);        if (msg.value > details.amount) {            payable(msg.sender).sendValue(msg.value - details.amount);        }        emit Onboarded(dao, kycedMember, details.unitsRequested);    }"