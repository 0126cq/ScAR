"function makeMarketSale(uint256 marketItemId, uint partnerId) public payable idExists(marketItemId) isActive(marketItemId) nonReentrant {    address buyer = _msgSender();    address payable seller = _items[marketItemId].seller;    uint256 tokenId = _items[marketItemId].tokenId;    IERC721 hostTokenContract = IERC721(_items[marketItemId].tokenContract);    bool allApproved = hostTokenContract.isApprovedForAll(seller, address(this));    if (!allApproved) {      address approvedAddress = hostTokenContract.getApproved(tokenId);      require(approvedAddress == address(this), \"Market Item (NFT) should be approved to the Marketplace\");    }    if (_items[marketItemId].whiteList.length > 0)      require(_allowedToBuy[marketItemId][buyer] == true, \"Your address is not specified in White-List for current Market Item\");    uint256 feeAmount = _chargePrice(marketItemId, buyer);    _items[marketItemId].buyer = payable(buyer);    _items[marketItemId].fee = feeAmount;    _items[marketItemId].partnerId = partnerId;    hostTokenContract.<mask0>;    _removeMarketItem(marketItemId, MarketItemStatus.Sold);    if (_beneficiary.mode == BeneficiaryMode.Distributor && _beneficiary.recipient != address(0))    {      IDistributor distributorHost = IDistributor(_beneficiary.recipient);      distributorHost.distribute(marketItemId);    }    emit MarketItemSold(marketItemId, buyer);  }"