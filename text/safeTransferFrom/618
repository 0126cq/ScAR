"function deposit(uint _amount, address _input, uint _min_mint_amount, bool _isStake) external override checkContract {        require(_amount > 0, \"!_amount\");        uint _pool = balance();        uint _before = token3CRV.balanceOf(address(this));        if (_input == address(token3CRV)) {            token3CRV.<mask0>;        } else if (converter.convert_rate(_input, address(token3CRV), _amount) > 0) {            IERC20(_input).safeTransferFrom(msg.sender, address(converter), _amount);            converter.convert(_input, address(token3CRV), _amount);        }        uint _after = token3CRV.balanceOf(address(this));        require(totalDepositCap == 0 || _after <= totalDepositCap, \">totalDepositCap\");        _amount = _after.sub(_before);         require(_amount >= _min_mint_amount, \"slippage\");        if (_amount > 0) {            if (!_isStake) {                _deposit(msg.sender, _pool, _amount);            } else {                uint _shares = _deposit(address(this), _pool, _amount);                _stakeShares(_shares);            }        }    }"