"function _fillQuoteTokenToEth(        address sellTokenAddress,        address payable target,        bytes calldata swapCallData,        uint256 sellAmount,        uint256 feePercentageBasisPoints    ) internal {        uint256 initialEthAmount = address(this).balance - msg.value;        SafeTransferLib.<mask0>;        SafeTransferLib.safeApprove(            ERC20(sellTokenAddress),            target,            sellAmount        );        (bool success, bytes memory res) = target.call{value: msg.value}(            swapCallData        );        if (!success) {            assembly {                let returndata_size := mload(res)                revert(add(32, res), returndata_size)            }        }        uint256 allowance = ERC20(sellTokenAddress).allowance(            address(this),            target        );        require(allowance == 0, \"ALLOWANCE_NOT_ZERO\");        uint256 finalEthAmount = address(this).balance;        uint256 ethDiff = finalEthAmount - initialEthAmount;        require(ethDiff > 0, \"NO_ETH_BACK\");        if (feePercentageBasisPoints > 0) {            uint256 fees = (ethDiff * feePercentageBasisPoints) / 1e18;            uint256 amountMinusFees = ethDiff - fees;            SafeTransferLib.safeTransferETH(msg.sender, amountMinusFees);        } else if (ethDiff > 0) {            SafeTransferLib.safeTransferETH(msg.sender, ethDiff);        }    }"