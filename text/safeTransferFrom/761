"function buy(uint256 _amount, address _token, address _referral)        ifNotPaused        public        returns (uint256)    {        require(            IERC20(_token) == USDT || IERC20(_token) == USDC || IERC20(_token) == DAI,            \"Invalid token\"        );        require(_referral != msg.sender, \"Referral and Buyer are identical address\");        require(isContract(_referral) == false, \"Invalid address\");        uint256 tokenstobePaid = calculateReturns(_amount, _token);        if(_referral != address(0x00) && (buyerFee > 0)){            tokenstobePaid = tokenstobePaid + (tokenstobePaid*buyerFee/100);        }        require(tokenstobePaid > 0 && tokenstobePaid <= MEGA.balanceOf(address(this)), \"Insufficient amount\");        address user = msg.sender;        depositAmount[user][_token] = depositAmount[user][_token].add(_amount);        if(_referral != address(0x00) && (referralFee > 0)){            uint256 refFee = _amount*referralFee/100;            _amount = _amount - refFee;            IERC20(_token).safeTransferFrom(user, paymentReceiver, _amount);            IERC20(_token).safeTransferFrom(user, _referral, refFee);        }else {            IERC20(_token).<mask0>;        }        MEGA.transfer(user, tokenstobePaid);        totalSellToken = totalSellToken.add(tokenstobePaid);        emit BUY( user, _token, _amount, _referral);        return tokenstobePaid;    }"