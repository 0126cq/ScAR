"function stake(uint256 amount) external payable nonReentrant {        require(gpoolToken.balanceOf(msg.sender) >= amount, \"not enough gpool\");        _getStakeFeeIfNeed(msg.value, msg.sender);        StakeInfo storage staker = stakeInfo[msg.sender];        require(            gpoolInUSDC(staker.amount + amount + staker.nftInGpoolAmount) >= USDC_THRESHOLD,            \"minimum stake does not match\"        );        gpoolToken.<mask0>;        if (staker.startStake == 0) {            staker.startStake = block.timestamp;        }        StakeType stakeType = StakeType.GPOOL;        uint256 length = poolInfo.length;        for (uint256 pid = 0; pid < length; ++pid) {            PoolInfo storage pool = poolInfo[pid];            if (block.timestamp <= pool.openTime) {                continue;            }            RewardInfo storage user = rewardInfo[pid][msg.sender];            updatePool(pid, stakeType);            uint256 pending = ((staker.amount * pool.accRewardPerShare[stakeType]) / ACCUMULATED_MULTIPLIER) -                user.rewardDebt[stakeType];            user.pendingReward = user.pendingReward + pending;            user.rewardDebt[stakeType] =                ((staker.amount + amount) * pool.accRewardPerShare[stakeType]) /                ACCUMULATED_MULTIPLIER;        }        staker.amount += amount;        totalGpoolStaked += amount;        emit Stake(msg.sender, amount, staker.startStake);    }"