"function mintMultiERC721Capsule(        address _capsule,        address[] calldata _tokens,        uint256[] calldata _ids,        string calldata _uri,        address _receiver    ) external payable nonReentrant onlyCollectionMinter(_capsule) checkStatus {        uint256 tokensLength = _tokens.length;        uint256 idsLength = _ids.length;        require(tokensLength > 0 && tokensLength <= TOKEN_TYPE_LIMIT, Errors.INVALID_TOKEN_ARRAY_LENGTH);        require(idsLength > 0 && idsLength <= TOKEN_TYPE_LIMIT, Errors.INVALID_IDS_ARRAY_LENGTH);        require(tokensLength == idsLength, Errors.LENGTH_MISMATCH);        uint256 _capsuleId = ICapsule(_capsule).counter();        for (uint256 i; i < tokensLength; i++) {            address _token = _tokens[i];            uint256 _id = _ids[i];            require(_token != address(0), Errors.INVALID_TOKEN_ADDRESS);            IERC721(_token).<mask0>;            require(IERC721(_token).ownerOf(_id) == address(this), Errors.NOT_NFT_OWNER);        }        _multiERC721Capsule[_capsule][_capsuleId].tokenAddresses = _tokens;        _multiERC721Capsule[_capsule][_capsuleId].ids = _ids;        ICapsule(_capsule).mint(_receiver, _uri);        emit MultiERC721CapsuleMinted(_receiver, _capsule, _tokens, _ids, _uri);    }"