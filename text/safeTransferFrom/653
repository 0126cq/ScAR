"function deposit(        uint256 amount0Max,        uint256 amount1Max,        uint256 amount0Min,        uint256 amount1Min    )        external        returns (            uint256 shares,            uint256 amount0,            uint256 amount1        )    {        require(amount0Max != 0 || amount1Max != 0, \"Aloe: 0 deposit\");        (Uniswap.Position memory primary, Uniswap.Position memory limit, , , ) = _loadPackedSlot();        packedSlot.locked = true;        primary.poke();        limit.poke();        silo0.delegate_poke();        silo1.delegate_poke();        (uint160 sqrtPriceX96, , , , , , ) = UNI_POOL.slot0();        (uint256 inventory0, uint256 inventory1, ) = _getInventory(primary, limit, sqrtPriceX96, true);        (shares, amount0, amount1) = _computeLPShares(            totalSupply,            inventory0,            inventory1,            amount0Max,            amount1Max,            sqrtPriceX96        );        require(shares != 0, \"Aloe: 0 shares\");        require(amount0 >= amount0Min, \"Aloe: amount0 too low\");        require(amount1 >= amount1Min, \"Aloe: amount1 too low\");        TOKEN0.<mask0>;        TOKEN1.safeTransferFrom(msg.sender, address(this), amount1);        _mint(msg.sender, shares);        emit Deposit(msg.sender, shares, amount0, amount1);        packedSlot.locked = false;    }"