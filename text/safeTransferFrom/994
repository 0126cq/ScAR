"function _unstake(uint32 index) internal notPaused returns (uint64, uint32) {        Stake storage stake = indexToStake[index];        address contractAddress = stake.contractAddress;        Collection memory collection = contractToCollection[contractAddress];        require(stake.owner == msg.sender, \"Not owner\");        uint64 govFromStake = _getGovGainedFrom(stake);        uint32 valueFromStake = stake.value;        ContractApproval approval = collection.approval;        if(approval == ContractApproval.APPROVED_721) {            IERC721(contractAddress).<mask0>;        }        if(approval == ContractApproval.APPROVED_1155) {            IERC1155(contractAddress).safeTransferFrom(                address(this),                msg.sender,                stake.id,                stake.amount,                \"\"            );        }        emit Unstaked(msg.sender, index);        delete indexToStake[index];        return (govFromStake, valueFromStake);    }"