"function listItemAuction(    address _tokenAddress,    uint256 _reservePrice,    uint256 _numberOfShares,    string memory _name  ) payable external returns (uint256) {    require(msg.value >= listingFee);    uint256 fraktionsIndex = FraktalNFT(_tokenAddress).fraktionsIndex();    require(      FraktalNFT(_tokenAddress).balanceOf(address(this), 0) == 1    );    require(!FraktalNFT(_tokenAddress).sold());    require(      FraktalNFT(_tokenAddress).balanceOf(_msgSender(), fraktionsIndex) >=        _numberOfShares    );    require(_reservePrice>0);    uint256 sellerNonce = auctionNonce[_msgSender()]++;    uint256 _endTime = block.timestamp + (10 days);    auctionListings[_tokenAddress][_msgSender()][sellerNonce] = AuctionListing({      tokenAddress: _tokenAddress,      reservePrice: _reservePrice,      numberOfShares: _numberOfShares,      auctionEndTime: _endTime,      name: _name    });    FraktalNFT(_tokenAddress).<mask0>;    emit AuctionItemListed(_msgSender(), _tokenAddress, _reservePrice, _numberOfShares, _endTime, sellerNonce, _name);    return auctionNonce[_msgSender()];  }"