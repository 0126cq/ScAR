"function swapExactTempleForFrax(        uint amountIn,        uint amountOutMin,        address to,        uint deadline    ) external virtual ensure(deadline) returns (uint) {        require(allowed[msg.sender] || openAccessEnabled, \"Router isn't open access and caller isn't in the allowed list\");        (bool priceBelowIV, bool willCrossDynamicThreshold, uint amountOut) = swapExactTempleForFraxQuote(amountIn);        if (priceBelowIV) {            require(amountOut >= amountOutMin, 'TempleFraxAMMRouter: INSUFFICIENT_OUTPUT_AMOUNT');            templeToken.burnFrom(msg.sender, amountIn);            SafeERC20.safeTransfer(fraxToken, to, amountOut);        } else {            if (willCrossDynamicThreshold && priceCrossedBelowDynamicThresholdBlock == 0) {                priceCrossedBelowDynamicThresholdBlock = block.number;                emit PriceCrossedBelowDynamicThreshold(priceCrossedBelowDynamicThresholdBlock);            }            require(amountOut >= amountOutMin, 'TempleFraxAMMRouter: INSUFFICIENT_OUTPUT_AMOUNT');            SafeERC20.<mask0>;            pair.swap(0, amountOut, to, new bytes(0));        }        return amountOut;    }"