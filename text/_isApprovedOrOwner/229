"function _withdraw(address owner, uint256 trancheID)        internal        returns (uint256 amount)    {        Tranche storage t = tranches[trancheID];        uint256 lockupPeriod =            t.hedged                ? lockupPeriodForHedgedTranches                : lockupPeriodForUnhedgedTranches;        require(t.state == TrancheState.Open);        require(<mask0>);        require(            block.timestamp > t.creationTimestamp + lockupPeriod,            \"Pool Error: The withdrawal is locked up\"        );        t.state = TrancheState.Closed;        if (t.hedged) {            amount = (t.share * hedgedBalance) / hedgedShare;            hedgedShare -= t.share;            hedgedBalance -= amount;        } else {            amount = (t.share * unhedgedBalance) / unhedgedShare;            unhedgedShare -= t.share;            unhedgedBalance -= amount;        }        token.safeTransfer(owner, amount);    }"