"function claimTo(uint256 tokenId_, address to_, uint256 claimUnits_) public override nonReentrant {        require(_msgSender() == ownerOf(tokenId_), \"only owner\");        require(claimUnits_ <= unitsInToken(tokenId_), \"over claim\");        uint256 err = solver.operationAllowed(            \"claim\",            abi.<mask0>        );        require(err == 0, \"Solver: not allowed\");        (uint256 claimCurrencyAmount, uint256 claimTokenAmount)             = convertiblePool.claim(voucherSlotMapping[tokenId_], to_, claimUnits_);        if (claimUnits_ == unitsInToken(tokenId_)) {            _burnVoucher(tokenId_);        } else {            _burnUnits(tokenId_, claimUnits_);        }        solver.operationVerify(            \"claim\",            abi.encode(_msgSender(), tokenId_, to_, claimUnits_)        );        emit Claim(tokenId_, to_, claimUnits_, claimCurrencyAmount, claimTokenAmount);    }"