"function mintPunk(uint16 numberOfTokens, uint256 timestamp, bytes memory signature) public payable {        if (whitelistIsActive && signature.length > 0) {            address signer = ECDSA.recover(keccak256(abi.<mask0>), signature);            require(signer == msg.sender, \"Not authorized to mint\");        }        require(saleIsActive, \"Sale must be active to mint\");        require(totalSupply().add(numberOfTokens) <= MAX_PUNKS, \"Purchase would exceed max supply of Skatepunks\");        if (whitelistIsActive) {            require((purchases[msg.sender] + numberOfTokens) <= maxPunksPurchaseWhitelist, \"You will exceed the maximum tokens allowed per address for the private sale\");            require(punkPriceWhitelist.mul(numberOfTokens) <= msg.value, \"Ether value sent is not correct\");        } else {            require((purchases[msg.sender] + numberOfTokens) <= maxPunksPurchasePublic, \"You will exceed the maximum tokens allowed per address for the public sale\");            require(punkPricePublic.mul(numberOfTokens) <= msg.value, \"Ether value sent is not correct\");        }        purchases[msg.sender] = purchases[msg.sender] + numberOfTokens;        for (uint256 i = 0; i < numberOfTokens; i++) {            uint256 mintIndex = totalSupply();            if (totalSupply() < MAX_PUNKS) {                _safeMint(msg.sender, mintIndex);            }        }        if (startingIndexBlock == 0 && (totalSupply() == MAX_PUNKS || block.timestamp >= REVEAL_TIMESTAMP)) {            startingIndexBlock = block.number;        }    }"