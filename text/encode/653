"function permit(address owner, address spender, uint rawAmount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {        uint96 amount;        if (rawAmount == uint(-1)) {            amount = uint96(-1);        } else {            amount = safe96(rawAmount, \"WSG::permit: amount exceeds 96 bits\");        }        bytes32 domainSeparator = keccak256(abi.<mask0>);        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline));        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));        address signatory = ecrecover(digest, v, r, s);        require(signatory != address(0), \"WSG::permit: invalid signature\");        require(signatory == owner, \"WSG::permit: unauthorized\");        require(now <= deadline, \"WSG::permit: signature expired\");        allowances[owner][spender] = amount;        emit Approval(owner, spender, amount);    }"