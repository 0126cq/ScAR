"function flashLoan(uint loanAmount, address[] memory _targets, bytes[] memory _payloads, uint _percentage_to_miner) external onlyExecutor {    Actions.ActionArgs[] memory operations = new Actions.ActionArgs[](3);    operations[0] = Actions.ActionArgs({      actionType: Actions.ActionType.Withdraw,      accountId: 0,      amount: Types.AssetAmount({        sign: false,        denomination: Types.AssetDenomination.Wei,        ref: Types.AssetReference.Delta,        value: loanAmount       }),      primaryMarketId: 0,       secondaryMarketId: 0,      otherAddress: address(this),      otherAccountId: 0,      data: \"\"    });    operations[1] = Actions.ActionArgs({      actionType: Actions.ActionType.Call,      accountId: 0,      amount: Types.AssetAmount({        sign: false,        denomination: Types.AssetDenomination.Wei,        ref: Types.AssetReference.Delta,        value: 0      }),      primaryMarketId: 0,      secondaryMarketId: 0,      otherAddress: address(this),      otherAccountId: 0,      data: abi.<mask0>    });    operations[2] = Actions.ActionArgs({      actionType: Actions.ActionType.Deposit,      accountId: 0,      amount: Types.AssetAmount({          sign: true,          denomination: Types.AssetDenomination.Wei,          ref: Types.AssetReference.Delta,          value: loanAmount + FLASH_LOAN_FEE       }),      primaryMarketId: 0,       secondaryMarketId: 0,      otherAddress: address(this),      otherAccountId: 0,      data: \"\"    });    Account.Info[] memory accountInfos = new Account.Info[](1);    accountInfos[0] = Account.Info({owner: address(this), number: 1});    soloMargin.operate(accountInfos, operations);  }"