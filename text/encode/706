"function buyReserveAndTransfer(uint256 mintAmount, uint256 offPegPerc)        internal    {        UniswapPair pair = UniswapPair(uniswap_pair);        YUANTokenInterface yuan = YUANTokenInterface(yuanAddress);        (uint256 token0Reserves, uint256 token1Reserves, ) = pair.getReserves();        uint256 excess = yuan.balanceOf(reservesContracts[0]);        uint256 tokens_to_max_slippage = uniswapMaxSlippage(            token0Reserves,            token1Reserves,            offPegPerc        );        UniVars memory uniVars = UniVars({            yuansToUni: tokens_to_max_slippage,             amountFromReserves: excess,             mintToReserves: 0         });        if (isToken0) {            if (tokens_to_max_slippage > mintAmount.add(excess)) {                uint256 buyTokens = getAmountOut(                    mintAmount + excess,                    token0Reserves,                    token1Reserves                );                uniVars.yuansToUni = mintAmount + excess;                uniVars.amountFromReserves = excess;                pair.swap(0, buyTokens, address(this), abi.encode(uniVars));            } else {                if (tokens_to_max_slippage > excess) {                    uint256 buyTokens = getAmountOut(                        tokens_to_max_slippage,                        token0Reserves,                        token1Reserves                    );                    uniVars.mintToReserves = mintAmount.sub(                        (tokens_to_max_slippage - excess)                    );                    pair.swap(0, buyTokens, address(this), abi.encode(uniVars));                } else {                    uint256 buyTokens = getAmountOut(                        tokens_to_max_slippage,                        token0Reserves,                        token1Reserves                    );                    uniVars.amountFromReserves = tokens_to_max_slippage;                    uniVars.mintToReserves = mintAmount;                    pair.swap(0, buyTokens, address(this), abi.encode(uniVars));                }            }        } else {            if (tokens_to_max_slippage > mintAmount.add(excess)) {                uint256 buyTokens = getAmountOut(                    mintAmount + excess,                    token1Reserves,                    token0Reserves                );                uniVars.yuansToUni = mintAmount + excess;                uniVars.amountFromReserves = excess;                pair.swap(buyTokens, 0, address(this), abi.encode(uniVars));            } else {                if (tokens_to_max_slippage > excess) {                    uint256 buyTokens = getAmountOut(                        tokens_to_max_slippage,                        token1Reserves,                        token0Reserves                    );                    uniVars.mintToReserves = mintAmount.sub(                        (tokens_to_max_slippage - excess)                    );                    pair.swap(buyTokens, 0, address(this), abi.encode(uniVars));                } else {                    uint256 buyTokens = getAmountOut(                        tokens_to_max_slippage,                        token1Reserves,                        token0Reserves                    );                    uniVars.amountFromReserves = tokens_to_max_slippage;                    uniVars.mintToReserves = mintAmount;                    pair.swap(buyTokens, 0, address(this), abi.<mask0>);                }            }        }    }"