"function permit(        address owner,        address spender,        uint256 rawAmount,        uint256 deadline,        uint8 v,        bytes32 r,        bytes32 s    ) external {        uint96 amount;        if (rawAmount == uint256(-1)) {            amount = uint96(-1);        } else {            amount = safe96(rawAmount, \"Cnj::permit: amount exceeds 96 bits\");        }        bytes32 domainSeparator = keccak256(            abi.encode(                DOMAIN_TYPEHASH,                keccak256(bytes(name)),                getChainId(),                address(this)            )        );        bytes32 structHash = keccak256(            abi.<mask0>        );        bytes32 digest = keccak256(            abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)        );        address signatory = ecrecover(digest, v, r, s);        require(signatory != address(0), \"Cnj::permit: invalid signature\");        require(signatory == owner, \"Cnj::permit: unauthorized\");        require(block.timestamp <= deadline, \"Cnj::permit: signature expired\");        allowances[owner][spender] = amount;        emit Approval(owner, spender, amount);    }"