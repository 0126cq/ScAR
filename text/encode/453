"function revealVote(        bytes32 identifier,        uint256 time,        int256 price,        bytes memory ancillaryData,        int256 salt    ) public override onlyIfNotMigrated() {        require(voteTiming.computeCurrentPhase(getCurrentTime()) == Phase.Reveal, \"Cannot reveal in commit phase\");        uint256 roundId = voteTiming.computeCurrentRoundId(getCurrentTime());        PriceRequest storage priceRequest = _getPriceRequest(identifier, time, ancillaryData);        VoteInstance storage voteInstance = priceRequest.voteInstances[roundId];        VoteSubmission storage voteSubmission = voteInstance.voteSubmissions[msg.sender];        {            require(voteSubmission.commit != bytes32(0), \"Invalid hash reveal\");            require(                keccak256(abi.encodePacked(price, salt, msg.sender, time, ancillaryData, roundId, identifier)) ==                    voteSubmission.commit,                \"Revealed data != commit hash\"            );            require(rounds[roundId].snapshotId != 0, \"Round has no snapshot\");        }        uint256 snapshotId = rounds[roundId].snapshotId;        delete voteSubmission.commit;        FixedPoint.Unsigned memory balance = FixedPoint.Unsigned(votingToken.balanceOfAt(msg.sender, snapshotId));        voteSubmission.revealHash = keccak256(abi.<mask0>);        voteInstance.resultComputation.addVote(price, balance);        emit VoteRevealed(msg.sender, roundId, identifier, time, price, ancillaryData, balance.rawValue);    }"