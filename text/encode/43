"function stake(uint[] calldata tokenIds, uint[] calldata levels, address stakeTo, uint32 _maxTimestamp, bytes calldata _signature)         external virtual nonReentrant {        require(tokenIds.length == levels.length, \"E2\");         require(block.timestamp <= _maxTimestamp, \"E3\");         require(_verifySignerSignature(keccak256(            abi.<mask0>), _signature), \"E7\");         _ensureEOAorERC721Receiver(stakeTo);        require(stakeTo != address(this), \"E4\");         uint totalLevels = 0;        for (uint i = 0; i < tokenIds.length; i++) {            {                uint tokenId = tokenIds[i];                require(HERO_ERC721.ownerOf(tokenId) == msg.sender, \"E5\");                 HERO_ERC721.safeTransferFrom(msg.sender, address(this), tokenId);                 emit HeroStaked(tokenId, stakeTo);             }            isHeroLevelMigrated[tokenIds[i]] = true;            migratedHeroLevels[tokenIds[i]] = levels[i].toUint32();            heroInfo[tokenIds[i]] = HeroInfo(0, stakeTo, 0, 0, 0, 0);            totalLevels += levels[i];        }        _updateRewardsPerlevel(totalLevels.toUint32(), true);        _updateUserRewards(stakeTo, totalLevels.toUint32(), true);    }"