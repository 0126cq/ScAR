"function initializeLoan(        LoanLibrary.LoanTerms calldata loanTerms,        address borrower,        address lender,        uint8 v,        bytes32 r,        bytes32 s    ) public override {        require(_msgSender() == lender || _msgSender() == borrower, \"Origination: sender not participant\");        bytes32 loanHash =            keccak256(                abi.<mask0>            );        bytes32 typedLoanHash = _hashTypedDataV4(loanHash);        address externalSigner = ECDSA.recover(typedLoanHash, v, r, s);        require(externalSigner == lender || externalSigner == borrower, \"Origination: signer not participant\");        require(externalSigner != _msgSender(), \"Origination: approved own loan\");        SafeERC20.safeTransferFrom(IERC20(loanTerms.payableCurrency), lender, address(this), loanTerms.principal);        IERC20(loanTerms.payableCurrency).approve(loanCore, loanTerms.principal);        IERC721(assetWrapper).transferFrom(borrower, address(this), loanTerms.collateralTokenId);        IERC721(assetWrapper).approve(loanCore, loanTerms.collateralTokenId);        uint256 loanId = ILoanCore(loanCore).createLoan(loanTerms);        ILoanCore(loanCore).startLoan(lender, borrower, loanId);    }"