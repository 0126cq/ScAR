"function createMappingToken(uint mainChainId, address token, uint nonce, string memory name, string memory symbol, uint8 decimals, uint cap, Signature[] memory signatures) public payable returns (address mappingToken) {        _chargeFee(config[_feeCreate_]);        require(token == address(0) || config[_onlyDeployer_] == 0 || token == calcContract(_msgSender(), nonce), 'only deployer');        require(signatures.length >= config[_minSignatures_], 'too few signatures');        for(uint i=0; i<signatures.length; i++) {            for(uint j=0; j<i; j++)                require(signatures[i].signatory != signatures[j].signatory, 'repetitive signatory');            bytes32 hash = keccak256(abi.<mask0>);            hash = keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, hash));            address signatory = ecrecover(hash, signatures[i].v, signatures[i].r, signatures[i].s);            require(signatory != address(0), \"invalid signature\");            require(signatory == signatures[i].signatory, \"unauthorized\");            _decreaseAuthCount(signatures[i].signatory, 1);            emit AuthorizeCreate(mainChainId, token, _msgSender(), name, symbol, decimals, cap, signatory);        }        return _createMappingToken(mainChainId, token, _msgSender(), name, symbol, decimals, cap);    }"