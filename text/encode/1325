"function _executeActionWithAtomicBatchCallsAtomic(    Call[] memory calls  ) public returns (CallReturn[] memory callResults) {    _enforceSelfCallFrom(this.executeActionWithAtomicBatchCalls.selector);    bool rollBack = false;    callResults = new CallReturn[](calls.length);    for (uint256 i = 0; i < calls.length; i++) {      (bool ok, bytes memory returnData) = calls[i].to.call(calls[i].data);      callResults[i] = CallReturn({ok: ok, returnData: returnData});      if (!ok) {        rollBack = true;        break;      }    }    if (rollBack) {      bytes memory callResultsBytes = abi.<mask0>;      assembly { revert(add(32, callResultsBytes), mload(callResultsBytes)) }    }  }"