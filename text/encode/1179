"function build(        uint16 field,        uint16 hardware,        uint16 frame,        uint24[4] memory colors,        uint256 tokenId    )        external        payable        override        onlyTokenOwner(tokenId)        shieldNotBuilt(tokenId)        validHardware(tokenId, hardware)        validColors(field, colors)    {        bytes32 shieldHash = keccak256(abi.<mask0>);        require(!shieldHashes[shieldHash], 'Shields: unique Shield already built');        shieldHashes[shieldHash] = true;        Shield memory shield = Shield({            built: true,            field: field,            hardware: hardware,            frame: frame,            colors: colors,            shieldBadge: calculateShieldBadge(tokenId)        });        _shields[tokenId] = shield;        {            uint256 fee;            ICategories.FieldCategories fieldType = emblemWeaver                .fieldGenerator()                .generateField(shield.field, shield.colors)                .fieldType;            ICategories.HardwareCategories hardwareType = emblemWeaver                .hardwareGenerator()                .generateHardware(shield.hardware)                .hardwareType;            uint256 frameFee = emblemWeaver.frameGenerator().generateFrame(shield.frame).fee;            if (fieldType == ICategories.FieldCategories.MYTHIC) {                fee += mythicFee;            }            if (hardwareType == ICategories.HardwareCategories.SPECIAL) {                fee += specialFee;            }            fee += frameFee;            require(msg.value == fee, 'Shields: invalid building fee');        }        emit ShieldBuilt(tokenId, field, hardware, frame, colors, calculateShieldBadge(tokenId));    }"