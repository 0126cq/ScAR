"function proveBalanceOfAtBlockchain(\t\tstring memory _id,\t\taddress _user,\t\tuint256 _balance,\t\tbytes32[] memory _proof,\t\tuint256 _nodeIndex\t) public returns (bool) {\t\tbytes32 idHash = keccak256(bytes(_id));\t\trequire(\t\t\tblockchainStates[idHash].length > 0,\t\t\t\"no state found for given _id\"\t\t);\t\tbytes32 stateHash = blockchainStates[idHash][\t\t\tblockchainStates[idHash].length - 1\t\t].stateHash;\t\trequire(\t\t\tstateHashBalances[stateHash][_user] == 0,\t\t\t\"stateHash already proved\"\t\t);\t\tbytes32 leafHash = keccak256(abi.<mask0>);\t\tbool isProofValid = checkProofOrdered(\t\t\t_proof,\t\t\tstateHash,\t\t\tleafHash,\t\t\t_nodeIndex\t\t);\t\trequire(isProofValid, \"invalid merkle proof\");\t\tif (idHash == ROOT_STATE) {\t\t\t_mint(_user, _balance);\t\t}\t\tstateHashBalances[stateHash][_user] = _balance;\t\temit StateHashProof(_id, _user, _balance);\t\treturn true;\t}"