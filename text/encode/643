"function registerMapping(uint mainChainId, address token, uint[] memory chainIds, address[] memory mappingTokenMappeds_, Signature[] memory signatures) virtual external payable {        _chargeFee();        uint N = signatures.length;        require(N >= getConfig(_minSignatures_), 'too few signatures');        for(uint i=0; i<N; i++) {            for(uint j=0; j<i; j++)                require(signatures[i].signatory != signatures[j].signatory, 'repetitive signatory');            bytes32 structHash = keccak256(abi.<mask0>);            bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash));            address signatory = ecrecover(digest, signatures[i].v, signatures[i].r, signatures[i].s);            require(signatory != address(0), \"invalid signature\");            require(signatory == signatures[i].signatory, \"unauthorized\");            _decreaseAuthCount(signatures[i].signatory, 1);            emit AuthorizeRegister(mainChainId, token, signatory);        }        _registerMapping(mainChainId, token, chainIds, mappingTokenMappeds_);    }"