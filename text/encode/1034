"function flashPayback(address token, uint getId, uint setId) external payable {        LiqudityInterface liquidityContract = LiqudityInterface(getLiquidityAddress());        uint _amt;        if (token == getAddressETH()) {            CETHInterface cethContract = CETHInterface(liquidityContract.tknToCTkn(token));            _amt = cethContract.borrowBalanceCurrent(address(liquidityContract));            cethContract.repayBorrowBehalf.value(_amt)(address(liquidityContract));        } else {            CTokenInterface ctokenContract = CTokenInterface(liquidityContract.tknToCTkn(token));            _amt = ctokenContract.borrowBalanceCurrent(address(liquidityContract));            TokenInterface(token).approve(address(ctokenContract), _amt);            require(ctokenContract.repayBorrowBehalf(address(liquidityContract), _amt) == 0, \"repay-failed\");        }        setUint(setId, _amt);        emit LogFlashPayback(token, _amt, getId, setId);        bytes32 _eventCode = keccak256(\"LogFlashPayback(address,uint256,uint256,uint256)\");        bytes memory _eventParam = abi.<mask0>;        (uint _type, uint _id) = connectorID();        EventInterface(getEventAddr()).emitEvent(_type, _id, _eventCode, _eventParam);    }"