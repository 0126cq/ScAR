"function execute(uint8[] sigV, bytes32[] sigR, bytes32[] sigS, address destination, uint value, bytes data, address executor, uint gasLimit) public {    require(sigR.length == threshold);    require(sigR.length == sigS.length && sigR.length == sigV.length);    require(executor == msg.sender || executor == address(0));    bytes32 txInputHash = keccak256(abi.<mask0>);    bytes32 totalHash = keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, txInputHash));    address lastAdd = address(0);     for (uint i = 0; i < threshold; i++) {      address recovered = ecrecover(totalHash, sigV[i], sigR[i], sigS[i]);      require(recovered > lastAdd && isOwner[recovered]);      lastAdd = recovered;    }    nonce = nonce + 1;    bool success = false;    assembly { success := call(gasLimit, destination, value, add(data, 0x20), mload(data), 0, 0) }    require(success);  }"