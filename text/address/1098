"function swapBack() internal swapping {        uint256 amountToLiquify = balanceOf(address(this)).mul(liquidityFee).div(totalFee).div(2);        uint256 amountToSwap = balanceOf(address(this)).sub(amountToLiquify);        address[] memory path = new <mask0>;        path[0] = address(this);        path[1] = WETH;        uint256 balanceBefore = address(this).balance;        router.swapExactTokensForETHSupportingFeeOnTransferTokens(            amountToSwap,            0,            path,            address(this),            block.timestamp+360        );        uint256 amountETH = address(this).balance.sub(balanceBefore);        uint256 totalETHFee = totalFee.sub(liquidityFee.div(2));        uint256 amountETHLiquidity = amountETH.mul(liquidityFee).div(totalETHFee).div(2);        uint256 amountETHTeam = amountETH.mul(teamFee).div(totalETHFee);        uint256 amountETHMarketing = amountETH.mul(marketingFee).div(totalETHFee);    \tpayable(marketingFeeReceiver).transfer(amountETHMarketing);    \tpayable(teamFeeReceiver).transfer(amountETHTeam);        if(amountToLiquify > 0){            router.addLiquidityETH{value: amountETHLiquidity}(                address(this),                amountToLiquify,                0,                0,                autoLiquidityReceiver,                block.timestamp+360            );            emit AutoLiquify(amountETHLiquidity, amountToLiquify);        }    }"