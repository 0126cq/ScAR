"function figureOutPath(address _from, address _to, uint256 _amount) public view returns (bool useSushi, address[] memory swapPath){        address[] memory path;        address[] memory sushipath;        if (_to == mmToken && buybackEnabled == true) {            if (_from == usdcBuyback){                path = new address[](2);                path[0] = _from;                path[1] = _to;            }else if (_from == weth){                path = new address[](2);                path[0] = _from;                path[1] = _to;                sushipath = new address[](2);                sushipath[0] = _from;                sushipath[1] = _to;            }else if(_from == crxBuyback){                sushipath = new address[](3);                sushipath[0] = _from;                sushipath[1] = weth;                sushipath[2] = _to;                path = new <mask0>;                path[0] = _from;                path[1] = weth;                path[2] = _to;            }else{                path = new address[](3);                path[0] = _from;                path[1] = usdcBuyback;                path[2] = _to;            }        } else{            if (_from == weth || _to == weth) {                path = new address[](2);                path[0] = _from;                path[1] = _to;            }else{                path = new address[](3);                path[0] = _from;                path[1] = weth;                path[2] = _to;            }        }        uint256 _sushiOut = sushipath.length > 0? UniswapRouterV2(sushiRouter).getAmountsOut(_amount, sushipath)[sushipath.length - 1] : 0;        uint256 _uniOut = sushipath.length > 0? UniswapRouterV2(univ2Router2).getAmountsOut(_amount, path)[path.length - 1] : 1;        bool useSushi = _sushiOut > _uniOut? true : false;\t\t        address[] memory swapPath = useSushi ? sushipath : path;        return (useSushi, swapPath);    }"