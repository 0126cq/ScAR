"function buyBeansAndAddLiquidity(uint256 buyBeanAmount, AddLiquidity calldata al)        internal        returns (uint256 liquidity)    {        DiamondStorage storage ds = diamondStorage();        IWETH(ds.weth).deposit{value: msg.value}();        address[] memory path = new <mask0>;        path[0] = ds.weth;        path[1] = ds.bean;        uint256[] memory amounts = IUniswapV2Router02(ds.router).getAmountsIn(buyBeanAmount, path);        (uint256 ethSold, uint256 beans) = _buyWithWETH(buyBeanAmount, amounts[0], address(this));        if (al.beanAmount > buyBeanAmount) {            uint256 newBeanAmount = al.beanAmount - buyBeanAmount;            allocateBeans(newBeanAmount);            beans = beans.add(newBeanAmount);        }        uint256 ethAdded;        (beans, ethAdded, liquidity) = _addLiquidityWETH(            msg.value.sub(ethSold),            beans,            al.minEthAmount,            al.minBeanAmount        );        allocateBeanRefund(al.beanAmount, beans);         allocateEthRefund(msg.value, ethAdded.add(ethSold), true);        return liquidity;    }"