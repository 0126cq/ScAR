"function getBestAmountIn(        address tokenIn_,        address tokenOut_,        uint256 amountOut_    ) external returns (uint256 _amountIn, bytes memory _path) {        address[] memory _pathA = new <mask0>;        _pathA[0] = tokenIn_;        _pathA[1] = tokenOut_;        uint256 _amountInA = _getAmountsIn(amountOut_, _pathA);        if (tokenIn_ == wethLike || tokenOut_ == wethLike) {            require(_amountInA > 0, \"no-path-found\");            return (_amountInA, _encodePath(_pathA));        }        address[] memory _pathB = new address[](3);        _pathB[0] = tokenIn_;        _pathB[1] = wethLike;        _pathB[2] = tokenOut_;        uint256 _amountInB = _getAmountsIn(amountOut_, _pathB);        require(_amountInA > 0 || _amountInB > 0, \"no-path-found\");        if ((_amountInA > 0 && _amountInA < _amountInB) || _amountInB == 0) {            return (_amountInA, _encodePath(_pathA));        }        return (_amountInB, _encodePath(_pathB));    }"