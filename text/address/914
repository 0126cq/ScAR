"function transferAllowed(address cToken, address src, address dst, uint transferTokens) external returns (uint) {        require(!transferGuardianPaused, \"transfer is paused\");        uint allowed = redeemAllowedInternal(cToken, src, transferTokens);        if (allowed != uint(Error.NO_ERROR)) {            return allowed;        }        if (liquidityMining != address(0)) {            address[] memory accounts = new <mask0>;            accounts[0] = src;            accounts[1] = dst;            LiquidityMiningInterface(liquidityMining).updateSupplyIndex(cToken, accounts);        }        return uint(Error.NO_ERROR);    }"