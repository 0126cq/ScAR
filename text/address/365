"function handleFee(uint feeAmount, uint _amountOutMin_tokenFeeBuyBack, uint deadline) private {        uint buyBackFeeAmount = feeAmount.mul(FEE_PERCENT_TO_BUYBACK_X_100).div(ONE_HUNDRED_X_100);        uint remainingFeeAmount = feeAmount.sub(buyBackFeeAmount);        distributeTokenDivs(remainingFeeAmount);        IERC20(TRUSTED_DEPOSIT_TOKEN_ADDRESS).safeApprove(address(uniswapRouterV2), 0);        IERC20(TRUSTED_DEPOSIT_TOKEN_ADDRESS).safeApprove(address(uniswapRouterV2), buyBackFeeAmount);        uint oldPlatformTokenBalance = IERC20(TRUSTED_PLATFORM_TOKEN_ADDRESS).balanceOf(address(this));        address[] memory path = new <mask0>;        path[0] = TRUSTED_DEPOSIT_TOKEN_ADDRESS;        path[1] = TRUSTED_PLATFORM_TOKEN_ADDRESS;        uniswapRouterV2.swapExactTokensForTokens(buyBackFeeAmount, _amountOutMin_tokenFeeBuyBack, path, address(this), deadline);        uint newPlatformTokenBalance = IERC20(TRUSTED_PLATFORM_TOKEN_ADDRESS).balanceOf(address(this));        uint platformTokensReceived = newPlatformTokenBalance.sub(oldPlatformTokenBalance);        IERC20(TRUSTED_PLATFORM_TOKEN_ADDRESS).safeTransfer(BURN_ADDRESS, platformTokensReceived);    }"