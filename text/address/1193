"function retrieveAssetManagerTokens(address[] _assetAddress)  external  nonReentrant  returns (bool) {    require(_assetAddress.length <= 42);    uint[] memory payoutAmounts = new uint[](_assetAddress.length);    address[] memory tokenAddresses = new <mask0>;    uint8 numEntries;    for(uint8 i = 0; i < _assetAddress.length; i++){      require(msg.sender == database.addressStorage(keccak256(abi.encodePacked(\"asset.manager\", _assetAddress[i]))) );      DToken token = DToken(_assetAddress[i]);      require(address(token) != address(0));      uint tokensOwed = token.getAmountOwed(address(this));      if(tokensOwed > 0){        DToken fundingToken = DToken(token.getERC20());        uint balanceBefore = fundingToken.balanceOf(address(this));        uint8 tokenIndex = containsAddress(tokenAddresses, address(token));        if (tokenIndex < _assetAddress.length) {  payoutAmounts[tokenIndex] = payoutAmounts[tokenIndex].add(tokensOwed); }        else {          tokenAddresses[numEntries] = address(fundingToken);          payoutAmounts[numEntries] = tokensOwed;          numEntries++;        }        require(token.withdraw());        require(fundingToken.balanceOf(address(this)).sub(tokensOwed) == balanceBefore);      }    }    for(i = 0; i < numEntries; i++){      require(ERC20(tokenAddresses[i]).transfer(msg.sender, payoutAmounts[i]));    }    return true;  }"