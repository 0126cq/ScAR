"function upliftX6ReferrerSecondLevel(address userAddress, address referrerAddress,address giver ,uint8 level) private {        if (users[referrerAddress].x6Matrix[level].secondLevelReferrals.length < 4) {            return sendTokens(referrerAddress, giver, 2, level);        }        address[] memory x6 = users[users[referrerAddress].x6Matrix[level].currentReferrer].x6Matrix[level].firstLevelReferrals;        if (x6.length == 2) {            if (x6[0] == referrerAddress ||                x6[1] == referrerAddress) {                users[users[referrerAddress].x6Matrix[level].currentReferrer].x6Matrix[level].closedPart = referrerAddress;            } else if (x6.length == 1) {                if (x6[0] == referrerAddress) {                    users[users[referrerAddress].x6Matrix[level].currentReferrer].x6Matrix[level].closedPart = referrerAddress;                }            }        }        users[referrerAddress].x6Matrix[level].firstLevelReferrals = new address[](0);        users[referrerAddress].x6Matrix[level].secondLevelReferrals = new <mask0>;        users[referrerAddress].x6Matrix[level].closedPart = address(0);        if (!users[referrerAddress].activeX6Levels[level+1] && level != FINAL_LEVEL) {            users[referrerAddress].x6Matrix[level].blocked = true;        }        users[referrerAddress].x6Matrix[level].refreshingCount++;        if (referrerAddress != owner) {            address userReferrerAddress = findUserX6Referrer(referrerAddress, level);            emit refresh(referrerAddress, userReferrerAddress, userAddress, 2, level);            upliftX6Referrer(referrerAddress, userReferrerAddress,giver, level);        } else {            emit refresh(owner, address(0), userAddress, 2, level);            sendTokens(owner, giver, 2, level);        }    }"