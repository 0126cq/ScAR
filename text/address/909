"function mintAllowed(address cToken, address minter, uint mintAmount) external returns (uint) {        require(!mintGuardianPaused[cToken], \"mint is paused\");        minter;        if (!isMarketListed(cToken)) {            return uint(Error.MARKET_NOT_LISTED);        }        uint supplyCap = supplyCaps[cToken];        if (supplyCap != 0) {            uint totalCash = CToken(cToken).getCash();            uint totalBorrows = CToken(cToken).totalBorrows();            uint totalReserves = CToken(cToken).totalReserves();            (MathError mathErr, uint totalSupplies) = addThenSubUInt(totalCash, totalBorrows, totalReserves);            require(mathErr == MathError.NO_ERROR, \"totalSupplies failed\");            uint nextTotalSupplies = add_(totalSupplies, mintAmount);            require(nextTotalSupplies < supplyCap, \"market supply cap reached\");        }        if (liquidityMining != address(0)) {            address[] memory accounts = new <mask0>;            accounts[0] = minter;            LiquidityMiningInterface(liquidityMining).updateSupplyIndex(cToken, accounts);        }        return uint(Error.NO_ERROR);    }"