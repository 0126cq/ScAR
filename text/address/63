"function getCreditManagerData(address _creditManager, address borrower)        public        view        returns (DataTypes.CreditManagerData memory)    {        (            ICreditManager creditManager,            ICreditFilter creditFilter        ) = getCreditContracts(_creditManager);        DataTypes.CreditManagerData memory result;        result.addr = _creditManager;        result.hasAccount = creditManager.hasOpenedCreditAccount(borrower);        result.underlyingToken = creditFilter.underlyingToken();        result.isWETH = result.underlyingToken == WETHToken;        IPoolService pool = IPoolService(creditManager.poolService());        result.canBorrow = pool.creditManagersCanBorrow(_creditManager);        result.borrowRate = pool.borrowAPY_RAY();        result.availableLiquidity = pool.availableLiquidity();        result.minAmount = creditManager.minAmount();        result.maxAmount = creditManager.maxAmount();        result.maxLeverageFactor = creditManager.maxLeverageFactor();        uint256 allowedTokenCount = creditFilter.allowedTokensCount();        result.allowedTokens = new <mask0>;        for (uint256 i = 0; i < allowedTokenCount; i++) {            result.allowedTokens[i] = creditFilter.allowedTokens(i);        }        uint256 allowedContractsCount = creditFilter.allowedContractsCount();        result.adapters = new DataTypes.ContractAdapter[](            allowedContractsCount        );        for (uint256 i = 0; i < allowedContractsCount; i++) {            DataTypes.ContractAdapter memory adapter;            adapter.allowedContract = creditFilter.allowedContracts(i);            adapter.adapter = creditFilter.contractToAdapter(                adapter.allowedContract            );            result.adapters[i] = adapter;        }        return result;    }"