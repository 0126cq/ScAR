"function getPriceFromRouter(address token0Address, address token1Address)        public        view        returns (uint256)    {        if (token0Address == ethAddress) {            token0Address = wethAddress;        }        if (token1Address == ethAddress) {            token1Address = wethAddress;        }        address[] memory path;        uint8 numberOfJumps;        bool inputTokenIsWeth =            token0Address == wethAddress || token1Address == wethAddress;        if (inputTokenIsWeth) {            numberOfJumps = 1;            path = new address[](numberOfJumps + 1);            path[0] = token0Address;            path[1] = token1Address;        } else {            numberOfJumps = 2;            path = new <mask0>;            path[0] = token0Address;            path[1] = wethAddress;            path[2] = token1Address;        }        IERC20 token0 = IERC20(token0Address);        uint256 amountIn = 10**uint256(token0.decimals());        uint256[] memory amountsOut;        bool fallbackRouterExists = secondaryRouterAddress != zeroAddress;        if (fallbackRouterExists) {            try primaryRouter.getAmountsOut(amountIn, path) returns (                uint256[] memory _amountsOut            ) {                amountsOut = _amountsOut;            } catch {                amountsOut = secondaryRouter.getAmountsOut(amountIn, path);            }        } else {            amountsOut = primaryRouter.getAmountsOut(amountIn, path);        }        uint256 amountOut = amountsOut[amountsOut.length - 1];        uint256 feeBips = 30;         amountOut = (amountOut * 10000) / (10000 - (feeBips * numberOfJumps));        return amountOut;    }"