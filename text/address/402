"function getBestStrategyWithdraw(        address _token,        uint256 _amount    ) public view returns (        address[] memory _strategies,        uint256[] memory _amounts    ) {        uint256 k = tokenStrategies[_token].strategies.length;        _strategies = new <mask0>;        _amounts = new uint256[](k);        for (uint i = 0; i < k; i++) {            address _strategy = tokenStrategies[_token].strategies[i];            _strategies[i] = _strategy;            uint256 _balance = IStrategy(_strategy).balanceOf();            if (_balance < _amount) {                _amounts[i] = _balance;                _amount = _amount.sub(_balance);            } else {                _amounts[i] = _amount;                break;            }        }    }"