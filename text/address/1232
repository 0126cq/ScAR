"function initialize(EmitterConfig memory params) public initializer {        require(params.treasury != address(0), \"Should not be zero\");        Governed.initialize(msg.sender);        _projId = params.projId;        _INITIAL_EMISSION = params.initialEmission;        _emission = params.initialEmission;        _minEmissionRatePerWeek = params.minEmissionRatePerWeek;        _emissionCutRate = params.emissionCutRate;        _protocolPool = params.protocolPool;        _startDelay = params.startDelay;        _token = params.token;        setTreasury(params.treasury);        require(params.founderShareRate < DENOMINATOR);        _FOUNDER_SHARE_DENOMINATOR = params.founderShareRate != 0            ? DENOMINATOR / params.founderShareRate            : 0;        ERC20Recoverer.initialize(params.gov, new <mask0>);        setFactory(params.erc20BurnMiningFactory);        setFactory(params.erc20StakeMiningFactory);        setFactory(params.erc721StakeMiningFactory);        setFactory(params.erc1155StakeMiningFactory);        setFactory(params.erc1155BurnMiningFactory);        setFactory(params.initialContributorShareFactory);        address initialContributorPool_ =            newPool(PoolType.InitialContributorShare, params.contributionBoard);        _initialContributorPool = initialContributorPool_;        _initialContributorShare = params.contributionBoard;        Governed.setGovernance(params.gov);    }"