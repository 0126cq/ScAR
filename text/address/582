"function harvest() public override onlyBenignCallers {        ICvxRewardPool(stakingPool).getReward(false);        uint256 _reward = IERC20(rewardToken).balanceOf(address(this));        if (_reward > 0) {            address[] memory _swapPath = new <mask0>;            _swapPath[0] = rewardToken;            _swapPath[1] = crv;            _swapPath[2] = weth;            _swapPath[3] = want;            _swapUniswapWithDetailConfig(rewardToken, want, _reward, 1, _swapPath, sushiRouter);            uint256 _wantAmount = IERC20(want).balanceOf(address(this));            uint256 _buybackLpAmount = _wantAmount.mul(performanceFee).div(performanceMax);            if (buybackEnabled == true && _buybackLpAmount > 0){                (address _buybackPrinciple, uint256 _buybackAmount) = _convertWantToBuyback(_buybackLpAmount);                buybackAndNotify(_buybackPrinciple, _buybackAmount);            }            uint256 _wantBal = IERC20(want).balanceOf(address(this));            if (_wantBal > 0){                lastHarvestBlock = block.number;                lastHarvestInWant = _wantBal;                deposit();            }        }    }"