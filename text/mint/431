"function mint(        address _asset,        uint256 _amount,        uint256 _minimumOusdAmount    ) external whenNotCapitalPaused nonReentrant {        require(assets[_asset].isSupported, \"Asset is not supported\");        require(_amount > 0, \"Amount must be greater than 0\");        uint256 price = IOracle(priceProvider).price(_asset);        if (price > 1e8) {            price = 1e8;        }        uint256 assetDecimals = Helpers.getDecimals(_asset);        uint256 unitAdjustedDeposit = _amount.scaleBy(18, assetDecimals);        uint256 priceAdjustedDeposit = _amount.mulTruncateScale(            price.scaleBy(18, 8),             10**assetDecimals        );        if (_minimumOusdAmount > 0) {            require(                priceAdjustedDeposit >= _minimumOusdAmount,                \"Mint amount lower than minimum\"            );        }        emit Mint(msg.sender, priceAdjustedDeposit);        if (unitAdjustedDeposit >= rebaseThreshold && !rebasePaused) {            _rebase();        }        oUSD.<mask0>;        IERC20 asset = IERC20(_asset);        asset.safeTransferFrom(msg.sender, address(this), _amount);        if (unitAdjustedDeposit >= autoAllocateThreshold) {            _allocate();        }    }"