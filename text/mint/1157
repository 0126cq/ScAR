"function claimManyFromRiverAndFishingV2(uint16[] calldata tokenIds, bool unstake) external whenNotPaused _updateEarnings nonReentrant() {    require(!_msgSender().isContract(), \"Contracts are not allowed big man\");    require(tx.origin == _msgSender(), \"Only EOA\");    if (tx.origin != msg.sender) {        require(whitelistedContracts[msg.sender], \"You're not allowed to call this function\");    }    uint256  owed = 0;    for (uint i = 0; i < tokenIds.length; i++) {      uint16 tokenID = tokenIds[i];      if (tokenID > 10498) {        require(roar.ownerOf(tokenID) == address(this), \"Not Staked here yet.\");         owed +=  _regularclaim(tokenID,unstake);      } else {        if (genXRoar.ownerOf(tokenID) == address(genXStaking)) {          owed +=  _claimGenXReward(_msgSender(),tokenID);        } else {          require(genXRoar.ownerOf(tokenID) == address(this), \"AINT A PART OF THIS\");           owed +=  _regularclaim(tokenID,unstake);        }      }    }    if (owed == 0) return;    salmon.<mask0>;  }"