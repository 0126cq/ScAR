"function revealMint(MintCommit memory commit) internal {    uint16 minted = wndNFT.minted();    pendingMintAmt -= commit.amount;    uint16[] memory tokenIds = new uint16[](commit.amount);    uint16[] memory tokenIdsToStake = new uint16[](commit.amount);    uint256 seed = uint256(keccak256(abi.encode(commit.recipient, minted, commitIdStartTimeMints[_commitIdPendingMints])));    for (uint k = 0; k < commit.amount; k++) {      minted++;      seed = uint256(keccak256(abi.encode(seed, commit.recipient)));      address recipient = selectRecipient(seed, commit.recipient);      if(recipient != commit.recipient && alter.balanceOf(commit.recipient, TREASURE_CHEST) > 0) {        if(seed & 1 == 1) {          alter.safeTransferFrom(commit.recipient, recipient, TREASURE_CHEST, 1, \"\");          recipient = commit.recipient;        }      }      tokenIds[k] = minted;      if (!commit.stake || recipient != commit.recipient) {        wndNFT.mint(recipient, seed);      } else {        wndNFT.<mask0>;        tokenIdsToStake[k] = minted;      }    }    wndNFT.updateOriginAccess(tokenIds);    if(commit.stake && tokenIdsToStake[0] != 0) {      trainingGrounds.addManyToTowerAndFlight(commit.recipient, tokenIdsToStake);    }    pendingMintCommitsForAddr[commit.recipient] -= commit.amount;  }"