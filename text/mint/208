"function create(FixedPoint.Unsigned memory collateralAmount, FixedPoint.Unsigned memory numTokens)        public        notEmergencyShutdown()        fees()        nonReentrant()    {        PositionData storage positionData = positions[msg.sender];        require(            (_checkCollateralization(                _getFeeAdjustedCollateral(positionData.rawCollateral).add(collateralAmount),                positionData.tokensOutstanding.add(numTokens)            ) || _checkCollateralization(collateralAmount, numTokens)),            \"Insufficient collateral\"        );        require(positionData.withdrawalRequestPassTimestamp == 0);        if (positionData.tokensOutstanding.isEqual(0)) {            require(numTokens.isGreaterThanOrEqual(minSponsorTokens));            emit NewSponsor(msg.sender);        }        _incrementCollateralBalances(positionData, collateralAmount);        positionData.tokensOutstanding = positionData.tokensOutstanding.add(numTokens);        totalTokensOutstanding = totalTokensOutstanding.add(numTokens);        emit PositionCreated(msg.sender, collateralAmount.rawValue, numTokens.rawValue);        collateralCurrency.safeTransferFrom(msg.sender, address(this), collateralAmount.rawValue);        require(tokenCurrency.<mask0>);    }"