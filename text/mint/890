"function purchaseSafe(uint256 tokensToPurchase, uint256 maxPrice) internal returns(uint256 tokensBought_){        require(maxPrice >= 0);        uint256 currentPrice = getPurchasePrice(msg.value, tokensToPurchase);        require(currentPrice <= maxPrice);        uint256 tokensWuiAvailableByCurrentPrice = msg.value.mul(1e18).div(currentPrice);        if(tokensWuiAvailableByCurrentPrice > tokensToPurchase) {            tokensWuiAvailableByCurrentPrice = tokensToPurchase;        }        uint256 totalDealPrice = currentPrice.mul(tokensWuiAvailableByCurrentPrice).div(1e18);        require(msg.value >= tokensToPurchase.mul(maxPrice).div(1e18));        require(msg.value >= totalDealPrice);        feeBalance = feeBalance + totalDealPrice.div(9);        uint256 availableTokens = token.balanceOf(this);        if (availableTokens < tokensWuiAvailableByCurrentPrice) {            uint256 tokensToMint = tokensWuiAvailableByCurrentPrice.sub(availableTokens);            token.<mask0>;        }        token.safeTransfer(msg.sender, tokensWuiAvailableByCurrentPrice);        if (totalDealPrice < msg.value) {            uint256 oddEthers = msg.value.sub(totalDealPrice);            if (oddEthers > 0) {                require(oddEthers < msg.value);                emit TransferMoneyBack(msg.sender, oddEthers);                msg.sender.transfer(oddEthers);                trackOdd(oddEthers);            }        }        emit Purchase(msg.sender, tokensToPurchase, totalDealPrice);        trackPurchase(tokensWuiAvailableByCurrentPrice, totalDealPrice);        return tokensWuiAvailableByCurrentPrice;    }"