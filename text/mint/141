"function supplyUnderlying(uint256 underlyingAmount) external override nonReentrant returns (bool) {        SupplyUnderlyingLocalVars memory vars;        require(block.timestamp < fyToken.expirationTime(), \"ERR_BOND_MATURED\");        require(underlyingAmount > 0, \"ERR_SUPPLY_UNDERLYING_ZERO\");        require(fintroller.getSupplyUnderlyingAllowed(fyToken), \"ERR_SUPPLY_UNDERLYING_NOT_ALLOWED\");        (vars.mathErr, vars.newUnderlyingTotalSupply) = addUInt(totalUnderlyingSupply, underlyingAmount);        require(vars.mathErr == MathError.NO_ERROR, \"ERR_SUPPLY_UNDERLYING_MATH_ERROR\");        totalUnderlyingSupply = vars.newUnderlyingTotalSupply;        vars.underlyingPrecisionScalar = fyToken.underlyingPrecisionScalar();        if (vars.underlyingPrecisionScalar != 1) {            (vars.mathErr, vars.fyTokenAmount) = mulUInt(underlyingAmount, vars.underlyingPrecisionScalar);            require(vars.mathErr == MathError.NO_ERROR, \"ERR_SUPPLY_UNDERLYING_MATH_ERROR\");        } else {            vars.fyTokenAmount = underlyingAmount;        }        require(fyToken.<mask0>, \"ERR_SUPPLY_UNDERLYING_CALL_MINT\");        fyToken.underlying().safeTransferFrom(msg.sender, address(this), underlyingAmount);        emit SupplyUnderlying(msg.sender, underlyingAmount, vars.fyTokenAmount);        return true;    }"