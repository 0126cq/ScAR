"function createLoan(    address initiator,    address onBehalfOf,    address nftAsset,    uint256 nftTokenId,    address bNftAddress,    address reserveAsset,    uint256 amount,    uint256 borrowIndex  ) external override onlyLendPool returns (uint256) {    require(_nftToLoanIds[nftAsset][nftTokenId] == 0, Errors.LP_NFT_HAS_USED_AS_COLLATERAL);    uint256 amountScaled = amount.rayDiv(borrowIndex);    uint256 loanId = _loanIdTracker.current();    _loanIdTracker.increment();    _nftToLoanIds[nftAsset][nftTokenId] = loanId;    IERC721Upgradeable(nftAsset).safeTransferFrom(_msgSender(), address(this), nftTokenId);    IBNFT(bNftAddress).<mask0>;    DataTypes.LoanData storage loanData = _loans[loanId];    loanData.loanId = loanId;    loanData.state = DataTypes.LoanState.Active;    loanData.borrower = onBehalfOf;    loanData.nftAsset = nftAsset;    loanData.nftTokenId = nftTokenId;    loanData.reserveAsset = reserveAsset;    loanData.scaledAmount = amountScaled;    _userNftCollateral[onBehalfOf][nftAsset] += 1;    _nftTotalCollateral[nftAsset] += 1;    emit LoanCreated(initiator, onBehalfOf, loanId, nftAsset, nftTokenId, reserveAsset, amount, borrowIndex);    return (loanId);  }"