"function repay(\t\taddress underwriter,\t\taddress to,\t\taddress asset,\t\tuint256 amount,\t\tuint256 actualAmount,\t\tuint256 nonce,\t\taddress module,\t\tbytes32 nHash,\t\tbytes memory data,\t\tbytes memory signature\t) public returns (uint256 amountOut) {\t\tuint256 _gasBefore = gasleft();\t\tLoanParams memory params;\t\t{\t\t\trequire(\t\t\t\tmodule == wbtc || module == usdc || module == ibbtc || module == renbtc || module == address(0x0),\t\t\t\t'!approved-module'\t\t\t);\t\t\tparams = LoanParams({\t\t\t\tto: to,\t\t\t\tasset: asset,\t\t\t\tamount: amount,\t\t\t\tnonce: nonce,\t\t\t\tmodule: module,\t\t\t\tunderwriter: underwriter,\t\t\t\tdata: data,\t\t\t\tminOut: 1,\t\t\t\t_mintAmount: 0,\t\t\t\tgasDiff: computeCalldataGasDiff()\t\t\t});\t\t\tif (data.length > 0) (params.minOut) = abi.decode(data, (uint256));\t\t}\t\tbytes32 digest = toTypedDataHash(params);\t\tparams._mintAmount = IGateway(btcGateway).<mask0>;\t\t{\t\t\tamountOut = module == wbtc ? toWBTC(deductMintFee(params._mintAmount, 1)) : module == address(0x0)\t\t\t\t? renBTCtoETH(params.minOut, deductMintFee(params._mintAmount, 1), to)\t\t\t\t: module == usdc\t\t\t\t? toUSDC(params.minOut, deductMintFee(params._mintAmount, 1), to)\t\t\t\t: module == ibbtc\t\t\t\t? toIBBTC(deductIBBTCMintFee(params._mintAmount, 3))\t\t\t\t: deductMintFee(params._mintAmount, 1);\t\t}\t\t{\t\t\tif (module != usdc && module != address(0x0)) IERC20(module).safeTransfer(to, amountOut);\t\t}\t\t{\t\t\ttx.origin.transfer(\t\t\t\tMath.min(\t\t\t\t\t_gasBefore.sub(gasleft()).add(REPAY_GAS_DIFF).add(params.gasDiff).mul(tx.gasprice).add(\t\t\t\t\t\tkeeperReward\t\t\t\t\t),\t\t\t\t\taddress(this).balance\t\t\t\t)\t\t\t);\t\t}\t}"