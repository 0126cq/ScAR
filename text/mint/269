"function _lock(        address to_,        uint256 amount_,        uint256 lockPeriod_    ) internal {        require(amount_ > 0, \"amount-is-zero\");        require(lockPeriod_ > MINIMUM_LOCK_PERIOD, \"lock-period-lt-minimum\");        require(lockPeriod_ <= MAXIMUM_LOCK_PERIOD, \"lock-period-gt-maximum\");        uint256 balanceBefore_ = VSP.balanceOf(address(this));        VSP.safeTransferFrom(_msgSender(), address(this), amount_);        uint256 _lockedAmount = VSP.balanceOf(address(this)) - balanceBefore_;        uint256 _boostedAmount = (_lockedAmount * lockPeriod_ * MAXIMUM_BOOST) / MAXIMUM_LOCK_PERIOD;        locked[to_] += _lockedAmount;        boosted[to_] += _boostedAmount;        totalLocked += _lockedAmount;        totalBoosted += _boostedAmount;        uint256 _tokenId = esVSP721.<mask0>;        positions[_tokenId] = LockPosition({            lockedAmount: _lockedAmount,            boostedAmount: _boostedAmount,            unlockTime: block.timestamp + lockPeriod_        });        emit VspLocked(_tokenId, to_, amount_, lockPeriod_);    }"