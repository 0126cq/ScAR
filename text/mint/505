"function swapBorrowRateMode(address asset, uint256 rateMode) external override whenNotPaused {    DataTypes.ReserveData storage reserve = _reserves[asset];    (uint256 stableDebt, uint256 variableDebt) = Helpers.getUserCurrentDebt(msg.sender, reserve);    DataTypes.InterestRateMode interestRateMode = DataTypes.InterestRateMode(rateMode);    ValidationLogic.validateSwapRateMode(      reserve,      _usersConfig[msg.sender],      stableDebt,      variableDebt,      interestRateMode    );    reserve.updateState();    if (interestRateMode == DataTypes.InterestRateMode.STABLE) {      IStableDebtToken(reserve.stableDebtTokenAddress).burn(msg.sender, stableDebt);      IVariableDebtToken(reserve.variableDebtTokenAddress).<mask0>;    } else {      IVariableDebtToken(reserve.variableDebtTokenAddress).burn(        msg.sender,        variableDebt,        reserve.variableBorrowIndex      );      IStableDebtToken(reserve.stableDebtTokenAddress).mint(        msg.sender,        msg.sender,        variableDebt,        reserve.currentStableBorrowRate      );    }    reserve.updateInterestRates(asset, reserve.aTokenAddress, 0, 0);    emit Swap(asset, msg.sender, rateMode);  }"