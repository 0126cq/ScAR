"function deposit(uint256 _amount) external {        require(!isVesting, \"Contract in vesting state\");        require(msg.sender == address(DAOVault), \"Only can call from Vault\");        token.safeTransferFrom(tx.origin, address(this), _amount);        uint256 _networkFeePercentage;        if (_amount < networkFeeTier2[0]) {             _networkFeePercentage = networkFeePercentage[0];        } else if (_amount >= networkFeeTier2[0] && _amount <= networkFeeTier2[1]) {             _networkFeePercentage = networkFeePercentage[1];        } else if (_amount > networkFeeTier2[1] && _amount < customNetworkFeeTier) {             _networkFeePercentage = networkFeePercentage[2];        } else {            _networkFeePercentage = customNetworkFeePercentage;        }        uint256 _fee = _amount.mul(_networkFeePercentage).div(DENOMINATOR);        _amount = _amount.sub(_fee);        uint256 error = cToken.<mask0>;        require(error == 0, \"Failed to lend into Compound\");        token.safeTransfer(treasuryWallet, _fee.mul(treasuryFee).div(DENOMINATOR));        token.safeTransfer(communityWallet, _fee.mul(communityFee).div(DENOMINATOR));        uint256 _shares;        _shares = totalSupply() == 0 ? _amount : _amount.mul(totalSupply()).div(pool);        pool = pool.add(_amount);        _mint(address(DAOVault), _shares);    }"