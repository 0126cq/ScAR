"function buyToken(uint catalogIndex, uint rangeIndex, uint internalTokenIndex) payable public {\t\toffer storage selectedProduct = offerCatalog[catalogIndex];\t\trequire(selectedProduct.contractAddress != address(0), \"Minting Marketplace: Invalid Product Selected!\");\t\trequire((selectedProduct.tokensAllowed.length > rangeIndex), \"Minting Marketplace: Invalid range!\");\t\trequire((selectedProduct.tokensAllowed[rangeIndex] > 0), \"Minting Marketplace: Cannot mint more tokens for this range!\");\t\trequire(selectedProduct.tokenRangeStart[rangeIndex] <= internalTokenIndex &&\t\t\t\tinternalTokenIndex <= selectedProduct.tokenRangeEnd[rangeIndex],\t\t\t\t\t\"Minting Marketplace: Token doesn't belong in that offer range!\");\t\trequire(msg.value >= selectedProduct.rangePrice[rangeIndex], \"Minting Marketplace: Insuficient Funds!\");\t\tcustomPayment storage aux = customPayments[catalogIndex];\t\tif (aux.recipients.length > 0) {\t\t\tfor (uint i = 0; i < aux.recipients.length; i++) {\t\t\t\tpayable(aux.recipients[i]).transfer((selectedProduct.rangePrice[rangeIndex] * aux.percentages[i]) / 100000);\t\t\t}\t\t} else {\t\t\taddress creatorAddress;\t\t\tuint256 amount;\t\t\tbool hasFees = IERC2981(selectedProduct.contractAddress).supportsInterface(type(IERC2981).interfaceId);\t\t\tif (hasFees) {\t\t\t\t(creatorAddress, amount) = IRAIR_ERC721(selectedProduct.contractAddress).royaltyInfo(0, selectedProduct.rangePrice[rangeIndex]);\t\t\t\tpayable(creatorAddress).transfer(selectedProduct.rangePrice[rangeIndex] * (100000 - (treasuryFee + nodeFee)) / 100000);\t\t\t}\t\t}\t\tpayable(msg.sender).transfer(msg.value - selectedProduct.rangePrice[rangeIndex]);\t\tpayable(treasury).transfer((selectedProduct.rangePrice[rangeIndex] * treasuryFee) / 100000);\t\tpayable(selectedProduct.nodeAddress).transfer((selectedProduct.rangePrice[rangeIndex] * nodeFee) / 100000);\t\tselectedProduct.tokensAllowed[rangeIndex]--;\t\tif (selectedProduct.tokensAllowed[rangeIndex] == 0) {\t\t\topenSales--;\t\t\temit SoldOut(selectedProduct.contractAddress, catalogIndex, rangeIndex);\t\t}\t\tIRAIR_ERC721(selectedProduct.contractAddress).<mask0>;\t\temit TokenMinted(msg.sender, selectedProduct.contractAddress, catalogIndex, rangeIndex, internalTokenIndex);\t}"