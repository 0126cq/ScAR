"function mintMultiple(        address[] calldata _assets,        uint256[] calldata _amounts    ) external whenNotDepositPaused {        require(_assets.length == _amounts.length, \"Parameter length mismatch\");        uint256 priceAdjustedTotal = 0;        uint256[] memory assetPrices = _getAssetPrices(false);        for (uint256 i = 0; i < allAssets.length; i++) {            for (uint256 j = 0; j < _assets.length; j++) {                if (_assets[j] == allAssets[i]) {                    if (_amounts[j] > 0) {                        uint256 assetDecimals = Helpers.getDecimals(                            allAssets[i]                        );                        uint256 price = assetPrices[i];                        if (price > 1e18) {                            price = 1e18;                        }                        priceAdjustedTotal += _amounts[j].mulTruncateScale(                            price,                            10**assetDecimals                        );                    }                }            }        }        if (priceAdjustedTotal > rebaseThreshold && !rebasePaused) {            rebase(true);        }        for (uint256 i = 0; i < _assets.length; i++) {            IERC20 asset = IERC20(_assets[i]);            asset.safeTransferFrom(msg.sender, address(this), _amounts[i]);        }        oUSD.<mask0>;        emit Mint(msg.sender, priceAdjustedTotal);        if (priceAdjustedTotal >= autoAllocateThreshold) {            allocate();        }    }"