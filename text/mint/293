"function stakeRewards(        address provider,        IDSToken[] memory poolTokens,        uint256 maxAmount,        IDSToken newPoolToken,        ILiquidityProtectionStats lpStats    ) private returns (uint256, uint256) {        uint256 amount = claimPendingRewards(provider, poolTokens, maxAmount, lpStats, false);        if (amount == 0) {            return (amount, 0);        }        ILiquidityProtection liquidityProtection = liquidityProtection();        address liquidityProtectionAddress = address(liquidityProtection);        uint256 allowance = _networkToken.allowance(address(this), liquidityProtectionAddress);        if (allowance < amount) {            if (allowance > 0) {                _networkToken.safeApprove(liquidityProtectionAddress, 0);            }            _networkToken.safeApprove(liquidityProtectionAddress, amount);        }        _networkTokenGovernance.<mask0>;        uint256 newId =            liquidityProtection.addLiquidityFor(provider, newPoolToken, IERC20(address(_networkToken)), amount);        emit RewardsStaked(provider, newPoolToken, amount, newId);        return (amount, newId);    }"