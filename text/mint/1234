"function mintPositions(    uint256 amount0,    uint256 amount1,    Position memory mainData,    Position memory rangeData0,    Position memory rangeData1  ) internal {    (uint160 sqrtRatioX96, ) = getSqrtRatioX96AndTick();    mainPosition.tickLower = mainData.tickLower;    mainPosition.tickUpper = mainData.tickUpper;    if (0 < amount0 || 0 < amount1) {      uint128 mL =        LiquidityAmounts.getLiquidityForAmounts(          sqrtRatioX96,          TickMath.getSqrtRatioAtTick(mainData.tickLower),          TickMath.getSqrtRatioAtTick(mainData.tickUpper),          amount0,          amount1        );      if (0 < mL) {        activePool.<mask0>;      }    }    amount0 = token0.balanceOf(address(this));    amount1 = token1.balanceOf(address(this));    uint128 rL;    Position memory rangeData;    if (0 < amount0 || 0 < amount1) {      uint128 rL0 =        LiquidityAmounts.getLiquidityForAmount0(          TickMath.getSqrtRatioAtTick(rangeData0.tickLower),          TickMath.getSqrtRatioAtTick(rangeData0.tickUpper),          amount0        );      uint128 rL1 =        LiquidityAmounts.getLiquidityForAmount1(          TickMath.getSqrtRatioAtTick(rangeData1.tickLower),          TickMath.getSqrtRatioAtTick(rangeData1.tickUpper),          amount1        );      if (rL1 < rL0) {        rL = rL0;        rangeData = rangeData0;      } else if (0 < rL1) {        rangeData = rangeData1;        rL = rL1;      }    } else {      rangeData = Position(0, 0);    }    rangePosition.tickLower = rangeData.tickLower;    rangePosition.tickUpper = rangeData.tickUpper;    if (0 < rL) {      activePool.mint(        address(this),        rangeData.tickLower,        rangeData.tickUpper,        rL,        ''      );    }  }"