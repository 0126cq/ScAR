"function distribute() public override nonReentrant {        uint256 weekNum =            block.timestamp.sub(_emissionStarted).div(EMISSION_PERIOD);        require(            weekNum > _emissionWeekNum,            \"Already minted or not started yet.\"        );        _emissionWeekNum = weekNum;        uint256 weightSum = _emissionWeight.sum;        uint256 prevSupply = IERC20(_token).totalSupply();        for (uint256 i = 0; i < _emissionWeight.pools.length; i++) {            require(i < _emissionWeight.pools.length, \"out of index\");            uint256 weighted =                _emissionWeight.weights[i].mul(_emission).div(weightSum);            _mintAndNotifyAllocation(_emissionWeight.pools[i], weighted);        }        IERC20Mintable(_token).mint(            msg.sender,            _emissionWeight.caller.mul(_emission).div(weightSum)        );        if (_treasury != address(0)) {            IERC20Mintable(_token).mint(                _treasury,                _emissionWeight.treasury.mul(_emission).div(weightSum)            );        }        if (_protocolPool != address(0)) {            IERC20Mintable(_token).<mask0>;            IDividendPool(_protocolPool).distribute(_token, 0);        }        if (_initialContributorPool != address(0)) {            _mintAndNotifyAllocation(                _initialContributorPool,                _emission.sub(IERC20(_token).totalSupply().sub(prevSupply))            );        }        emit TokenEmission(_emission);        _updateEmission();    }"