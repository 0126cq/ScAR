"function awardInvation(bytes32 _teamId) public {    require(teams[_teamId].Owner == msg.sender);    require(now >= teams[_teamId].awardTime);    require(!teams[_teamId].isCharge);    uint totalUndeadsTime;    uint totalStar;    uint dieNumber;    uint[] memory zb =  teams[_teamId].Zombies;    for(i=0;i<zb.length;i++){        totalUndeadsTime += zombies[zb[i]].undeadsTime;        totalStar += zombiemain.seeZombieStar(zb[i]);    }    if(totalStar<areas[teams[_teamId].areaID].starLimit){        dieNumber = totalStar*9500/(areas[teams[_teamId].areaID].starLimit)+totalUndeadsTime*10;    }else{        dieNumber = totalStar*100/(areas[teams[_teamId].areaID].starLimit)+9500+totalUndeadsTime;    }    if(dieNumber <= uint(keccak256(teams[_teamId].teamHash, now, block.blockhash(block.number-1),block.blockhash(teams[_teamId].blocknumber))) % 10000) {      for(uint16 i = 0; i<zb.length; i++){        zombies[zb[ii]].readyTime = uint32(now + 7 days);        zombies[zb[ii]].undeadsTime = 0;        zombies[zb[ii]].notAtHome = false;      }      AwardInvation(_teamId, false, 0);    } else {      for(uint16 ii = 0; ii<zb.length; ii++){        zombies[zb[ii]].undeadsTime ++;        zombies[zb[ii]].notAtHome = false;      }      zombietoken.<mask0>;      AwardInvation(_teamId, true, areas[teams[_teamId].areaID].ZOBRevenue);    }    teams[_teamId].isCharge = true;    areas[teams[_teamId].areaID].TotalTeamCount --;  }"