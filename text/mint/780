"function _deposit(uint256 amount, uint256 maturationTimestamp) internal {        require(            amount >= MinDepositAmount && amount <= MaxDepositAmount,            \"DInterest: Deposit amount out of range\"        );        uint256 depositPeriod = maturationTimestamp.sub(now);        require(            depositPeriod >= MinDepositPeriod &&                depositPeriod <= MaxDepositPeriod,            \"DInterest: Deposit period out of range\"        );        amount = _applyDepositFee(amount);        totalDeposit = totalDeposit.add(amount);        uint256 interestAmount = calculateInterestAmount(amount, depositPeriod);        require(interestAmount > 0, \"DInterest: interestAmount == 0\");        uint256 id = deposits.length.add(1);        unfundedUserDepositAmount = unfundedUserDepositAmount.add(amount).add(            interestAmount        );        totalInterestOwed = totalInterestOwed.add(interestAmount);        uint256 mintMPHAmount =            mphMinter.mintDepositorReward(                msg.sender,                amount,                depositPeriod,                interestAmount            );        deposits.push(            Deposit({                amount: amount,                maturationTimestamp: maturationTimestamp,                interestOwed: interestAmount,                initialMoneyMarketIncomeIndex: moneyMarket.incomeIndex(),                active: true,                finalSurplusIsNegative: false,                finalSurplusAmount: 0,                mintMPHAmount: mintMPHAmount,                depositTimestamp: now            })        );        stablecoin.safeTransferFrom(msg.sender, address(this), amount);        stablecoin.safeIncreaseAllowance(address(moneyMarket), amount);        moneyMarket.deposit(amount);        depositNFT.<mask0>;        emit EDeposit(            msg.sender,            id,            amount,            maturationTimestamp,            interestAmount,            mintMPHAmount        );    }"