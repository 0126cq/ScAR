"function _createPooled(Derivative memory _derivative, uint256 _quantity, address _address) private {        CreatePooledLocalVars memory vars;        vars.syntheticAggregator = SyntheticAggregator(registry.getSyntheticAggregator());        vars.derivativeLogic = IDerivativeLogic(_derivative.syntheticId);        vars.marginToken = IERC20(_derivative.token);        vars.tokenSpender = TokenSpender(registry.getTokenSpender());        vars.tokenMinter = TokenMinter(registry.getMinter());        bytes32 derivativeHash = getDerivativeHash(_derivative);        require(vars.syntheticAggregator.isPool(derivativeHash, _derivative), ERROR_CORE_NOT_POOL);        require(!cancelled[derivativeHash], ERROR_CORE_TICKER_WAS_CANCELLED);        require(vars.derivativeLogic.validateInput(_derivative), ERROR_CORE_SYNTHETIC_VALIDATION_ERROR);        (uint256 margin, ) = vars.syntheticAggregator.getMargin(derivativeHash, _derivative);        require(vars.marginToken.allowance(msg.sender, address(vars.tokenSpender)) >= margin.mul(_quantity), ERROR_CORE_NOT_ENOUGH_TOKEN_ALLOWANCE);        vars.tokenSpender.claimTokens(vars.marginToken, msg.sender, address(this), margin.mul(_quantity));        poolVaults[_derivative.syntheticId][_derivative.token] = poolVaults[_derivative.syntheticId][_derivative.token].add(margin.mul(_quantity));        vars.tokenMinter.<mask0>;        emit Created(_address, address(0), derivativeHash, _quantity);    }"