"function updatePool(uint256 _pid) public {        PoolInfo storage pool = poolInfo[_pid];        if (block.number <= pool.lastRewardBlock) {            return;        }        uint256 lpSupply = pool.lpToken.balanceOf(address(this));        if (_pid == 0){            lpSupply = depositedHelix;        }        if (lpSupply <= 0) {            pool.lastRewardBlock = block.number;            return;        }        uint256 blockDelta = getMultiplier(pool.lastRewardBlock, block.number);        uint256 toMintPerBlock = _getStakeToMintPerBlock();        uint256 helixTokenReward = blockDelta * toMintPerBlock * pool.allocPoint / (totalAllocPoint);        pool.accHelixTokenPerShare = pool.accHelixTokenPerShare + (helixTokenReward * (1e12) / (lpSupply));        pool.lastRewardBlock = block.number;        helixToken.<mask0>;        emit PoolUpdated(_pid);    }"