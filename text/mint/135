"function presaleMint(uint256 quantity, bytes32[] memory proof)        public        payable    {        bytes32 _contractState = keccak256(abi.encodePacked(contractState));        require(            _contractState == presale1State || _contractState == presale2State,            \"Presale minting is not active\"        );        uint256 _mintPrice = _contractState == presale1State            ? mintPriceDiscounted            : mintPrice;        require(            msg.value >= _mintPrice * quantity,            \"Insufficient value for presale mint\"        );        if (_contractState == presale1State) {            uint256 balance = getExternalBalance(presale1address, msg.sender);            require(balance > 0, \"Not holding any Eternal Fragments\");        }        uint256 currentBalance = balanceOf(msg.sender);        uint256 presalePoolSize = maxSupply -            (nWhitelisted * presaleGuaranteedTokens) -            reservedTokens;        uint256 remainingPresalePool = presalePoolSize -            presalePoolTokensClaimed;        uint256 remainingGuaranteedTokens = currentBalance >            presaleGuaranteedTokens            ? 0            : presaleGuaranteedTokens - currentBalance;        uint256 mintableTokens = remainingGuaranteedTokens +            remainingPresalePool;        require(mintableTokens >= quantity, \"Presale supply is exhausted\");        bytes32 leaf = keccak256(abi.encodePacked(msg.sender));        require(verify(proof, leaf), \"Proof is not valid\");        <mask0>;    }"