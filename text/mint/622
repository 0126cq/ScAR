"function exercise(uint index, uint amount) external payable override {        Option storage option = _options[index];        uint strikePrice = _decodeFloat(option.strikePrice);        bool orientation = option.orientation;        uint exerciseBlock = uint(option.exerciseBlock);        require(block.number >= exerciseBlock, \"FEO:at maturity\");        option.balances[msg.sender] -= amount;        (, uint oraclePrice) = INestPriceFacade(NEST_PRICE_FACADE_ADDRESS).findPrice {            value: msg.value        } (USDT_TOKEN_ADDRESS, exerciseBlock, msg.sender);        uint gain = 0;        if (orientation) {            if (oraclePrice > strikePrice) {                gain = amount * (oraclePrice - strikePrice) / USDT_BASE;            }        }         else {            if (oraclePrice < strikePrice) {                gain = amount * (strikePrice - oraclePrice) / USDT_BASE;            }        }        if (gain > 0) {            DCU(DCU_TOKEN_ADDRESS).<mask0>;        }        emit Exercise(index, amount, msg.sender, gain);    }"