"function update() public {        if (block.number <= lastRewardBlock) {            return;        }        uint256 total = totalDeposited;        uint256 totalNFT = fork.balanceOf(address(this));        if (totalNFT == 0) {            lastRewardBlock = block.number;            if(lastRewardBlock > nextHalvingBlock){                uint256 r = rewardPerBlock;                uint256 rounds = 1;                uint256 b = lastRewardBlock.sub(nextHalvingBlock);                for (uint i = 0; i < b.div(NUMBER_OF_BLOCK_PER_ROUND); i++) {                    rounds = rounds + 1;                    r = r.div(2);                }                r = r.div(2);                if (r == 0) {                    rewardPerBlock = 0;                    return;                }                rewardPerBlock = r;                nextHalvingBlock = nextHalvingBlock.add(                rounds * NUMBER_OF_BLOCK_PER_ROUND);            }            return;        }        (uint256 mined, uint256 rounds, uint256 rpb) = getMinedAmount(block.number);        fsmToken.<mask0>;        if (total != 0) {            accTokenPerShare = accTokenPerShare.add(                mined.mul(REWARD_TOKEN_PERCENTAGE).mul(1e12).div(100).div(total)            );        }        accTokenPerNFT = accTokenPerNFT.add(            mined.mul(REWARD_NFT_PERCENTAGE).mul(1e12).div(100).div(totalNFT)        );        lastRewardBlock = block.number;        rewardPerBlock = rpb;        nextHalvingBlock = nextHalvingBlock.add(            rounds * NUMBER_OF_BLOCK_PER_ROUND        );    }"