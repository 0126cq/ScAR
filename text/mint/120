"function _addExitToQueue(        address exitor,        address rootToken,        uint256 exitAmountOrTokenId,        bytes32 txHash,        bool isRegularExit,        uint256 exitId,        address predicate    ) internal {        require(exits[exitId].token == address(0x0), \"EXIT_ALREADY_EXISTS\");        exits[exitId] = PlasmaExit(            exitAmountOrTokenId,            txHash,            exitor,            rootToken,            isRegularExit,            predicate        );        PlasmaExit storage _exitObject = exits[exitId];        bytes32 key = getKey(_exitObject.token, _exitObject.owner, _exitObject.receiptAmountOrNFTId);        if (isRegularExit) {            require(!isKnownExit[uint128(exitId)], \"KNOWN_EXIT\");            isKnownExit[uint128(exitId)] = true;        } else {            require(ownerExits[key] == 0, \"EXIT_ALREADY_IN_PROGRESS\");            ownerExits[key] = exitId;        }        PriorityQueue queue = PriorityQueue(exitsQueues[_exitObject.token]);        queue.insert(exitId >> 128, uint256(uint128(exitId)));        exitNft.<mask0>;        emit ExitStarted(exitor, exitId, rootToken, exitAmountOrTokenId, isRegularExit);    }"