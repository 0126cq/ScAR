"function buyBonds(uint256 _pegAmount, uint256 targetPrice) external onlyOneBlock checkCondition checkOperator nonReentrant {        require(_pegAmount > 0, \"Treasury: cannot purchase bonds with zero amount\");        uint256 pegPrice = getPegPrice();        require(pegPrice == targetPrice, \"Treasury: SRN price moved\");        require(            pegPrice < pegPriceOne,             \"Treasury: pegPrice not eligible for bond purchase\"        );        require(_pegAmount <= epochSupplyContractionLeft, \"Treasury: not enough bond left to purchase\");        uint256 _rate = getBondDiscountRate();        require(_rate > 0, \"Treasury: invalid bond rate\");        uint256 _bondAmount = _pegAmount.mul(_rate).div(1e18);        uint256 pegSupply = getPegCirculatingSupply();        uint256 newBondSupply = IERC20(sbond_).totalSupply().add(_bondAmount);        require(newBondSupply <= pegSupply.mul(maxDebtRatioPercent).div(10000), \"over max debt ratio\");        IBasisAsset(peg_).burnFrom(msg.sender, _pegAmount);        try IBasisAsset(sbond_).<mask0> { } catch { revert(\"Treasury: bond minting failed\"); }        epochSupplyContractionLeft = epochSupplyContractionLeft.sub(_pegAmount);        _updatePegPrice();        emit BoughtBonds(msg.sender, _pegAmount, _bondAmount);    }"