"function _claim(address account, uint256[] calldata tokenIds, uint256 _pid, bool _unstake) internal {    uint256 tokenId;    uint256 earned = 0;    vaultInfo storage vaultid = VaultInfo[_pid];    for (uint i = 0; i < tokenIds.length; i++) {      tokenId = tokenIds[i];      Stake memory staked = vault[tokenId];      require(staked.owner == account, \"not an owner\");      uint256 stakedAt = staked.timestamp;      earned += 10 ether * (block.timestamp - stakedAt) / 7 days;      vault[tokenId] = Stake({        owner: account,        tokenId: uint24(tokenId),        timestamp: uint48(block.timestamp)      });    }    if (earned > 0) {      vaultid.token.<mask0>;    }    if (_unstake) {      _unstakeMany(account, tokenIds, _pid);    }    emit Claimed(account, earned);  }"