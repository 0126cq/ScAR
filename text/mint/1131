"function mintShareAndSell(uint256 _rideId, uint256 _amount, uint256 _tokenIdFee, uint256 _quantizedAmtFee, uint256 _vaultIdFee) external onlyOwner {        RideInfo memory rideInfo = rideInfos[_rideId];        require(rideInfo.tokenIdInput != 0, \"ride assets info not registered\");        require(prices[_rideId] != 0, \"price not set\");        require(slippages[_rideId] != 0, \"slippage not set\");        require(ridesShares[_rideId] == 0, \"already mint for this ride\");         if (_tokenIdFee != 0) {            _checkValidTokenId(_tokenIdFee);        }        IShareToken(rideInfo.share).<mask0>;        IERC20(rideInfo.share).safeIncreaseAllowance(onchainVaults, _amount);        IOnchainVaults(onchainVaults).depositERC20ToVault(rideInfo.tokenIdShare, _rideId, _amount / rideInfo.quantumShare);        _submitOrder(OrderAssetInfo(rideInfo.tokenIdShare, _amount / rideInfo.quantumShare, _rideId),             OrderAssetInfo(rideInfo.tokenIdInput, _amount / rideInfo.quantumInput, _rideId), OrderAssetInfo(_tokenIdFee, _quantizedAmtFee, _vaultIdFee));        ridesShares[_rideId] = _amount;        emit MintAndSell(_rideId, _amount, prices[_rideId], slippages[_rideId]);    }"