"function allocateSeigniorage() external onlyOneBlock checkCondition checkEpoch checkOperator {        _updatePegPrice();        previousEpochPegPrice = getPegPrice();        uint256 pegSupply = getPegCirculatingSupply().sub(seigniorageSaved);        if (epoch < bootstrapEpochs) {            _sendToBoardroom(pegSupply.mul(bootstrapSupplyExpansionPercent).div(10000));        } else {            if (previousEpochPegPrice > pegPriceCeiling) {                uint256 bondSupply = IERC20(sbond_).totalSupply();                uint256 _percentage = previousEpochPegPrice.sub(pegPriceOne);                uint256 _savedForBond;                uint256 _savedForBoardroom;                uint256 _mse = _calculateMaxSupplyExpansionPercent(pegSupply).mul(1e14);                if (_percentage > _mse) {                    _percentage = _mse;                }                if (seigniorageSaved >= bondSupply.mul(bondDepletionFloorPercent).div(10000)) {                    _savedForBoardroom = pegSupply.mul(_percentage).div(1e18);                } else {                    uint256 _seigniorage = pegSupply.mul(_percentage).div(1e18);                    _savedForBoardroom = _seigniorage.mul(seigniorageExpansionFloorPercent).div(10000);                    _savedForBond = _seigniorage.sub(_savedForBoardroom);                    if (mintingFactorForPayingDebt > 0) {                        _savedForBond = _savedForBond.mul(mintingFactorForPayingDebt).div(10000);                    }                }                if (_savedForBoardroom > 0) {                    _sendToBoardroom(_savedForBoardroom);                }                if (_savedForBond > 0) {                    seigniorageSaved = seigniorageSaved.add(_savedForBond);                    try IBasisAsset(peg_).<mask0> {} catch { revert(\"Treasury: peg minting failed\"); }                    emit TreasuryFunded(block.timestamp, _savedForBond);                }            }        }    }"