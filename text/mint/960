"function mint(uint256 mintAmount, address receiver)        external        nonReentrant        returns (            uint256 amount0,            uint256 amount1,            uint128 liquidityMinted        )    {        require(mintAmount > 0, \"mint 0\");        uint256 totalSupply = totalSupply();        (uint160 sqrtRatioX96, , , , , , ) = pool.slot0();        if (totalSupply > 0) {            (uint256 amount0Current, uint256 amount1Current) =                getUnderlyingBalances();            amount0 = FullMath.mulDivRoundingUp(                amount0Current,                mintAmount,                totalSupply            );            amount1 = FullMath.mulDivRoundingUp(                amount1Current,                mintAmount,                totalSupply            );        } else {            (amount0, amount1) = LiquidityAmounts.getAmountsForLiquidity(                sqrtRatioX96,                _lowerTick.getSqrtRatioAtTick(),                _upperTick.getSqrtRatioAtTick(),                uint128(mintAmount)            );        }        if (amount0 > 0) {            token0.safeTransferFrom(msg.sender, address(this), amount0);        }        if (amount1 > 0) {            token1.safeTransferFrom(msg.sender, address(this), amount1);        }        liquidityMinted = LiquidityAmounts.getLiquidityForAmounts(            sqrtRatioX96,            _lowerTick.getSqrtRatioAtTick(),            _upperTick.getSqrtRatioAtTick(),            token0.balanceOf(address(this)) - _adminBalanceToken0,            token1.balanceOf(address(this)) - _adminBalanceToken1        );        pool.<mask0>;        _mint(receiver, mintAmount);        emit Minted(receiver, mintAmount, amount0, amount1, liquidityMinted);    }"