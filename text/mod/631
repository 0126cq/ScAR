"function rebase() public {        require(msg.sender == tx.origin || msg.sender == gov);        _inRebaseWindow();        require(lastRebaseTimestampSec.add(minRebaseTimeIntervalSec) < now);        lastRebaseTimestampSec = now.sub(now.<mask0>).add(            rebaseWindowOffsetSec        );        epoch = epoch.add(1);        uint256 exchangeRate = getExchangeRate();        (uint256 offPegPerc, bool positive) = computeOffPegPerc(exchangeRate);        uint256 indexDelta = offPegPerc;        indexDelta = indexDelta.div(rebaseLag);        YUANTokenInterface yuan = YUANTokenInterface(yuanAddress);        if (positive) {            require(                yuan.yuansScalingFactor().mul(BASE.add(indexDelta)).div(BASE) <                    yuan.maxScalingFactor(),                \"new scaling factor will be too big\"            );        }        uint256 currSupply = yuan.totalSupply();        uint256[3] memory mintAmounts;        if (positive) {            uint256 rebaseMintPerc = rebaseMintPercs[0] +                rebaseMintPercs[1] +                rebaseMintPercs[2];            uint256 mintPerc = indexDelta.mul(rebaseMintPerc).div(BASE);            mintAmounts[0] = currSupply                .mul(indexDelta.mul(rebaseMintPercs[0]).div(BASE))                .div(BASE);            mintAmounts[1] = currSupply                .mul(indexDelta.mul(rebaseMintPercs[1]).div(BASE))                .div(BASE);            mintAmounts[2] = currSupply                .mul(indexDelta.mul(rebaseMintPercs[2]).div(BASE))                .div(BASE);            indexDelta = indexDelta.sub(mintPerc);        }        yuan.rebase(epoch, indexDelta, positive);        afterRebase(mintAmounts, offPegPerc);    }"