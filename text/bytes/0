"function execute(    Call[] calldata calls  ) external override onlyOwner() returns (    bool[] memory ok,    bytes[] memory returnData  ) {    for (uint256 i = 0; i < calls.length; i++) {      if (calls[i].value == 0) {        _ensureValidGenericCallTarget(calls[i].to);      }    }    ok = new bool[](calls.length);    returnData = new <mask0>;    _selfCallContext = this.execute.selector;    (bool externalOk, bytes memory rawCallResults) = address(this).call(      abi.encodeWithSelector(        this._execute.selector, calls      )    );    if (!externalOk) {      delete _selfCallContext;    }    CallReturn[] memory callResults = abi.decode(rawCallResults, (CallReturn[]));    for (uint256 i = 0; i < callResults.length; i++) {      Call memory currentCall = calls[i];      ok[i] = callResults[i].ok;      returnData[i] = callResults[i].returnData;      if (callResults[i].ok) {        emit CallSuccess(          !externalOk,           currentCall.to,          uint256(currentCall.value),          currentCall.data,          callResults[i].returnData        );      } else {        emit CallFailure(          currentCall.to,          uint256(currentCall.value),          currentCall.data,          _decodeRevertReason(callResults[i].returnData)        );        break;      }    }  }"