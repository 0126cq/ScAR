"function oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset) internal returns (bool) {        bool sigok;        bytes memory sig2 = new <mask0>;        copyBytes(proof, sig2offset, sig2.length, sig2, 0);        bytes memory appkey1_pubkey = new bytes(64);        copyBytes(proof, 3+1, 64, appkey1_pubkey, 0);        bytes memory tosign2 = new bytes(1+65+32);        tosign2[0] = 1;         copyBytes(proof, sig2offset-65, 65, tosign2, 1);        bytes memory CODEHASH = hex\"fd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c\";        copyBytes(CODEHASH, 0, 32, tosign2, 1+65);        sigok = verifySig(sha256(tosign2), sig2, appkey1_pubkey);        if (sigok == false) return false;        bytes memory LEDGERKEY = hex\"7fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4\";        bytes memory tosign3 = new bytes(1+65);        tosign3[0] = 0xFE;        copyBytes(proof, 3, 65, tosign3, 1);        bytes memory sig3 = new bytes(uint(proof[3+65+1])+2);        copyBytes(proof, 3+65, sig3.length, sig3, 0);        sigok = verifySig(sha256(tosign3), sig3, LEDGERKEY);        return sigok;    }"