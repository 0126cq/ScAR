"function oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit) internal returns (bytes32){        require((_nbytes > 0) && (_nbytes <= 32));        _delay *= 10;        bytes memory nbytes = new <mask0>;        nbytes[0] = byte(_nbytes);        bytes memory unonce = new bytes(32);        bytes memory sessionKeyHash = new bytes(32);        bytes32 sessionKeyHash_bytes32 = oraclize_randomDS_getSessionPubKeyHash();        assembly {            mstore(unonce, 0x20)            mstore(add(unonce, 0x20), xor(blockhash(sub(number, 1)), xor(coinbase, timestamp)))            mstore(sessionKeyHash, 0x20)            mstore(add(sessionKeyHash, 0x20), sessionKeyHash_bytes32)        }        bytes memory delay = new bytes(32);        assembly {            mstore(add(delay, 0x20), _delay)        }        bytes memory delay_bytes8 = new bytes(8);        copyBytes(delay, 24, 8, delay_bytes8, 0);        bytes[4] memory args = [unonce, nbytes, sessionKeyHash, delay];        bytes32 queryId = oraclize_query(\"random\", args, _customGasLimit);        bytes memory delay_bytes8_left = new bytes(8);        assembly {            let x := mload(add(delay_bytes8, 0x20))            mstore8(add(delay_bytes8_left, 0x27), div(x, 0x100000000000000000000000000000000000000000000000000000000000000))            mstore8(add(delay_bytes8_left, 0x26), div(x, 0x1000000000000000000000000000000000000000000000000000000000000))            mstore8(add(delay_bytes8_left, 0x25), div(x, 0x10000000000000000000000000000000000000000000000000000000000))            mstore8(add(delay_bytes8_left, 0x24), div(x, 0x100000000000000000000000000000000000000000000000000000000))            mstore8(add(delay_bytes8_left, 0x23), div(x, 0x1000000000000000000000000000000000000000000000000000000))            mstore8(add(delay_bytes8_left, 0x22), div(x, 0x10000000000000000000000000000000000000000000000000000))            mstore8(add(delay_bytes8_left, 0x21), div(x, 0x100000000000000000000000000000000000000000000000000))            mstore8(add(delay_bytes8_left, 0x20), div(x, 0x1000000000000000000000000000000000000000000000000))        }        oraclize_randomDS_setCommitment(queryId, keccak256(delay_bytes8_left, args[1], sha256(args[0]), args[2]));        return queryId;    }"