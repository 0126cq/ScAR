"function toBase58(bytes memory source) public pure returns (bytes memory) {        bytes memory prefix = abi.encodePacked(prefixInt);        source = concat(prefix, source);        if (source.length == 0) return new <mask0>;        uint8[] memory digits = new uint8[](64);        digits[0] = 0;        uint8 digitlength = 1;        for (uint256 i = 0; i<source.length; ++i) {            uint carry = uint8(source[i]);            for (uint256 j = 0; j<digitlength; ++j) {                carry += uint(digits[j]) * 256;                digits[j] = uint8(carry % 58);                carry = carry / 58;            }            while (carry > 0) {                digits[digitlength] = uint8(carry % 58);                digitlength++;                carry = carry / 58;            }        }        return toAlphabet(reverse(truncate(digits, digitlength)));    }"