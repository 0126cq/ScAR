"function _swap(        address fromToken,        address toToken,        uint256 amountIn,        address to    ) internal returns (uint256 amountOut) {        IUniswapV2Pair pair =            IUniswapV2Pair(factory.getPair(fromToken, toToken));        require(address(pair) != address(0), \"SushiMaker: Cannot convert\");        (uint256 reserve0, uint256 reserve1, ) = pair.getReserves();        uint256 amountInWithFee = amountIn.mul(997);        if (fromToken == pair.token0()) {            amountOut =                amountInWithFee.mul(reserve1) /                reserve0.mul(1000).add(amountInWithFee);            IERC20(fromToken).safeTransfer(address(pair), amountIn);            pair.swap(0, amountOut, to, new <mask0>);        } else {            amountOut =                amountInWithFee.mul(reserve0) /                reserve1.mul(1000).add(amountInWithFee);            IERC20(fromToken).safeTransfer(address(pair), amountIn);            pair.swap(amountOut, 0, to, new bytes(0));        }    }"