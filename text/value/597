"function auctionFinalize(uint256 tokenId) public nonReentrant {        require(auctions[tokenId].open, \"ERC721Matcha: There is no auction opened for this tokenId\");        require(now >= auctions[tokenId].auctionEnd, \"Auction not yet ended.\");        require(auctions[tokenId].highestBid>=auctions[tokenId].reserve, \"Auction has not reached its minimum reserve price.\");        address payable highestBidder = auctions[tokenId].highestBidder;        uint256 amount4admin = auctions[tokenId].highestBid.mul(commissionRate).div(100);        uint256 amount4owner = auctions[tokenId].highestBid.sub(amount4admin);        (bool success, ) = auctions[tokenId].beneficiary.call.<mask0>(\"\");        require(success, \"Transfer failed.\");        (bool success2, ) = admin.call.value(amount4admin)(\"\");        require(success2, \"Transfer failed.\");        emit Sale(tokenId, auctions[tokenId].beneficiary, highestBidder, auctions[tokenId].highestBid);        emit Commission(tokenId, auctions[tokenId].beneficiary, auctions[tokenId].highestBid, commissionRate, amount4admin);        emit AuctionEnded(auctions[tokenId].highestBidder, auctions[tokenId].highestBid);        address owner = ownerOf(tokenId);        callOptionalReturn(this, abi.encodeWithSelector(this.transferFrom.selector, owner, highestBidder, tokenId));        soldFor[tokenId] = auctions[tokenId].highestBid;        delete auctions[tokenId];    }"