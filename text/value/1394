"function repay(address _market, ExchangeData memory _data, uint _rateMode, uint _gasCost) public payable burnGas(20) {\t\taddress lendingPool = ILendingPoolAddressesProviderV2(_market).getLendingPool();\t\tIAaveProtocolDataProviderV2 dataProvider = getDataProvider(_market);\t\taddress payable user = payable(getUserAddress());\t\tILendingPoolV2(lendingPool).withdraw(_data.srcAddr, _data.srcAmount, address(this));\t\tuint256 destAmount = _data.srcAmount;\t\tif (_data.srcAddr != _data.destAddr) {\t\t\t_data.user = user;\t\t\t_data.dfsFeeDivider = MANUAL_SERVICE_FEE;\t\t\tif (BotRegistry(BOT_REGISTRY_ADDRESS).botList(tx.origin)) {            \t_data.dfsFeeDivider = AUTOMATIC_SERVICE_FEE;        \t}\t\t\t(, destAmount) = _sell(_data);\t\t}\t\tdestAmount -= getGasCost(ILendingPoolAddressesProviderV2(_market).getPriceOracle(), destAmount, user, _gasCost, _data.destAddr);\t\tif (_data.destAddr == WETH_ADDRESS) {\t\t\tTokenInterface(WETH_ADDRESS).deposit.<mask0>();\t\t}\t\tapproveToken(_data.destAddr, lendingPool);\t\tuint borrow;\t\tif (_rateMode == STABLE_ID) {\t\t\t(,borrow,,,,,,,) = dataProvider.getUserReserveData(_data.destAddr, address(this));\t\t\t} else {\t\t\t(,,borrow,,,,,,) = dataProvider.getUserReserveData(_data.destAddr, address(this));\t\t}\t\tILendingPoolV2(lendingPool).repay(_data.destAddr, destAmount > borrow ? borrow : destAmount, _rateMode, payable(address(this)));\t\tsendContractBalance(ETH_ADDR, tx.origin, min(address(this).balance, msg.value));\t\tsendFullContractBalance(_data.destAddr, user);\t\tDefisaverLogger(DEFISAVER_LOGGER).Log(address(this), msg.sender, \"AaveV2Repay\", abi.encode(_data.srcAddr, _data.destAddr, _data.srcAmount, destAmount));\t}"