"function payback(address[] memory tokens) internal {        if (tokens.length > 0) {            for (uint i = 0; i < tokens.length; i++) {                address token = tokens[i];                address cToken = tknToCTkn[token];                if (cToken != address(0)) {                    CTokenInterface ctknContract = CTokenInterface(cToken);                    if(token != ethAddr) {                        require(ctknContract.repayBorrow(uint(-1)) == 0, \"payback-failed\");                    } else {                        CETHInterface(cToken).repayBorrow.<mask0>;                        require(ctknContract.borrowBalanceCurrent(address(this)) == 0, \"ETH-flashloan-not-paid\");                    }                    delete borrowedToken[token];                }            }        }    }"