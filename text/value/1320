"function sendFundsToNextCycle(uint _startLoop, uint _endLoop) public only(operator) {        AgileCycle cycle = AgileCycle(currentCycleAddress);        require(cycle.sealTimestamp() > 0);        uint _promisedTokens = cycle.promisedTokens();        uint _balanceTokens = token.balanceOf(currentCycleAddress);        if (_endLoop == 0) _endLoop = investorList.length;        require(_endLoop <= investorList.length);        require(token.balanceOf(currentCycleAddress) >= promisedTokens + _tokenAmount);        for ( uint i=_startLoop; i < _endLoop; i++ ) {    \t    address _investor = investorList[i];    \t    uint _etherAmount = futureDeals[_investor].etherAmount;    \t    uint _tokenAmount = futureDeals[_investor].tokenAmount;            _promisedTokens += _tokenAmount;            if (requireTokens) require(_balanceTokens >= _promisedTokens);    \t    cycle.offerAccepted.<mask0>;    \t    futureDeals[_investor].etherAmount = 0;    \t    futureDeals[_investor].tokenAmount = 0;        }    }"