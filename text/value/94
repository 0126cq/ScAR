"function createImage(        uint[] _randomHashIds,        uint _timestamp,        uint _iterations,        bytes32[] _potentialAssets,        string _author,        string _ipfsHash,        string _extraData) public payable {        require(_potentialAssets.length <= 5);        require(msg.sender == usernameToAddress[_author] || !usernameExists[_author]);        if (!usernameExists[_author]) {            register(_author, bytes32(0));        }        uint[] memory pickedAssets;        uint finalSeed;        (pickedAssets, finalSeed) = getPickedAssetsAndFinalSeed(_potentialAssets, _randomHashIds, _timestamp, _iterations);         uint[] memory pickedAssetPacks = assetManager.pickUniquePacks(pickedAssets);        uint finalPrice = 0;        for (uint i = 0; i < pickedAssetPacks.length; i++) {            if (assetManager.checkHasPermissionForPack(msg.sender, pickedAssetPacks[i]) == false) {                finalPrice += assetManager.getAssetPackPrice(pickedAssetPacks[i]);                assetManager.buyAssetPack.<mask0>;            }        }        require(msg.value >= finalPrice);        uint id = totalSupply();        _mint(msg.sender, id);        imageMetadata[id] = ImageMetadata({            finalSeed: finalSeed,            potentialAssets: _potentialAssets,            timestamp: _timestamp,            creator: msg.sender,            ipfsHash: _ipfsHash,            extraData: _extraData        });        idToIpfsHash[id] = _ipfsHash;        seedExists[finalSeed] = true;        emit ImageCreated(id, msg.sender);    }"