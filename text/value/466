"function _closeERC20ToEther(        uint256 id,        uint256 fee,        bool isFeeInSwap    )    private    onlyOpenSwaps(id)    {        Swap storage swap = _swaps[id];        if(isFeeInSwap){            require(msg.value >= swap.closeValue, \"[Validation] Enough ETH not sent\");            uint256 minRequiredFeeInSwap = getFeeInSwapForETH(swap.closeValue);            uint256 feeDiff = 0;            if( fee < minRequiredFeeInSwap ) {                feeDiff = minRequiredFeeInSwap.sub(fee);                uint256 feeSlippagePercentage = feeDiff.mul(100).div(minRequiredFeeInSwap);                require(feeSlippagePercentage < _allowedFeeSlippagePercentage, \"[Validation] Fee (SWAP) is below minimum required fee\");            }            _distributeFees(minRequiredFeeInSwap);        }        else {            uint256 minRequiredFeeInEth = getFeeInEthForEth(swap.closeValue);            require(fee >= minRequiredFeeInEth, \"[Validation] Fee (ETH) is below minimum required fee\");            require(msg.value >= swap.closeValue.add(minRequiredFeeInEth), \"[Validation] Enough ETH not sent\");            (bool success,) = _feesWallet.call.value(minRequiredFeeInEth)(\"\");            require(success, \"[Validation] Transfer of fee failed\");        }        swap.status = Status.CLOSED;        IERC20 openERC20Contract = IERC20(swap.openContractAddress);        require(openERC20Contract.transfer(swap.closeTrader, swap.openValue));        (bool success,) = swap.openTrader.call.<mask0>;        require(success, \"[Validation] Transfer of eth failed\");        emit Close(id);    }"