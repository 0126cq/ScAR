"function callFunction(        address sender,        Account.Info memory account,        bytes memory data    ) public {        (            address collateralToken,            address borrowToken,            uint256 ethAmount,            address user,            address proxy        )        = abi.decode(data, (address,address,uint256,address,address));        TokenInterface(WETH_ADDRESS).withdraw(ethAmount);        address lendingPoolCoreAddress = ILendingPoolAddressesProvider(AAVE_LENDING_POOL_ADDRESSES).getLendingPoolCore();        address lendingPool = ILendingPoolAddressesProvider(AAVE_LENDING_POOL_ADDRESSES).getLendingPool();        address aCollateralToken = ILendingPool(lendingPoolCoreAddress).getReserveATokenAddress(collateralToken);        address aBorrowToken = ILendingPool(lendingPoolCoreAddress).getReserveATokenAddress(borrowToken);        DSProxy(payable(proxy)).execute{value: ethAmount}(BASIC_PROXY, abi.encodeWithSignature(\"deposit(address,uint256)\", ETH_ADDR, ethAmount));        (,uint256 borrowAmount,,uint256 borrowRateMode,,,uint256 originationFee,,,) = ILendingPool(lendingPool).getUserReserveData(borrowToken, user);        borrowAmount += originationFee;        DSProxy(payable(proxy)).execute(BASIC_PROXY, abi.encodeWithSignature(\"borrow(address,uint256,uint256)\", borrowToken, borrowAmount, borrowRateMode));        ERC20(borrowToken).safeApprove(proxy, borrowAmount);        DSProxy(payable(proxy)).execute(BASIC_PROXY, abi.encodeWithSignature(\"paybackOnBehalf(address,address,uint256,bool,address)\", borrowToken, aBorrowToken, 0, true, user));        ERC20(aCollateralToken).safeTransferFrom(user, proxy, ERC20(aCollateralToken).balanceOf(user));        DSProxy(payable(proxy)).execute(BASIC_PROXY, abi.encodeWithSignature(\"setUserUseReserveAsCollateralIfNeeded(address)\", collateralToken));        DSProxy(payable(proxy)).execute(BASIC_PROXY, abi.encodeWithSignature(\"withdraw(address,address,uint256,bool)\", ETH_ADDR, AETH_ADDRESS, ethAmount, false));        TokenInterface(WETH_ADDRESS).deposit.<mask0>;        ERC20(WETH_ADDRESS).safeTransfer(proxy, ethAmount+2);    }"