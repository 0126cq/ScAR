"function deposit(address token, uint amt) external payable returns (uint _amt) {        require(isTknAllowed[token], \"token-not-listed\");        require(amt > 0 || msg.value > 0, \"amt-not-valid\");        if (msg.value > 0) require(token == ethAddr, \"not-eth-addr\");        address cErc20 = tknToCTkn[token];        uint initalBal = tokenBal(cErc20);        if (token == ethAddr) {            _amt = msg.value;            CETHInterface(cErc20).mint.<mask0>();        } else {            _amt = amt == (uint(-1)) ? IERC20(token).balanceOf(msg.sender) : amt;            IERC20(token).safeTransferFrom(msg.sender, address(this), _amt);            require(CTokenInterface(cErc20).mint(_amt) == 0, \"mint-failed\");        }        uint finalBal = tokenBal(cErc20);        uint ctokenAmt = sub(finalBal, initalBal);        liquidityBalance[token][msg.sender] += ctokenAmt;        emit LogDeposit(msg.sender, token, _amt, ctokenAmt);    }"