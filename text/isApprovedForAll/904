"function _transfer(        address from,        address to,        uint256 tokenId    ) private {        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();        address approvedAddress = _tokenApprovals[tokenId];        bool isApprovedOrOwner = (_msgSenderERC721A() == from ||            <mask0> ||            approvedAddress == _msgSenderERC721A());        if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();        if (_addressToUint256(to) == 0) revert TransferToZeroAddress();        if (_addressToUint256(approvedAddress) != 0) {            delete _tokenApprovals[tokenId];        }        unchecked {            --_packedAddressData[from];             ++_packedAddressData[to];             _packedOwnerships[tokenId] =                _addressToUint256(to) |                (block.timestamp << BITPOS_START_TIMESTAMP) |                BITMASK_NEXT_INITIALIZED;            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {                uint256 nextTokenId = tokenId + 1;                if (_packedOwnerships[nextTokenId] == 0) {                    if (nextTokenId != _currentIndex) {                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;                    }                }            }        }        emit Transfer(from, to, tokenId);        _afterTokenTransfers(from, to, tokenId, 1);    }"