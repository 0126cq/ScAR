"function _transfer (      address _from,      address _to,      uint256 _id    ) private {        address previousOwner = _ownershipOf(_id);        bool isApprovedOrOwner = (_msgSender() == previousOwner)        || (<mask0>)        || (getApproved(_id) == _msgSender());        if (!isApprovedOrOwner) { revert (\"TransferCallerNotOwnerNorApproved\"); }        if (previousOwner != _from) { revert (\"TransferFromIncorrectOwner\"); }        if (_to == address(0)) { revert (\"TransferToZeroAddress\"); }        if (allTransfersLocked) { revert (\"TransferIsLockedGlobally\"); }        if (transferLocks[_id]) { revert (\"TransferIsLocked\"); }        _approve(previousOwner, address(0), _id);        unchecked {          balances[_from] -= 1;          balances[_to] += 1;          owners[_id] = _to;          uint256 nextTokenId = _id + 1;          if (owners[nextTokenId] == address(0) && _exists(nextTokenId)) {              owners[nextTokenId] = previousOwner;          }        }        emit Transfer(_from, _to, _id);    }"