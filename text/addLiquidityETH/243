"function swapBack() internal swapping {        uint256 amountToLiquify = _balances[address(this)].div(2);        uint256 amountToSwap = _balances[address(this)].sub(amountToLiquify);        address[] memory path = new address[](2);        path[0] = address(this);        path[1] = WETH;        uint256 balanceBefore = address(this).balance;        router.swapExactTokensForETHSupportingFeeOnTransferTokens(            amountToSwap,            0,            path,            address(this),            block.timestamp+360        );        uint256 amountETH = address(this).balance.sub(balanceBefore);        uint256 totalETHFee = totalFee.sub(liquidityFee.div(2));        uint256 amountETHLiquidity = amountETH.mul(liquidityFee).div(totalETHFee).div(2);        uint256 amountETHMarketing = amountETH.mul(marketingFee).div(totalETHFee);        (bool sent, ) = payable(marketingFeeReceiver).call{value: amountETHMarketing, gas: 30000}(\"\");        require(sent, \"Failed to send Ether\");        if(amountToLiquify > 0){            router.<mask0>;            emit AutoLiquify(amountETH, amountToLiquify);        }    }"