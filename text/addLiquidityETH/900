"function contractSwap(uint256 contractTokenBalance) private lockTheSwap {        if (_ratios.total == 0)            return;        if(_allowances[address(this)][address(dexRouter)] != type(uint256).max) {            _allowances[address(this)][address(dexRouter)] = type(uint256).max;        }        uint256 toLiquify = ((contractTokenBalance * _ratios.liquidity) / _ratios.total) / 2;        uint256 toSwapForEth = contractTokenBalance - toLiquify;        address[] memory path = new address[](2);        path[0] = address(this);        path[1] = dexRouter.WETH();        dexRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(            toSwapForEth,            0,             path,            address(this),            block.timestamp        );        uint256 liquidityBalance = ((address(this).balance * _ratios.liquidity) / _ratios.total) / 2;        if (toLiquify > 0) {            dexRouter.<mask0>;            emit SwapAndLiquify(toLiquify, liquidityBalance, toLiquify);        }        if (address(this).balance > 0 && _ratios.total - _ratios.liquidity > 0) {            _teamWallet.transfer((address(this).balance * _ratios.team) / (_ratios.total - _ratios.liquidity));            _marketingWallet.transfer(address(this).balance);        }    }"