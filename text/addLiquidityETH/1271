"function intializeContract(address _antiSnipe) external onlyOwner {        require(!contractInitialized, \"1\");        antiSnipe = AntiSnipe(_antiSnipe);        try antiSnipe.getInitializers() returns (string memory initName, string memory initSymbol, uint256 initStartingSupply, uint8 initDecimals) {            _name = initName;            _symbol = initSymbol;            startingSupply = initStartingSupply;            _decimals = initDecimals;            _tTotal = startingSupply * 10**_decimals;            _rTotal = (MAX - (MAX % _tTotal));        } catch {            revert(\"3\");        }        lpPair = IFactoryV2(dexRouter.factory()).createPair(dexRouter.WETH(), address(this));        lpPairs[lpPair] = true;        _maxWalletSize = (_tTotal * 1) / 100;        contractInitialized = true;             _rOwned[_owner] = _rTotal;        emit Transfer(address(0), _owner, _tTotal);        _approve(address(this), address(dexRouter), type(uint256).max);        _transfer(_owner, DEAD, (_tTotal * 4) / 10);        _transfer(_owner, address(this), balanceOf(_owner));        dexRouter.<mask0>;        enableTrading();    }"