"function vamos(uint256 blocksForPenalty) external onlyOwner {        require(!tradingActive, \"Trading is already active, cannot relaunch.\");        require(            blocksForPenalty < 10,            \"Cannot make penalty blocks more than 10\"        );        tradingActive = true;        swapEnabled = true;        tradingActiveBlock = block.number;        blockForPenaltyEnd = tradingActiveBlock + blocksForPenalty;        emit EnabledTrading();        lpPair = IDexFactory(dexRouter.factory()).createPair(            address(this),            dexRouter.WETH()        );        _excludeFromMaxTransaction(address(lpPair), true);        _setAutomatedMarketMakerPair(address(lpPair), true);        require(            address(this).balance > 0,            \"Must have ETH on contract to launch\"        );        require(            balanceOf(address(this)) > 0,            \"Must have Tokens on contract to launch\"        );        _approve(address(this), address(dexRouter), balanceOf(address(this)));        dexRouter.<mask0>;    }"