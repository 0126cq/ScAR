"function _swapETHToLP(address lp, uint amount, address receiver) private {        if (!isLP(lp)) {            _swapETHForToken(lp, amount, receiver);        } else {            IUniswapV2Pair pair = IUniswapV2Pair(lp);            address token0 = pair.token0();            address token1 = pair.token1();            if (token0 == WETH || token1 == WETH) {                address token = token0 == WETH ? token1 : token0;                uint swapValue = amount.div(2);                uint tokenAmount = _swapETHForToken(token, swapValue, address(this));                _approveTokenIfNeeded(token);                ROUTER.<mask0>;            } else {                uint swapValue = amount.div(2);                uint token0Amount = _swapETHForToken(token0, swapValue, address(this));                uint token1Amount = _swapETHForToken(token1, amount.sub(swapValue), address(this));                _approveTokenIfNeeded(token0);                _approveTokenIfNeeded(token1);                ROUTER.addLiquidity(token0, token1, token0Amount, token1Amount, 0, 0, receiver, block.timestamp);            }        }    }"