"function getAccruedRewards(ERC20 strategy, uint32 lastUpdatedTimestamp)        external        override        onlyFlywheel        returns (uint256 amount)    {        RewardsCycle memory cycle = rewardsCycle[strategy];        uint32 timestamp = block.timestamp.safeCastTo32();        uint32 latest = timestamp >= cycle.end ? cycle.end : timestamp;        uint32 earliest = lastUpdatedTimestamp <= cycle.start ? cycle.start : lastUpdatedTimestamp;        if (cycle.end != 0) {            amount = (cycle.reward * (latest - earliest)) / (cycle.end - cycle.start);            <mask0>;         }        if (timestamp >= cycle.end) {            uint32 end = ((timestamp + rewardsCycleLength) / rewardsCycleLength) * rewardsCycleLength;            uint192 rewards = getNextCycleRewards(strategy);            rewardsCycle[strategy] = RewardsCycle({start: timestamp, end: end, reward: rewards});            emit NewRewardsCycle(timestamp, end, rewards);        }    }"