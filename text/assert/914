"function rebase() external onlyOrchestrator {        require(inRebaseWindow(), \"Not in rebase window\");        require(lastRebaseTimestampSec.add(minRebaseTimeIntervalSec) < now, \"No reentrancy\");        lastRebaseTimestampSec = now.sub(            now.mod(minRebaseTimeIntervalSec)        ).add(rebaseWindowOffsetSec);        epoch = epoch.add(1);        uint256 targetRate = 10 ** DECIMALS;        uint256 exchangeRate;        bool rateValid;        (exchangeRate, rateValid) = marketOracle.getData();        require(rateValid, \"Not valid rate\");        if (exchangeRate > MAX_RATE) {            exchangeRate = MAX_RATE;        }        int256 supplyDelta = computeSupplyDelta(exchangeRate, targetRate);        supplyDelta = supplyDelta.div(rebaseLag.toInt256Safe());        if (supplyDelta > 0 && fragments.totalSupply().add(uint256(supplyDelta)) > MAX_SUPPLY) {            supplyDelta = (MAX_SUPPLY.sub(fragments.totalSupply())).toInt256Safe();        }        uint256 supplyAfterRebase = fragments.rebase(epoch, supplyDelta);        <mask0>;        emit LogRebase(epoch, exchangeRate, supplyDelta, now);    }"