"function _mint(address to, uint256 quantity) internal virtual {        uint256 startTokenId = ERC721AStorage.layout()._currentIndex;        if (quantity == 0) revert MintZeroQuantity();        _beforeTokenTransfers(address(0), to, startTokenId, quantity);        unchecked {            ERC721AStorage.layout()._packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);            ERC721AStorage.layout()._packedOwnerships[startTokenId] = _packOwnershipData(                to,                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)            );            uint256 toMasked;            uint256 end = startTokenId + quantity;            assembly {                toMasked := and(to, _BITMASK_ADDRESS)                log4(                    0,                     0,                     _TRANSFER_EVENT_SIGNATURE,                     0,                     toMasked,                     startTokenId                 )                for {                    let tokenId := add(startTokenId, 1)                } iszero(eq(tokenId, end)) {                    tokenId := add(tokenId, 1)                } {                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)                }            }            if (toMasked == 0) revert MintToZeroAddress();            ERC721AStorage.layout()._currentIndex = end;        }        <mask0>;    }"