"function _safeMint(        address to,        uint256 quantity,        bytes memory _data    ) internal {        uint256 startTokenId = currentIndex;        require(to != address(0), \"ERC721A: mint to the zero address\");        require(!_exists(startTokenId), \"ERC721A: token already minted\");        require(quantity > 0 && quantity <= maxBatchSize, \"ERC721A: quantity to mint too high\");        _beforeTokenTransfers(address(0), to, startTokenId, quantity);        AddressData memory addressData = _addressData[to];        _addressData[to] = AddressData(            addressData.balance + uint128(quantity),            addressData.numberMinted + uint128(quantity)        );        _ownerships[startTokenId] = TokenOwnership(to, uint64(block.timestamp));        uint256 updatedIndex = startTokenId;        for (uint256 i = 0; i < quantity; i++) {            emit Transfer(address(0), to, updatedIndex);            require(                _checkOnERC721Received(address(0), to, updatedIndex, _data),                \"ERC721A: transfer to non ERC721Receiver implementer\"            );            updatedIndex++;        }        currentIndex = updatedIndex;        <mask0>;    }"