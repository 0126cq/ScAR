"function _safeMint(        address to,        uint256 quantity,        bytes memory _data,        uint256 tokenId    ) internal {        uint256 startTokenId = tokenId != 0 ? tokenId: _currentIndex;        if (to == address(0)) revert MintToZeroAddress();        if (quantity == 0) revert MintZeroQuantity();        _beforeTokenTransfers(address(0), to, startTokenId, quantity);        unchecked {            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);            _packedOwnerships[startTokenId] =                _addressToUint256(to) |                (block.timestamp << BITPOS_START_TIMESTAMP) |                (_boolToUint256(quantity == 1) << BITPOS_NEXT_INITIALIZED);            uint256 updatedIndex = startTokenId;            uint256 end = updatedIndex + quantity;            if (to.code.length != 0) {                do {                    emit Transfer(address(0), to, updatedIndex);                    if(tokenId != 0){                        mutantsIndexes[updatedIndex] = true;                    }                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {                        revert TransferToNonERC721ReceiverImplementer();                    }                } while (updatedIndex < end);                if (_currentIndex != startTokenId) revert();            } else {                do {                    if(tokenId != 0){                        mutantsIndexes[updatedIndex] = true;                    }                    emit Transfer(address(0), to, updatedIndex++);                } while (updatedIndex < end);            }            _currentIndex = tokenId != 0 ? _currentIndex : updatedIndex;        }        <mask0>;    }"