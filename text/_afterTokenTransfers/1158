"function _burn(uint256 tokenId) internal virtual {        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);        _beforeTokenTransfers(prevOwnership.addr, address(0), tokenId, 1);        _approve(address(0), tokenId, prevOwnership.addr);        unchecked {            _addressData[prevOwnership.addr].balance -= 1;            _addressData[prevOwnership.addr].numberBurned += 1;            _ownerships[tokenId].addr = prevOwnership.addr;            _ownerships[tokenId].startTimestamp = uint64(block.timestamp);            _ownerships[tokenId].burned = true;            uint256 nextTokenId = tokenId + 1;            if (_ownerships[nextTokenId].addr == address(0)) {                if (nextTokenId < _currentIndex) {                    _ownerships[nextTokenId].addr = prevOwnership.addr;                    _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp;                }            }        }        emit Transfer(prevOwnership.addr, address(0), tokenId);        <mask0>;        unchecked {            _burnCounter++;        }    }"