"function _safeMint(        address to,        uint256 quantity,        bytes memory _data    ) internal {        uint256 startTokenId = ERC721AStorage.layout()._currentIndex;        if (_addressToUint256(to) == 0) revert MintToZeroAddress();        if (quantity == 0) revert MintZeroQuantity();        _beforeTokenTransfers(address(0), to, startTokenId, quantity);        unchecked {            ERC721AStorage.layout()._packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);            ERC721AStorage.layout()._packedOwnerships[startTokenId] =                _addressToUint256(to) |                (block.timestamp << BITPOS_START_TIMESTAMP) |                (_boolToUint256(quantity == 1) << BITPOS_NEXT_INITIALIZED);            uint256 updatedIndex = startTokenId;            uint256 end = updatedIndex + quantity;            if (to.code.length != 0) {                do {                    emit Transfer(address(0), to, updatedIndex);                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {                        revert TransferToNonERC721ReceiverImplementer();                    }                } while (updatedIndex < end);                if (ERC721AStorage.layout()._currentIndex != startTokenId) revert();            } else {                do {                    emit Transfer(address(0), to, updatedIndex++);                } while (updatedIndex < end);            }            ERC721AStorage.layout()._currentIndex = updatedIndex;        }        <mask0>;    }"