"function _computeTakerTokenFillAmount(        TransformData memory data,        FillState memory state,        uint256 orderTakerAmount,        uint256 orderMakerAmount,        uint256 orderTakerTokenFeeAmount    )        private        pure        returns (uint256 takerTokenFillAmount)    {        if (data.side == Side.Sell) {            takerTokenFillAmount = data.fillAmount.safeSub(state.soldAmount);            if (orderTakerTokenFeeAmount != 0) {                takerTokenFillAmount = LibMathV06.getPartialAmountCeil(                    takerTokenFillAmount,                    orderTakerAmount.safeAdd(orderTakerTokenFeeAmount),                    orderTakerAmount                );            }        } else {             takerTokenFillAmount = LibMathV06.getPartialAmountCeil(                data.fillAmount.<mask0>,                orderMakerAmount,                orderTakerAmount            );        }        return LibSafeMathV06.min256(            LibSafeMathV06.min256(takerTokenFillAmount, orderTakerAmount),            state.takerTokenBalanceRemaining        );    }"