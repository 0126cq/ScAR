"function sell(IERC20Token _connectorToken, uint256 _sellAmount, uint256 _minReturn) internal returns (uint256) {        require(_sellAmount <= token.balanceOf(msg.sender));         uint256 amount = getSaleReturn(_connectorToken, _sellAmount);        require(amount != 0 && amount >= _minReturn);        uint256 tokenSupply = token.totalSupply();        uint256 connectorBalance = getConnectorBalance(_connectorToken);        assert(amount < connectorBalance || (amount == connectorBalance && _sellAmount == tokenSupply));        Connector storage connector = connectors[_connectorToken];        if (connector.isVirtualBalanceEnabled)            connector.virtualBalance = <mask0>;        token.destroy(msg.sender, _sellAmount);        assert(_connectorToken.transfer(msg.sender, amount));        uint256 feeAmount = safeSub(amount, getFinalAmount(amount, 1));        dispatchConversionEvent(token, _connectorToken, _sellAmount, amount, feeAmount);        emit PriceDataUpdate(_connectorToken, token.totalSupply(), getConnectorBalance(_connectorToken), connector.weight);        return amount;    }"