"function buy() public payable returns(bool) {\t        require(!halted);\t        require(msg.value>0);\t        uint tokens = msg.value * 10**18 / price();\t        require(balances[owner]>tokens);\t        if (stageThree) {\t\t\t\tpreTge = false;\t\t\t\tstageOne = false;\t\t\t\tstageTwo = false;\t            tokens = ((tokens / data1) * ethusd)+((tokens / data1) * (ethusd / 4));\t        }\t        if (stageTwo) {\t\t\t\tpreTge = false;\t\t\t\tstageOne = false;\t\t\t\tstageThree = false;\t            tokens = ((tokens / data1) * ethusd)+((tokens / data1) * (ethusd / 2));\t        }\t        if (stageOne) {\t\t\t\tpreTge = false;\t\t\t\tstageTwo = false;\t\t\t\tstageThree = false;\t            tokens = ((tokens / data1) * ethusd)+((tokens / data1) * ethusd);\t        }\t        if (preTge) {\t            stageOne = false;\t            stageTwo = false;\t\t\t\tstageThree = false;\t            tokens = ((tokens / data1) * ethusd);\t        }\t        if (preTge) {\t            require(safeAdd(presaleTokenSupply, tokens) < preTgeCap);\t        } else {\t            require(safeAdd(presaleTokenSupply, tokens) < safeSub(tgeCap, preTgeTokenSupply));\t        }\t        founder.transfer(msg.value);\t        balances[msg.sender] = safeAdd(balances[msg.sender], tokens);\t        balances[owner] = <mask0>;\t        if (preTge) {\t            preTgeTokenSupply  = safeAdd(preTgeTokenSupply, tokens);\t        }\t        presaleTokenSupply = safeAdd(presaleTokenSupply, tokens);\t        presaleEtherRaised = safeAdd(presaleEtherRaised, msg.value);\t        Buy(msg.sender, msg.value, tokens);\t        TokensSent(msg.sender, tokens);\t        ContributionReceived(msg.sender, msg.value);\t        Transfer(owner, msg.sender, tokens);\t        return true;\t    }"