"function order(uint256 packSize, string memory referralCode) public payable onlyWhenEnabled {        console.log(\"operation:order sender:%s value:%s pack:%s\", msg.sender, msg.value, packSize);        require(            packSize == 1 || packSize == PACK_NUMBER,            \"Invalid pack size\"        );        require(            soldNumber + packSize <= MAX_NFT_NUMBER,            \"Max supply reached\"        );        uint256 price;        if (packSize == 1) {            price = getLatestPrice();        } else {            price = getLatestPackPrice();        }        console.log(\"price:%s\", price, \" value:\", msg.value);        require(            msg.value >= price,            \"Insufficient payment\"        );        bytes32 requestID = _getRandomNumber(soldNumber);        waitingOrders[requestID] = MintContext(msg.sender, price, packSize);        soldNumber = soldNumber.safeAdd(packSize);        emit RNGRequest(requestID);        if (msg.value.safeSub(price) > 0) {            (bool success, ) =                msg.sender.call{value: msg.value.safeSub(price)}(\"\");            require(success, \"Refund failed\");            console.log(\"operation:refund user:%s value:%s\", msg.sender, msg.value.<mask0>);        }        _fundReferral(referralCode, price);    }"