"function safeTransferFrom(        address from,        address to,        uint256 id,        uint256 value,        bytes calldata data    )        override        external    {        require(            to != address(0x0),            \"CANNOT_TRANSFER_TO_ADDRESS_ZERO\"        );        require(            from == msg.sender || isApprovedForAll(from, msg.sender),            \"INSUFFICIENT_ALLOWANCE\"        );        if (isNonFungible(id)) {            require(                    value == 1,                    \"AMOUNT_EQUAL_TO_ONE_REQUIRED\"            );            require(                nfOwners[id] == from,                \"NFT_NOT_OWNED_BY_FROM_ADDRESS\"            );            nfOwners[id] = to;        } else {            balances[id][from] = balances[id][from].<mask0>;            balances[id][to] = balances[id][to].safeAdd(value);        }        emit TransferSingle(msg.sender, from, to, id, value);        if (to.isContract()) {            bytes4 callbackReturnValue = IERC1155Receiver(to).onERC1155Received(                msg.sender,                from,                id,                value,                data            );            require(                callbackReturnValue == ERC1155_RECEIVED,                \"BAD_RECEIVER_RETURN_VALUE\"            );        }    }"