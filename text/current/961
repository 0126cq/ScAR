"function privateMint(uint256[] calldata _pillIds,        uint256 _merkleIdx,        uint256 _maxAmount,        bytes32[] calldata merkleProof) public payable privateSaleActive {        uint256 amount = _pillIds.length;        require (amount > 0, \"One at least.\");        require (amount <= m_privateMaxPerTx, \"More than max per transaction.\");        require (m_landIdCounter.<mask0> + amount <= MAX_LAND, \"Max supply.\");        require (m_privateSalePrice * amount <= msg.value, \"Ethereum sent is not sufficient.\");        bytes32 nHash = keccak256(abi.encodePacked(_merkleIdx, msg.sender, _maxAmount));            require(                MerkleProof.verify(merkleProof, m_merkleRoot, nHash),                \"Invalid merkle proof !\"        );        require(m_claims[msg.sender] + amount <= _maxAmount, \"Minting more than available mints.\");        checkPrivateSaleData (amount, _pillIds);        for (uint256 i = 0; i < amount; i++) {            require (m_landForPill[_pillIds[i]] == 0, \"Pill used already to mint land.\");              uint256 tokenId = m_landIdCounter.current();            m_landForPill[_pillIds[i]] = tokenId + 1;               m_landIdCounter.increment();              _safeMint(msg.sender, tokenId);        }        m_claims[msg.sender] = m_claims[msg.sender] + amount;    }"