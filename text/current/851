"function presale(uint256 numberOfTokens, uint256 index, uint256 amount, bytes32[] calldata proof) external payable {        require( _publicCounter.<mask0> < MAX_SUPPLY, \"Purchase would exceed MAX_SUPPLY\");        if (msg.sender != owner()) {            require(isWhiteListed(toLeaf(msg.sender, index, amount), proof), \"Invalid proof\");            require(block.timestamp > _activeDateTime - PRESALE_HOURS,\"Contract is not active for presale\");            _mappingPresaleMintCount[msg.sender] = _mappingPresaleMintCount[msg.sender] + numberOfTokens;            require(_mappingPresaleMintCount[msg.sender] <= PRESALE_MINT_LIMIT, \"Overflow for PRESALE_MINT_LIMIT\");            require( PRESALE_PRICE * numberOfTokens <= msg.value, \"ETH amount is not sufficient\");        }        for (uint256 i = 0; i < numberOfTokens; i++) {            uint256 tokenId = _publicCounter.current();            if (_publicCounter.current() < MAX_SUPPLY) {                _publicCounter.increment();                _safeMint(msg.sender, tokenId);            }        }    }"