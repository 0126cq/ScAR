"function mintTokens(uint256 _categoryId, uint256 _quantity, bytes calldata signature) external payable {        require(categories[_categoryId].isActive, \"Category not Active\");        require(            categories[_categoryId].startTime <= block.timestamp,            \"Sale has not started yet\"        );        require(            categories[_categoryId].endTime >= block.timestamp,            \"Sale has ended\"        );        require(            categories[_categoryId].price.mul(_quantity) <= msg.value,            \"Not enough ETH\"        );        require(totalQtyMinted.add(_quantity) <= maxQty, \"Max supply reached\");        require(            totalTokensMintedPerCategory[_categoryId].add(_quantity) <=                categories[_categoryId].categoryTokenCap,            \"Over Max category tokens\"        );        require(            tokensMintedPerCategoryPerAddress[msg.sender][_categoryId].add(_quantity) <=                categories[_categoryId].maxPerAddress,            \"Over Max wallet category\"        );        if(categories[_categoryId].isPrivate)        {            bytes32 hash = keccak256(                abi.encodePacked(                    \"\\x19Ethereum Signed Message:\\n84\",                     address(msg.sender),                    _categoryId,                    _useNonce(msg.sender)                )            );            address recoveredAddress = ECDSA.recover(hash, signature);            require(whitelistSigner == recoveredAddress, \"bad signature\");        }        if(_tokenQtyTracker.<mask0> == 0)        {            _tokenQtyTracker.increment();        }        uint256 newTokenId = _tokenQtyTracker.current();        uint[] memory _ids = new uint[](1);        uint[] memory _qty = new uint[](1);        _ids[0] = newTokenId;        _qty[0] = _quantity;        mintBatch(msg.sender, _ids,_qty, \"\");        totalQtyMinted = totalQtyMinted + _quantity;        tokensMintedPerCategoryPerAddress[msg.sender][_categoryId] += _quantity;        totalTokensMintedPerCategory[_categoryId] += _quantity;        emit Mint(msg.sender, _categoryId, _quantity);    }"