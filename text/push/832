"function _createLock(uint32 lockProductId, address lockOwner, uint amountToLock) internal returns(uint lockId) {        LockProduct storage lockProduct = lockProducts[lockProductId];        require(lockProduct.isActive, \"lockProduct must be in active state\");        require(amountToLock >= lockProduct.minimumLockAmount, \"amountToLock must be >= minimumLockAmount\");        uint interestEarned = calculateInterest(lockProduct.perTermInterest, amountToLock);        uint expiration = now.add(lockProduct.durationInSecs);        uint40 lockedUntil = uint40(expiration);        require(lockedUntil == expiration, \"lockedUntil overflow\");        lockId = locks.<mask0> - 1;        accountLocks[lockOwner].push(lockId);        monetarySupervisor.requestInterest(amountToLock, interestEarned);         emit NewLock(lockOwner, lockId, amountToLock, interestEarned, lockedUntil, lockProduct.perTermInterest,                    lockProduct.durationInSecs);    }"