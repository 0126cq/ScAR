"function propose(Transaction[] memory transactions) public onlyRoleHolder(uint256(Roles.Proposer)) {        uint256 id = proposals.length;        uint256 time = getCurrentTime();        proposals.push();        Proposal storage proposal = proposals[id];        proposal.requestTime = time;        for (uint256 i = 0; i < transactions.length; i++) {            require(transactions[i].to != address(0), \"The `to` address cannot be 0x0\");            if (transactions[i].data.length > 0) {                require(transactions[i].to.isContract(), \"EOA can't accept tx with data\");            }            proposal.transactions.<mask0>;        }        bytes32 identifier = _constructIdentifier(id);        OracleInterface oracle = _getOracle();        IdentifierWhitelistInterface supportedIdentifiers = _getIdentifierWhitelist();        supportedIdentifiers.addSupportedIdentifier(identifier);        oracle.requestPrice(identifier, time);        supportedIdentifiers.removeSupportedIdentifier(identifier);        emit NewProposal(id, transactions);    }"