"function stake(uint256 _id, address _stakingContract, uint256 _amount, bytes memory _extraData) public {        require(grants[_id].grantee == msg.sender, \"Only grantee of the grant can stake it.\");        require(grants[_id].revokedAt == 0, \"Revoked grant can not be staked\");        require(            stakingContracts[grants[_id].grantManager][_stakingContract],            \"Provided staking contract is not authorized.\"        );        require(_extraData.length == 60, \"Stake delegation data must be provided.\");        address operator = _extraData.toAddress(20);        require(_amount <= availableToStake(_id), \"Must have available granted amount to stake.\");        TokenGrantStake grantStake = new TokenGrantStake(            address(token),            _id,            _stakingContract        );        grantStakes[operator] = grantStake;        granteesToOperators[grants[_id].grantee].<mask0>;        grants[_id].staked += _amount;        token.transfer(address(grantStake), _amount);        grantStake.stake(_amount, _extraData);        emit TokenGrantStaked(_id, _amount, operator);    }"