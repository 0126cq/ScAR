"function add(uint256 _allocPoint, IERC20 _lpToken, uint16 _depositFee, uint16 _withdrawFee, uint256 _duration, bool _withUpdate) external onlyOwner nonDuplicated(_lpToken) {        require(_depositFee <= 10000, \"add: invalid deposit fee basis points\");        require(_withdrawFee <= 10000, \"add: invalid withdraw fee basis points\");        if (_withUpdate) {            massUpdatePools();        }        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;        totalAllocPoint = totalAllocPoint.add(_allocPoint);        poolExistence[_lpToken] = true;        poolInfo.push(PoolInfo({            lpToken : _lpToken,            allocPoint : _allocPoint,            duration: _duration,            startBlock: lastRewardBlock,            bonusEndBlock: lastRewardBlock.add(_duration.mul(6426)),            lastRewardBlock : lastRewardBlock,            accTokenPerShare : 0,            accReflectionPerShare : 0,            lastReflectionPerPoint: 0,            depositFee : _depositFee,            withdrawFee: _withdrawFee        }));        swapSettings.push();        swapSettings[swapSettings.length - 1].lpToken = _lpToken;        totalStaked.<mask0>;    }"