"function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {        require(_functionSelectors.length > 0, \"LibDiamondCut: No selectors in facet to cut\");        DiamondStorage storage ds = diamondStorage();        uint16 selectorCount = uint16(ds.selectors.length);        require(_facetAddress != address(0), \"LibDiamondCut: Add facet can't be address(0)\");        enforceHasContractCode(_facetAddress, \"LibDiamondCut: Add facet has no code\");        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {            bytes4 selector = _functionSelectors[selectorIndex];            address oldFacetAddress = ds.facetAddressAndSelectorPosition[selector].facetAddress;            require(oldFacetAddress == address(0), \"LibDiamondCut: Can't add function that already exists\");            ds.facetAddressAndSelectorPosition[selector] = FacetAddressAndSelectorPosition(_facetAddress, selectorCount);            ds.selectors.<mask0>;            selectorCount++;        }    }"