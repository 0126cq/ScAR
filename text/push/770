"function addStrategy(        address _token,        address _strategy,        uint256 _cap,        address _converter,        bool _canHarvest,        uint256 _timeout    ) external onlyGovernance {        require(!tokenStrategies[_token].active[_strategy], \"active\");        address _want = IStrategy(_strategy).want();        if (_want != IMetaVault(vaults[_token]).want()) {            require(_converter != address(0), \"!_converter\");            converters[_token][_want] = _converter;            IConverter(_converter).setStrategy(_strategy, true);        }        uint256 index = tokenStrategies[_token].strategies.length;        require(index < maxStrategies, \"!maxStrategies\");        tokenStrategies[_token].strategies.<mask0>;        tokenStrategies[_token].caps[_strategy] = _cap;        tokenStrategies[_token].index[_strategy] = index;        tokenStrategies[_token].active[_strategy] = true;        strategyTokens[_strategy] = _token;        if (_canHarvest) {            IHarvester(vaultManager.harvester()).addStrategy(_token, _strategy, _timeout);        }        emit StrategyAdded(_token, _strategy, _cap);    }"