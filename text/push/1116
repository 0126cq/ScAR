"function init(        address _depositToken,        address _stakeToken,        address[] calldata _summoner,        uint256[] calldata _summonerShares,        uint256 _summonerDeposit,        uint256 _proposalDeposit,        uint256 _processingReward,        uint256 _periodDuration,        uint256 _votingPeriodLength,        uint256 _gracePeriodLength,        uint256 _dilutionBound    ) external {        require(!initialized, \"initialized\");        require(_depositToken != _stakeToken, \"depositToken == stakeToken\");        require(_summoner.length == _summonerShares.length, \"summoner != summonerShares\");        require(_proposalDeposit >= _processingReward, \"_processingReward > _proposalDeposit\");        for (uint256 i = 0; i < _summoner.length; i++) {            registerMember(_summoner[i], _summonerShares[i]);            mintGuildToken(_summoner[i], _summonerShares[i]);            totalShares = totalShares.add(_summonerShares[i]);        }        require(totalShares <= MAX_GUILD_BOUND, \"guild maxed\");        tokenWhitelist[_depositToken] = true;        approvedTokens.<mask0>;        if (_summonerDeposit > 0) {            totalGuildBankTokens += 1;            unsafeAddToBalance(GUILD, _depositToken, _summonerDeposit);        }        depositToken = _depositToken;        stakeToken = _stakeToken;        proposalDeposit = _proposalDeposit;        processingReward = _processingReward;        periodDuration = _periodDuration;        votingPeriodLength = _votingPeriodLength;        gracePeriodLength = _gracePeriodLength;        dilutionBound = _dilutionBound;        summoningTime = now;        initialized = true;        _initReentrancyGuard();    }"