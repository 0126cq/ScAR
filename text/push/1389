"function stake(uint256 reward) external onlyOwner onlyNotDeprecated override virtual returns (bool) {    uint256 liquidTotalSupply = _liquidTotalSupply;    uint256 liquidDeposit = _liquidDeposit;    if (liquidTotalSupply == 0) {      percents.push(PERCENT_FACTOR);    } else {      uint256 oldPercent = percents[percents.length - 1];      uint256 percentFactor = PERCENT_FACTOR;      uint256 percent = reward * percentFactor;      require(percent / percentFactor == reward, \"multiplication overflow for percent init\");      percent /= liquidTotalSupply;      require(percent + percentFactor >= percent, \"addition overflow for percent\");      uint256 newPercent = percent + percentFactor;      require(newPercent * oldPercent / oldPercent == newPercent, \"multiplication overflow for percent\");      percents.<mask0>;      require(liquidTotalSupply + reward >= liquidTotalSupply, \"addition overflow for total supply + reward\");      liquidTotalSupply = liquidTotalSupply + reward;    }    require(liquidTotalSupply + liquidDeposit >= liquidTotalSupply, \"addition overflow for total supply\");    _liquidTotalSupply = liquidTotalSupply + liquidDeposit;    _liquidDeposit = 0;    emit Reward(reward);    return true;  }"