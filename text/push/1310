"function sponsorProposal(uint256 proposalId) public nonReentrant  {        Proposal storage proposal = proposals[proposalId];        require(proposal.proposer != address(0), 'proposal must have been proposed');        require(!proposal.flags[0], \"proposal has already been sponsored\");        require(!proposal.flags[3], \"proposal has been cancelled\");        require(members[proposal.applicant].jailed == false, \"proposal applicant must not be jailed\");        if (proposal.tributeOffered > 0 && userTokenBalances[GUILD][proposal.tributeToken] == 0) {            require(approvedTokens.length < MAX_TOKEN_WHITELIST_COUNT, 'cannot sponsor more tribute proposals for new tokens - guildbank is full');        }         if (proposal.flags[4]) {            require(!proposedToKick[proposal.applicant], 'already proposed to kick');            proposedToKick[proposal.applicant] = true;        }        uint256 startingPeriod = max(            getCurrentPeriod(),            proposalQueue.length == 0 ? 0 : proposals[proposalQueue[proposalQueue.length.sub(1)]].startingPeriod        ).add(1);        proposal.startingPeriod = startingPeriod;        address memberAddress = msg.sender;        proposal.sponsor = memberAddress;        proposal.flags[0] = true;         proposalQueue.<mask0>;        emit SponsorProposal(msg.sender, memberAddress, proposalId, proposalQueue.length.sub(1), startingPeriod);    }"