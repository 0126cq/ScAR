"function init(        address[] calldata _founders,        address[] calldata _approvedTokens,        address _daoFee,        uint256 _periodDuration,        uint256 _votingPeriodLength,        uint256 _gracePeriodLength,        uint256 _proposalDepositReward,        uint256 _depositRate,        uint256 _partyGoal,        uint256 _dilutionBound    ) external {        require(!initialized, \"initialized\");        initialized = true;        require(_periodDuration > 0, \"_periodDuration zeroed\");        require(_votingPeriodLength > 0, \"_votingPeriodLength zeroed\");        require(_votingPeriodLength <= MAX_INPUT, \"_votingPeriodLength maxed\");        require(_gracePeriodLength <= MAX_INPUT, \"_gracePeriodLength maxed\");        require(_approvedTokens.length > 0, \"need token\");        depositToken = _approvedTokens[0];        idleToken = _approvedTokens[1];        emit SummonComplete(_founders, _approvedTokens, now, _periodDuration, _votingPeriodLength, _gracePeriodLength, _proposalDepositReward, _depositRate, _partyGoal);        for (uint256 i = 0; i < _approvedTokens.length; i++) {            require(!tokenWhitelist[_approvedTokens[i]], \"token duplicated\");            tokenWhitelist[_approvedTokens[i]] = true;            approvedTokens.<mask0>;        }         for (uint256 i = 0; i < _founders.length; i++) {             _addFounder(_founders[i]);         }        daoFee = _daoFee;        periodDuration = _periodDuration;        votingPeriodLength = _votingPeriodLength;        gracePeriodLength = _gracePeriodLength;        proposalDepositReward = _proposalDepositReward;        depositRate = _depositRate;        partyGoal = _partyGoal;        summoningTime = now;        goalHit = 0;        dilutionBound = _dilutionBound;        _initReentrancyGuard();    }"