"function createMultipleLocks(address _tokenAddress, address _withdrawalAddress, uint256[] memory _amounts, uint256[] memory _unlockTimes) public payable returns (uint256 _id) {        require(_amounts.length > 0);        require(_amounts.length == _unlockTimes.length);        uint256 fee = getSystemFees() * _amounts.length;        if(premium){            if(!premiumMember[_withdrawalAddress]){                require(msg.value>=fee,\"System Fee Required\");                payable(owner).transfer(msg.value);                systemFeeCollected = systemFeeCollected + msg.value;            }        }        uint256 i;        for(i=0; i<_amounts.length; i++){            require(_amounts[i] > 0);            require(_unlockTimes[i] < 10000000000);            walletTokenBalance[_tokenAddress][_withdrawalAddress] = walletTokenBalance[_tokenAddress][_withdrawalAddress].add(_amounts[i]);            _id = ++depositId;            lockedToken[_id].tokenAddress = _tokenAddress;            lockedToken[_id].withdrawalAddress = _withdrawalAddress;            lockedToken[_id].tokenAmount = _amounts[i];            lockedToken[_id].unlockTime = _unlockTimes[i];            lockedToken[_id].withdrawn = false;            allDepositIds.<mask0>;            depositsByWithdrawalAddress[_withdrawalAddress].push(_id);            require(Token(_tokenAddress).transferFrom(msg.sender, address(this), _amounts[i]));        }    }"