"function _delegateTo(address fromDelegator, address toValidator, uint256 amount) internal {        require(amount >= _stakingConfig.getMinStakingAmount() && amount != 0, \"too low\");        require(amount % BALANCE_COMPACT_PRECISION == 0, \"no remainder\");        Validator memory validator = _validatorsMap[toValidator];        require(validator.status != ValidatorStatus.NotFound, \"not found\");        uint64 sinceEpoch = nextEpoch();        ValidatorSnapshot storage validatorSnapshot = _touchValidatorSnapshot(validator, sinceEpoch);        validatorSnapshot.totalDelegated += uint112(amount / BALANCE_COMPACT_PRECISION);        _validatorsMap[toValidator] = validator;        ValidatorDelegation storage delegation = _validatorDelegations[toValidator][fromDelegator];        if (delegation.delegateQueue.length > 0) {            DelegationOpDelegate storage recentDelegateOp = delegation.delegateQueue[delegation.delegateQueue.length - 1];            if (recentDelegateOp.epoch >= sinceEpoch) {                recentDelegateOp.amount += uint112(amount / BALANCE_COMPACT_PRECISION);            } else {                delegation.delegateQueue.push(DelegationOpDelegate({epoch : sinceEpoch, amount : recentDelegateOp.amount + uint112(amount / BALANCE_COMPACT_PRECISION)}));            }        } else {            delegation.delegateQueue.<mask0>;        }        emit Delegated(toValidator, fromDelegator, amount, sinceEpoch);    }"