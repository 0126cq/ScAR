"function receiveApproval(address _from, uint256 _amount, address _token, bytes memory _extraData) public {        require(ERC20Burnable(_token) == token, \"Token contract must be the same one linked to this contract.\");        require(_amount <= token.balanceOf(_from), \"Sender must have enough amount.\");        (address _grantManager,         address _grantee,         uint256 _duration,         uint256 _start,         uint256 _cliffDuration,         bool _revocable,         address _stakingPolicy) = abi.decode(             _extraData,             (address, address, uint256, uint256, uint256, bool, address)        );        require(_grantee != address(0), \"Grantee address can't be zero.\");        require(            _cliffDuration <= _duration,            \"Unlocking cliff duration must be less or equal total unlocking duration.\"        );        require(_stakingPolicy != address(0), \"Staking policy can't be zero.\");        uint256 id = numGrants++;        grants[id] = Grant(            _grantManager,            _grantee,            0, 0, 0,            _revocable,            _amount,            _duration,            _start,            _start.add(_cliffDuration),            0, 0,            GrantStakingPolicy(_stakingPolicy)        );        grantIndices[_from].push(id);        grantIndices[_grantee].<mask0>;        token.safeTransferFrom(_from, address(this), _amount);        balances[_grantee] = balances[_grantee].add(_amount);        emit TokenGrantCreated(id);    }"