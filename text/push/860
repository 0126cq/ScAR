"function enterStrategy(    uint256 id,    address user,    TokenMovement[] calldata tokens  ) external override onlyController {    StrategySummary memory strategy = getStrategy(id);    for (uint256 i = 0; i < tokens.length; i++) {      require(strategies[id].availableTokens[tokens[i].token], \"invalid token\");      _processVirtualFunds(user, tokens[i].token, tokens[i].amount);      tokenWeights[tokens[i].token] = tokens[i].amount;      userStrategyBalances[user][id][tokens[i].token] += tokens[i].amount;      userTokenBalances[user][tokens[i].token] += tokens[i].amount;      tokenBalances[tokens[i].token] += tokens[i].amount;      strategyTokenBalances[id][tokens[i].token] += tokens[i].amount;    }    for (uint256 i = 0; i < strategy.tokens.length; i++) {      Token memory token = strategy.tokens[i];      deployAmount[strategy.integrations[token.integrationPairIdx].integration][        strategy.integrations[token.integrationPairIdx].ammPoolID      ][token.token] += int256(        (tokenWeights[token.token] * token.weight) / TOKEN_WEIGHT      );    }    for (uint256 i = 0; i < tokens.length; i++) {      delete tokenWeights[tokens[i].token];    }    userStrategies[user].<mask0>;    emit EnterStrategy(id, user, tokens);  }"