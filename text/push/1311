"function processAmendGovernance(uint256 proposalIndex) public nonReentrant {        _validateProposalForProcessing(proposalIndex);        uint256 proposalId = proposalQueue[proposalIndex];        Proposal storage proposal = proposals[proposalId];        require(proposal.flags[7], \"not gov amendment\");        proposal.flags[1] = true;         bool didPass = _didPass(proposalIndex);            if (didPass) {                proposal.flags[2] = true;             if(proposal.tributeOffered > 0){                partyGoal = proposal.tributeOffered;            }            if(proposal.paymentRequested > 0){                depositRate = proposal.paymentRequested;            }            if(proposal.tributeToken != depositToken) {                require(!tokenWhitelist[proposal.tributeToken], \"cannot already have whitelisted the token\");                require(approvedTokens.length < MAX_TOKEN_WHITELIST_COUNT, \"too many tokens already\");                approvedTokens.<mask0>;                tokenWhitelist[address(proposal.tributeToken)] = true;            }            if(proposal.paymentToken != address(idleToken) && proposal.paymentToken != depositToken) {                _setIdle(proposal.paymentToken);                approvedTokens.push(proposal.paymentToken);                tokenWhitelist[address(proposal.paymentToken)] = true;            }        }        _returnDeposit();        emit ProcessAmendGovernance(proposalIndex, proposalId, didPass, proposal.tributeToken, proposal.paymentToken, proposal.tributeOffered, proposal.paymentRequested);    }"