"function createPool(        IERC20 rewardToken,        uint256 totalReward,        uint256 openTime,        uint256 closeTime,        PoolType poolType,        uint128 chainId    ) external onlyRole(GUARDIAN_ROLE) {        require(block.timestamp <= openTime, \"only future\");        require(closeTime > openTime, \"invalid time\");        require(totalReward > 0, \"invalid totalReward\");        massUpdatePools();        if (poolType == PoolType.CLAIMABLE) {            require(rewardToken.balanceOf(msg.sender) >= totalReward, \"not enough token balance\");            rewardToken.safeTransferFrom(msg.sender, address(vault), totalReward);        }        poolInfo.push();        PoolInfo storage pool = poolInfo[poolInfo.length - 1];        pool.rewardToken = rewardToken;        pool.totalReward[StakeType.GPOOL] = (totalReward * gpoolRewardPercent) / PERCENT;        pool.totalReward[StakeType.NFT] = totalReward - pool.totalReward[StakeType.GPOOL];        pool.openTime = openTime;        pool.closeTime = closeTime;        pool.lastRewardSecond[StakeType.GPOOL] = openTime;        pool.lastRewardSecond[StakeType.NFT] = openTime;        pool.poolType = poolType;        pool.chainId = chainId;        uint256 pid = poolInfo.length - 1;        poolTypes[poolType].<mask0>;        emit CreatePool(pid, poolType, chainId, address(rewardToken), totalReward, openTime, closeTime);    }"