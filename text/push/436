"function initNewLoan(        address assetAddress,        uint256 amount,        uint32 duration,        uint16 interestRate    ) internal returns (Loan storage loan_) {        require(assetAddress != address(0), \"Teller: asset loan asset null\");        require(            PlatformSettingsLib.getMaximumLoanDurationValue() >= duration,            \"Teller: max loan duration exceeded\"        );        require(            LendingLib.tToken(assetAddress).debtRatioFor(amount) <=                MaxDebtRatioLib.get(assetAddress),            \"Teller: max supply-to-debt ratio exceeded\"        );        uint256 loanID = newID();        loan_ = LibLoans.loan(loanID);        loan_.id = uint128(loanID);        loan_.borrower = payable(msg.sender);        loan_.lendingToken = assetAddress;        loan_.borrowedAmount = amount;        loan_.interestRate = interestRate;        loan_.loanStartTime = uint32(block.timestamp);        loan_.duration = duration;        LibLoans.debt(loanID).principalOwed = loan_.borrowedAmount;        LibLoans.debt(loanID).interestOwed = LibLoans.getInterestOwedFor(            uint256(loanID),            loan_.borrowedAmount        );        MarketStorageLib.store().borrowerLoans[loan_.borrower].<mask0>;    }"