"function isValidClaim( uint256 numPieces,        uint256 amount,        uint256 editionIndex,        bytes32[] calldata merkleProof) internal view returns (bool) {        require(!paused(), \"Claim: claiming is paused\");        require(editions[editionIndex].maxSupply != 0, \"Claim: Edition does not exist\");        require(editions[editionIndex].saleIsOpen, \"Sale is paused\");        require(msg.value >= numPieces.mul(editions[editionIndex].mintPrice), \"Claim: Ether value incorrect\");        require(editions[editionIndex].claimedAddress[msg.sender].add(numPieces) <= amount, \"Claim: Not allowed to claim given amount\");        require(editions[editionIndex].claimedAddress[msg.sender].add(numPieces) <= editions[editionIndex].maxPerWallet, \"Claim: Not allowed to claim that many from one wallet\");        require(numPieces <= editions[editionIndex].maxMintPerTxn, \"Max quantity per transaction exceeded\");        require(<mask0> + numPieces <= editions[editionIndex].maxSupply, \"Purchase would exceed max supply\");        bool isValid = true;        if (editions[editionIndex].merkleProtect)        {            isValid = verifyMerkleProof(merkleProof, editionIndex, amount);            require(                isValid,                \"MerkleDistributor: Invalid proof.\"             );          }        return isValid;    }"