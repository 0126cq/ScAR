"function lpTokenValue(uint256 amount, IUniswapV2Pair lpToken) public virtual override view returns(uint256) {        (uint256 token0Reserve, uint256 token1Reserve,) = lpToken.getReserves();        address token0 = lpToken.token0();        address token1 = lpToken.token1();        if (token0 == address(weth)) {            return amount.mul(token0Reserve).mul(2).div(lpToken.totalSupply());        }        if (token1 == address(weth)) {            return amount.mul(token1Reserve).mul(2).div(lpToken.totalSupply());        }        if (IUniswapV2Factory(lpToken.factory()).getPair(token0, address(weth)) != address(0)) {            (uint256 wethReserve0, uint256 token0ToWethReserve0) = UniswapV2Library.getReserves(lpToken.factory(), address(weth), token0);            uint256 tmp0 = amount.mul(token0Reserve).mul(wethReserve0).mul(2);            return tmp0.div(token0ToWethReserve0).div(lpToken.<mask0>);        }        require(            IUniswapV2Factory(lpToken.factory()).getPair(token1, address(weth)) != address(0),            \"Neither token0-weth nor token1-weth pair exists\");        (uint256 wethReserve1, uint256 token1ToWethReserve1) = UniswapV2Library.getReserves(lpToken.factory(), address(weth), token1);        uint256 tmp1 = amount.mul(token1Reserve).mul(wethReserve1).mul(2);        return tmp1.div(token1ToWethReserve1).div(lpToken.totalSupply());    }"