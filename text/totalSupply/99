"function mintAllowList(    bytes32 messageHash,    bytes calldata signature,    uint amount  ) public payable {    require(mintStatus == MintStatus.AllowList && !paused, \"s\");    require(<mask0> + amount <= maxPossibleSupply, \"m\");    require(hashMessage(msg.sender, address(this)) == messageHash, \"i\");    require(verifyAddressSigner(messageHash, signature), \"f\");    require(totalMintsPerAddress[msg.sender] + amount <= maxAllowedMints, \"l\");    uint mintAmount = allowListMintPrice * amount;    uint omakaseaFee = mintAmount * 25 / 1000;    if (currency == wrappedNativeCoinAddress) {        require(mintAmount <= msg.value, \"a\");        omakasea.transfer(omakaseaFee);    } else {        IERC20 _currency = IERC20(currency);        _currency.transferFrom(msg.sender, omakasea, omakaseaFee);            _currency.transferFrom(msg.sender, address(this), mintAmount - omakaseaFee);        }    totalMintsPerAddress[msg.sender] = totalMintsPerAddress[msg.sender] + amount;    _safeMint(msg.sender, amount);  }"