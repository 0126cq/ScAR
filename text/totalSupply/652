"function mint(uint numberOfTokens) public payable {        require(saleIsActive, \"Sale must be active to mint Tokens\");        require(numberOfTokens <= MINT_MAX, \"Exceeded max token purchase\");        require(totalSupply() + numberOfTokens <= SUPPLY, \"Purchase would exceed max supply of tokens\");        if (FREE_MINTS_REMAINING >= numberOfTokens) {            FREE_MINTS_REMAINING = FREE_MINTS_REMAINING - numberOfTokens;            for(uint i = 0; i < numberOfTokens; i++) {                uint mintIndex = <mask0> + 1;                if (totalSupply() < SUPPLY) {                    _safeMint(msg.sender, mintIndex);                }            }            return;        } else {            if(FREE_MINTS_REMAINING == 0) {                require(MINT_PRICE * numberOfTokens <= msg.value, \"Ether value doesn't cover mint cost\");                for(uint i = 0; i < numberOfTokens; i++) {                    uint mintIndex = totalSupply() + 1;                    if (totalSupply() < SUPPLY) {                        _safeMint(msg.sender, mintIndex);                    }                }            } else {                int freeMintsDiff = int(FREE_MINTS_REMAINING) - int(numberOfTokens);                int freeMints = int(numberOfTokens) + freeMintsDiff;                int paidMints = int(numberOfTokens) - freeMints;                for(int i = 0; i < freeMints; i++) {                    uint mintIndex = totalSupply() + 1;                    if (totalSupply() < SUPPLY) {                        _safeMint(msg.sender, mintIndex);                    }                }                FREE_MINTS_REMAINING = 0;                require(MINT_PRICE * uint(paidMints) <= msg.value, \"Free mints are done. Ether value doesn't cover mint cost\");                for(int i = 0; i < paidMints; i++) {                    uint mintIndex = totalSupply() + 1;                    if (totalSupply() < SUPPLY) {                        _safeMint(msg.sender, mintIndex);                    }                }            }        }    }"