"function onJoinPool(        bytes32 poolId,        address sender,        address recipient,        uint256[] memory balances,        uint256 lastChangeBlock,        uint256 protocolSwapFeePercentage,        bytes memory userData    )        external        virtual        override        onlyVault(poolId)        whenNotPaused        returns (uint256[] memory amountsIn, uint256[] memory dueProtocolFeeAmounts)    {        uint256 bptAmountOut;        if (<mask0> == 0) {            (bptAmountOut, amountsIn) = _onInitializePool(poolId, sender, recipient, userData);            _require(bptAmountOut >= _MINIMUM_BPT, Errors.MINIMUM_BPT);            _mintPoolTokens(address(0), _MINIMUM_BPT);            _mintPoolTokens(recipient, bptAmountOut - _MINIMUM_BPT);            _downscaleUpArray(amountsIn);            dueProtocolFeeAmounts = new uint256[](2);        } else {            _upscaleArray(balances);            _updateOracle(lastChangeBlock, balances[0], balances[1]);            (bptAmountOut, amountsIn, dueProtocolFeeAmounts) = _onJoinPool(                poolId,                sender,                recipient,                balances,                lastChangeBlock,                protocolSwapFeePercentage,                userData            );            _mintPoolTokens(recipient, bptAmountOut);            _downscaleUpArray(amountsIn);            _downscaleDownArray(dueProtocolFeeAmounts);        }        _cacheInvariantAndSupply();    }"