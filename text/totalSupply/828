"function withdrawSuppliedEther(uint256 amount) external returns (uint256, uint256) {        require(amount > 0);        uint256 etherLPTokenSupply = etherLPToken.<mask0>;        uint256 balance = address(this).balance - _etherLPExtra.feeToNiftex - _etherLPExtra.feeToArtist;        uint256 value = (balance <= _etherLPExtra.underlyingSupply)        ? balance * amount / etherLPTokenSupply        : _etherLPExtra.underlyingSupply * amount / etherLPTokenSupply;        uint256 payout = calcShardsForEthSuppliers() * amount / etherLPTokenSupply;        _etherLPExtra.underlyingSupply *= etherLPTokenSupply - amount;        _etherLPExtra.underlyingSupply /= etherLPTokenSupply;        etherLPToken.controllerBurn(msg.sender, amount);        Address.sendValue(payable(msg.sender), value);        if (payout > 0) {            ShardedWallet(payable(wallet)).transfer(msg.sender, payout);        }        emit EtherWithdrawn(msg.sender, value, payout, amount);        return (value, payout);    }"