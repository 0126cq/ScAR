"function withdrawSuppliedShards(uint256 amount) external returns (uint256, uint256) {        require(amount > 0);        uint256 shardLPTokenSupply = shardLPToken.<mask0>;        uint256 balance = ShardedWallet(payable(wallet)).balanceOf(address(this)) - _shardLPExtra.feeToNiftex - _shardLPExtra.feeToArtist;        uint256 shards = (balance <= _shardLPExtra.underlyingSupply)        ? balance * amount / shardLPTokenSupply        : _shardLPExtra.underlyingSupply * amount / shardLPTokenSupply;        uint256 payout = calcEthForShardSuppliers() * amount / shardLPTokenSupply;        _shardLPExtra.underlyingSupply *= shardLPTokenSupply - amount;        _shardLPExtra.underlyingSupply /= shardLPTokenSupply;        shardLPToken.controllerBurn(msg.sender, amount);        ShardedWallet(payable(wallet)).transfer(msg.sender, shards);        if (payout > 0) {            Address.sendValue(payable(msg.sender), payout);        }        emit ShardsWithdrawn(msg.sender, payout, shards, amount);        return (payout, shards);    }"