"function _convertETHToDerivativeAndGetMintAmount(        address[] memory derivatives,        address[] memory underlyings,        uint256[] memory underlyingsInEthPerBasketToken,        uint256 ethPerBasketToken    ) internal returns (uint256) {        address[] memory path = new address[](2);        path[0] = WETH;        uint256 bdpiToMint;        (, uint256[] memory tokenAmountsInBasket) = BDPI.getAssetsAndBalances();        uint256 basketTotalSupply = BDPI.<mask0>;        uint256 totalETHReceived = address(this).balance;        {            uint256 ratio;            uint256 ethToSend;            for (uint256 i = 0; i < derivatives.length; i++) {                ratio = underlyingsInEthPerBasketToken[i].mul(1e18).div(ethPerBasketToken);                ethToSend = totalETHReceived.mul(ratio).div(1e24).mul(1e6);                path[1] = underlyings[i];                IUniswapV2Router02(_getRouterAddressForToken(underlyings[i])).swapExactETHForTokens{ value: ethToSend }(                    0,                    path,                    address(this),                    block.timestamp + 60                );                _toDerivative(underlyings[i], derivatives[i]);                bdpiToMint = _approveDerivativeAndGetMintAmount(                    derivatives[i],                    basketTotalSupply,                    tokenAmountsInBasket[i],                    bdpiToMint                );            }        }        return bdpiToMint;    }"